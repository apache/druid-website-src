"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[2348],{23253:(e,r,i)=>{i.r(r),i.d(r,{assets:()=>a,contentTitle:()=>u,default:()=>c,frontMatter:()=>s,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"release-info/migr-subquery-limit","title":"Migration guide: Subquery limit","description":"\x3c!--","source":"@site/docs/33.0.0/release-info/migr-subquery-limit.md","sourceDirName":"release-info","slug":"/release-info/migr-subquery-limit","permalink":"/docs/33.0.0/release-info/migr-subquery-limit","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"migr-subquery-limit","title":"Migration guide: Subquery limit","sidebar_label":"Subquery limit"},"sidebar":"docs","previous":{"title":"Front-coded dictionaries","permalink":"/docs/33.0.0/release-info/migr-front-coded-dict"},"next":{"title":"SQL compliant mode","permalink":"/docs/33.0.0/release-info/migr-ansi-sql-null"}}');var t=i(74848),o=i(28453);const s={id:"migr-subquery-limit",title:"Migration guide: Subquery limit",sidebar_label:"Subquery limit"},u=void 0,a={},d=[{value:"Row-based subquery limit",id:"row-based-subquery-limit",level:2},{value:"Enable a byte-based subquery limit",id:"enable-a-byte-based-subquery-limit",level:2},{value:"Usage considerations",id:"usage-considerations",level:2},{value:"Learn more",id:"learn-more",level:2}];function l(e){const r={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",p:"p",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.p,{children:"Druid now allows you to set a byte-based limit on subquery size, to prevent brokers from running out of memory when handling large subqueries.\nDruid uses subqueries as joins as well as in common table expressions, such as WITH."}),"\n",(0,t.jsx)(r.p,{children:"The byte-based subquery limit overrides Druid's row-based subquery limit."}),"\n",(0,t.jsx)(r.admonition,{type:"info",children:(0,t.jsx)(r.p,{children:"We recommend that you move towards using byte-based limits starting in Druid 30.0."})}),"\n",(0,t.jsxs)(r.p,{children:["For queries that generate a large number of rows (5 million or more), we recommend that you don't use ",(0,t.jsx)(r.code,{children:"maxSubqueryBytes"})," from the outset.\nYou can increase ",(0,t.jsx)(r.code,{children:"maxSubqueryRows"})," and then configure the byte-based limit if you find that Druid needs it to process the query."]}),"\n",(0,t.jsx)(r.h2,{id:"row-based-subquery-limit",children:"Row-based subquery limit"}),"\n",(0,t.jsxs)(r.p,{children:["Druid uses the ",(0,t.jsx)(r.code,{children:"maxSubqueryRows"})," property to limit the number of rows Druid returns in a subquery.\nBecause this is a row-based limit, it doesn't restrict the overall size of the returned data."]}),"\n",(0,t.jsxs)(r.p,{children:["The ",(0,t.jsx)(r.code,{children:"maxSubqueryRows"})," property is set to 100,000 by default."]}),"\n",(0,t.jsx)(r.h2,{id:"enable-a-byte-based-subquery-limit",children:"Enable a byte-based subquery limit"}),"\n",(0,t.jsxs)(r.p,{children:["Set the optional property ",(0,t.jsx)(r.code,{children:"maxSubqueryBytes"})," to set a maximum number of returned bytes.\nThis property takes precedence over ",(0,t.jsx)(r.code,{children:"maxSubqueryRows"}),"."]}),"\n",(0,t.jsx)(r.h2,{id:"usage-considerations",children:"Usage considerations"}),"\n",(0,t.jsxs)(r.p,{children:["You can set both ",(0,t.jsx)(r.code,{children:"maxSubqueryRows"})," and ",(0,t.jsx)(r.code,{children:"maxSubqueryBytes"})," at cluster level and override them in individual queries.\nSee ",(0,t.jsx)(r.a,{href:"../configuration#overriding-default-query-context-values",children:"Overriding default query context values"})," for more information."]}),"\n",(0,t.jsxs)(r.p,{children:["Make sure you enable the Broker monitor ",(0,t.jsx)(r.code,{children:"SubqueryCountStatsMonitor"})," so that Druid emits metrics for subquery statistics.\nTo do this, add ",(0,t.jsx)(r.code,{children:"org.apache.druid.server.metrics.SubqueryCountStatsMonitor"})," to the ",(0,t.jsx)(r.code,{children:"druid.monitoring.monitors"})," property in your Broker's ",(0,t.jsx)(r.code,{children:"runtime.properties"})," configuration file.\nSee ",(0,t.jsx)(r.a,{href:"/docs/33.0.0/configuration/#metrics-monitors",children:"Metrics monitors"})," for more information."]}),"\n",(0,t.jsx)(r.h2,{id:"learn-more",children:"Learn more"}),"\n",(0,t.jsx)(r.p,{children:"See the following topics for more information:"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.a,{href:"/docs/33.0.0/querying/query-context",children:"Query context"})," for information on setting query context parameters."]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.a,{href:"../configuration#guardrails-for-materialization-of-subqueries",children:"Broker configuration reference"})," for more information on ",(0,t.jsx)(r.code,{children:"maxSubqueryRows"})," and ",(0,t.jsx)(r.code,{children:"maxSubqueryBytes"}),"."]}),"\n"]})]})}function c(e={}){const{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},28453:(e,r,i)=>{i.d(r,{R:()=>s,x:()=>u});var n=i(96540);const t={},o=n.createContext(t);function s(e){const r=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function u(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),n.createElement(o.Provider,{value:r},e.children)}}}]);