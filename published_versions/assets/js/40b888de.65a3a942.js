"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[4160],{28453:(e,t,r)=>{r.d(t,{R:()=>d,x:()=>c});var i=r(96540);const s={},n=i.createContext(s);function d(e){const t=i.useContext(n);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),i.createElement(n.Provider,{value:t},e.children)}},43804:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>o,contentTitle:()=>c,default:()=>a,frontMatter:()=>d,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"operations/tls-support","title":"TLS support","description":"\x3c!--","source":"@site/docs/33.0.0/operations/tls-support.md","sourceDirName":"operations","slug":"/operations/tls-support","permalink":"/docs/33.0.0/operations/tls-support","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"tls-support","title":"TLS support"},"sidebar":"docs","previous":{"title":"Dynamic Config Providers","permalink":"/docs/33.0.0/operations/dynamic-config-provider"},"next":{"title":"Basic cluster tuning","permalink":"/docs/33.0.0/operations/basic-cluster-tuning"}}');var s=r(74848),n=r(28453);const d={id:"tls-support",title:"TLS support"},c=void 0,o={},l=[{value:"General configuration",id:"general-configuration",level:2},{value:"Jetty server configuration",id:"jetty-server-configuration",level:2},{value:"Internal communication over TLS",id:"internal-communication-over-tls",level:2},{value:"Custom certificate checks",id:"custom-certificate-checks",level:2}];function h(e){const t={a:"a",code:"code",h2:"h2",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,n.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h2,{id:"general-configuration",children:"General configuration"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Property"}),(0,s.jsx)(t.th,{children:"Description"}),(0,s.jsx)(t.th,{children:"Default"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"druid.enablePlaintextPort"})}),(0,s.jsx)(t.td,{children:"Enable/Disable HTTP connector."}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"true"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"druid.enableTlsPort"})}),(0,s.jsx)(t.td,{children:"Enable/Disable HTTPS connector."}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"false"})})]})]})]}),"\n",(0,s.jsxs)(t.p,{children:["Although not recommended, the HTTP and HTTPS connectors can both be enabled at a time. The respective ports are configurable using ",(0,s.jsx)(t.code,{children:"druid.plaintextPort"}),"\nand ",(0,s.jsx)(t.code,{children:"druid.tlsPort"})," properties on each process. Please see ",(0,s.jsx)(t.code,{children:"Configuration"})," section of individual processes to check the valid and default values for these ports."]}),"\n",(0,s.jsx)(t.h2,{id:"jetty-server-configuration",children:"Jetty server configuration"}),"\n",(0,s.jsx)(t.p,{children:"Apache Druid uses Jetty as its embedded web server."}),"\n",(0,s.jsxs)(t.p,{children:["To get familiar with TLS/SSL, along with related concepts like keys and certificates,\nread ",(0,s.jsx)(t.a,{href:"https://www.eclipse.org/jetty/documentation/jetty-12/operations-guide/index.html#og-protocols-ssl",children:"Configuring Secure Protocols"})," in the Jetty documentation.\nTo get more in-depth knowledge of TLS/SSL support in Java in general, refer to the ",(0,s.jsx)(t.a,{href:"https://docs.oracle.com/en/java/javase/11/security/java-secure-socket-extension-jsse-reference-guide.html",children:"Java Secure Socket Extension (JSSE) Reference Guide"}),".\nThe ",(0,s.jsx)(t.a,{href:"https://www.eclipse.org/jetty/javadoc/jetty-11/org/eclipse/jetty/util/ssl/SslContextFactory.html",children:"Class SslContextFactory"}),"\nreference doc can help in understanding TLS/SSL configurations listed below. Finally, ",(0,s.jsx)(t.a,{href:"https://docs.oracle.com/en/java/javase/11/docs/specs/security/standard-names.html",children:"Java Cryptography Architecture\nStandard Algorithm Name Documentation for JDK 11"})," lists all possible\nvalues for the configs below, among others provided by Java implementation."]}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Property"}),(0,s.jsx)(t.th,{children:"Description"}),(0,s.jsx)(t.th,{children:"Default"}),(0,s.jsx)(t.th,{children:"Required"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"druid.server.https.keyStorePath"})}),(0,s.jsx)(t.td,{children:"The file path or URL of the TLS/SSL Key store."}),(0,s.jsx)(t.td,{children:"none"}),(0,s.jsx)(t.td,{children:"yes"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"druid.server.https.keyStoreType"})}),(0,s.jsx)(t.td,{children:"The type of the key store."}),(0,s.jsx)(t.td,{children:"none"}),(0,s.jsx)(t.td,{children:"yes"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"druid.server.https.certAlias"})}),(0,s.jsx)(t.td,{children:"Alias of TLS/SSL certificate for the connector."}),(0,s.jsx)(t.td,{children:"none"}),(0,s.jsx)(t.td,{children:"yes"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"druid.server.https.keyStorePassword"})}),(0,s.jsxs)(t.td,{children:["The ",(0,s.jsx)(t.a,{href:"/docs/33.0.0/operations/password-provider",children:"Password Provider"})," or String password for the Key Store."]}),(0,s.jsx)(t.td,{children:"none"}),(0,s.jsx)(t.td,{children:"yes"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"druid.server.https.reloadSslContext"})}),(0,s.jsx)(t.td,{children:"Should Druid server detect Key Store file change and reload."}),(0,s.jsx)(t.td,{children:"false"}),(0,s.jsx)(t.td,{children:"no"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"druid.server.https.reloadSslContextSeconds"})}),(0,s.jsx)(t.td,{children:"How frequently should Druid server scan for Key Store file change."}),(0,s.jsx)(t.td,{children:"60"}),(0,s.jsx)(t.td,{children:"yes"})]})]})]}),"\n",(0,s.jsx)(t.p,{children:"The following table contains configuration options related to client certificate authentication."}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Property"}),(0,s.jsx)(t.th,{children:"Description"}),(0,s.jsx)(t.th,{children:"Default"}),(0,s.jsx)(t.th,{children:"Required"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"druid.server.https.requireClientCertificate"})}),(0,s.jsx)(t.td,{children:"If set to true, clients must identify themselves by providing a TLS certificate, without which connections will fail."}),(0,s.jsx)(t.td,{children:"false"}),(0,s.jsx)(t.td,{children:"no"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"druid.server.https.requestClientCertificate"})}),(0,s.jsxs)(t.td,{children:["If set to true, clients may optionally identify themselves by providing a TLS certificate. Connections will not fail if TLS certificate is not provided. This property is ignored if ",(0,s.jsx)(t.code,{children:"requireClientCertificate"})," is set to true. If ",(0,s.jsx)(t.code,{children:"requireClientCertificate"})," and ",(0,s.jsx)(t.code,{children:"requestClientCertificate"})," are false, the rest of the options in this table are ignored."]}),(0,s.jsx)(t.td,{children:"false"}),(0,s.jsx)(t.td,{children:"no"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"druid.server.https.trustStoreType"})}),(0,s.jsxs)(t.td,{children:["The type of the trust store containing certificates used to validate client certificates. Not needed if ",(0,s.jsx)(t.code,{children:"requireClientCertificate"})," and ",(0,s.jsx)(t.code,{children:"requestClientCertificate"})," are false."]}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"java.security.KeyStore.getDefaultType()"})}),(0,s.jsx)(t.td,{children:"no"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"druid.server.https.trustStorePath"})}),(0,s.jsxs)(t.td,{children:["The file path or URL of the trust store containing certificates used to validate client certificates. Not needed if ",(0,s.jsx)(t.code,{children:"requireClientCertificate"})," and ",(0,s.jsx)(t.code,{children:"requestClientCertificate"})," are false."]}),(0,s.jsx)(t.td,{children:"none"}),(0,s.jsxs)(t.td,{children:["yes, only if ",(0,s.jsx)(t.code,{children:"requireClientCertificate"})," is true"]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"druid.server.https.trustStoreAlgorithm"})}),(0,s.jsxs)(t.td,{children:["Algorithm to be used by TrustManager to validate client certificate chains. Not needed if ",(0,s.jsx)(t.code,{children:"requireClientCertificate"})," and ",(0,s.jsx)(t.code,{children:"requestClientCertificate"})," are false."]}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"javax.net.ssl.TrustManagerFactory.getDefaultAlgorithm()"})}),(0,s.jsx)(t.td,{children:"no"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"druid.server.https.trustStorePassword"})}),(0,s.jsxs)(t.td,{children:["The ",(0,s.jsx)(t.a,{href:"/docs/33.0.0/operations/password-provider",children:"password provider"})," or String password for the Trust Store.  Not needed if ",(0,s.jsx)(t.code,{children:"requireClientCertificate"})," and ",(0,s.jsx)(t.code,{children:"requestClientCertificate"})," are false."]}),(0,s.jsx)(t.td,{children:"none"}),(0,s.jsx)(t.td,{children:"no"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"druid.server.https.validateHostnames"})}),(0,s.jsxs)(t.td,{children:["If set to true, check that the client's hostname matches the CN/subjectAltNames in the client certificate.  Not used if ",(0,s.jsx)(t.code,{children:"requireClientCertificate"})," and ",(0,s.jsx)(t.code,{children:"requestClientCertificate"})," are false."]}),(0,s.jsx)(t.td,{children:"true"}),(0,s.jsx)(t.td,{children:"no"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"druid.server.https.crlPath"})}),(0,s.jsxs)(t.td,{children:["Specifies a path to a file containing static ",(0,s.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Certificate_revocation_list",children:"Certificate Revocation Lists"}),", used to check if a client certificate has been revoked. Not used if ",(0,s.jsx)(t.code,{children:"requireClientCertificate"})," and ",(0,s.jsx)(t.code,{children:"requestClientCertificate"})," are false."]}),(0,s.jsx)(t.td,{children:"null"}),(0,s.jsx)(t.td,{children:"no"})]})]})]}),"\n",(0,s.jsx)(t.p,{children:"The following table contains non-mandatory advanced configuration options, use caution."}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Property"}),(0,s.jsx)(t.th,{children:"Description"}),(0,s.jsx)(t.th,{children:"Default"}),(0,s.jsx)(t.th,{children:"Required"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"druid.server.https.keyManagerFactoryAlgorithm"})}),(0,s.jsxs)(t.td,{children:["Algorithm to use for creating KeyManager, more details ",(0,s.jsx)(t.a,{href:"https://docs.oracle.com/javase/7/docs/technotes/guides/security/jsse/JSSERefGuide.html#KeyManager",children:"here"}),"."]}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"javax.net.ssl.KeyManagerFactory.getDefaultAlgorithm()"})}),(0,s.jsx)(t.td,{children:"no"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"druid.server.https.keyManagerPassword"})}),(0,s.jsxs)(t.td,{children:["The ",(0,s.jsx)(t.a,{href:"/docs/33.0.0/operations/password-provider",children:"Password Provider"})," or String password for the Key Manager."]}),(0,s.jsx)(t.td,{children:"none"}),(0,s.jsx)(t.td,{children:"no"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"druid.server.https.includeCipherSuites"})}),(0,s.jsx)(t.td,{children:"List of cipher suite names to include. You can either use the exact cipher suite name or a regular expression."}),(0,s.jsx)(t.td,{children:"Jetty's default include cipher list"}),(0,s.jsx)(t.td,{children:"no"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"druid.server.https.excludeCipherSuites"})}),(0,s.jsx)(t.td,{children:"List of cipher suite names to exclude. You can either use the exact cipher suite name or a regular expression."}),(0,s.jsx)(t.td,{children:"Jetty's default exclude cipher list"}),(0,s.jsx)(t.td,{children:"no"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"druid.server.https.includeProtocols"})}),(0,s.jsx)(t.td,{children:"List of exact protocols names to include."}),(0,s.jsx)(t.td,{children:"Jetty's default include protocol list"}),(0,s.jsx)(t.td,{children:"no"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"druid.server.https.excludeProtocols"})}),(0,s.jsx)(t.td,{children:"List of exact protocols names to exclude."}),(0,s.jsx)(t.td,{children:"Jetty's default exclude protocol list"}),(0,s.jsx)(t.td,{children:"no"})]})]})]}),"\n",(0,s.jsx)(t.h2,{id:"internal-communication-over-tls",children:"Internal communication over TLS"}),"\n",(0,s.jsxs)(t.p,{children:["Whenever possible Druid processes will use HTTPS to talk to each other. To enable this communication Druid's HttpClient needs to\nbe configured with a proper ",(0,s.jsx)(t.a,{href:"https://docs.oracle.com/en/java/javase/11/docs/api/java.base/javax/net/ssl/SSLContext.html",children:"SSLContext"})," that is able\nto validate the Server Certificates, otherwise communication will fail."]}),"\n",(0,s.jsxs)(t.p,{children:["Since, there are various ways to configure SSLContext, by default, Druid looks for an instance of SSLContext Guice binding\nwhile creating the HttpClient. This binding can be achieved writing a ",(0,s.jsx)(t.a,{href:"/docs/33.0.0/configuration/extensions",children:"Druid extension"}),"\nwhich can provide an instance of SSLContext. Druid comes with a simple extension present ",(0,s.jsx)(t.a,{href:"/docs/33.0.0/development/extensions-core/simple-client-sslcontext",children:"here"}),"\nwhich should be useful enough for most simple cases, see ",(0,s.jsx)(t.a,{href:"/docs/33.0.0/configuration/extensions#loading-extensions",children:"this"})," for how to include extensions.\nIf this extension does not satisfy the requirements then please follow the extension ",(0,s.jsx)(t.a,{href:"https://github.com/apache/druid/tree/master/extensions-core/simple-client-sslcontext",children:"implementation"}),"\nto create your own extension."]}),"\n",(0,s.jsx)(t.p,{children:"When Druid Coordinator/Overlord have both HTTP and HTTPS enabled and Client sends request to non-leader process, then Client is always redirected to the HTTPS endpoint on leader process.\nSo, Clients should be first upgraded to be able to handle redirect to HTTPS. Then Druid Overlord/Coordinator should be upgraded and configured to run both HTTP and HTTPS ports. Then Client configuration should be changed to refer to Druid Coordinator/Overlord via the HTTPS endpoint and then HTTP port on Druid Coordinator/Overlord should be disabled."}),"\n",(0,s.jsx)(t.h2,{id:"custom-certificate-checks",children:"Custom certificate checks"}),"\n",(0,s.jsxs)(t.p,{children:["Druid supports custom certificate check extensions. Please refer to the ",(0,s.jsx)(t.code,{children:"org.apache.druid.server.security.TLSCertificateChecker"})," interface for details on the methods to be implemented."]}),"\n",(0,s.jsx)(t.p,{children:"To use a custom TLS certificate checker, specify the following property:"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Property"}),(0,s.jsx)(t.th,{children:"Description"}),(0,s.jsx)(t.th,{children:"Default"}),(0,s.jsx)(t.th,{children:"Required"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"druid.tls.certificateChecker"})}),(0,s.jsx)(t.td,{children:"Type name of custom TLS certificate checker, provided by extensions. Please refer to extension documentation for the type name that should be specified."}),(0,s.jsx)(t.td,{children:'"default"'}),(0,s.jsx)(t.td,{children:"no"})]})})]}),"\n",(0,s.jsx)(t.p,{children:"The default checker delegates to the standard trust manager and performs no additional actions or checks."}),"\n",(0,s.jsx)(t.p,{children:"If using a non-default certificate checker, please refer to the extension documentation for additional configuration properties needed."})]})}function a(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}}}]);