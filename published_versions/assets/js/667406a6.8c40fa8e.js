"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[9553],{6005:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/images/tutorial-deletion-03-09b79439abe874b5e8d765b249b28d89.png"},28453:(e,t,n)=>{n.d(t,{R:()=>l,x:()=>d});var s=n(96540);const a={},i=s.createContext(a);function l(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),s.createElement(i.Provider,{value:t},e.children)}},36908:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/images/tutorial-deletion-02-178ae7a7beae527951d67c5b79412e3d.png"},56967:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/images/tutorial-deletion-01-891729c30511abdcc26da807fd50122f.png"},90227:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>d,default:()=>c,frontMatter:()=>l,metadata:()=>s,toc:()=>r});const s=JSON.parse('{"id":"tutorials/tutorial-delete-data","title":"Tutorial: Deleting data","description":"\x3c!--","source":"@site/docs/33.0.0/tutorials/tutorial-delete-data.md","sourceDirName":"tutorials","slug":"/tutorials/tutorial-delete-data","permalink":"/docs/33.0.0/tutorials/tutorial-delete-data","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"tutorial-delete-data","title":"Tutorial: Deleting data","sidebar_label":"Deleting data"},"sidebar":"docs","previous":{"title":"Compact segments","permalink":"/docs/33.0.0/tutorials/tutorial-compaction"},"next":{"title":"Query for latest data","permalink":"/docs/33.0.0/tutorials/tutorial-latest-by"}}');var a=n(74848),i=n(28453);const l={id:"tutorial-delete-data",title:"Tutorial: Deleting data",sidebar_label:"Deleting data"},d=void 0,o={},r=[{value:"Load initial data",id:"load-initial-data",level:2},{value:"How to permanently delete data",id:"how-to-permanently-delete-data",level:2},{value:"Disable segments by interval",id:"disable-segments-by-interval",level:2},{value:"Disable segments by segment IDs",id:"disable-segments-by-segment-ids",level:2},{value:"Run a kill task",id:"run-a-kill-task",level:2}];function h(e){const t={a:"a",code:"code",h2:"h2",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.p,{children:"This tutorial demonstrates how to delete existing data."}),"\n",(0,a.jsx)(t.p,{children:"This tutorial requires the following:"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:["A running Apache Druid instance. If you don't have Druid, see the ",(0,a.jsx)(t.a,{href:"/docs/33.0.0/tutorials/",children:"single-machine quickstart"})," to get started."]}),"\n",(0,a.jsxs)(t.li,{children:["The command-line JSON processor, ",(0,a.jsx)(t.a,{href:"https://stedolan.github.io/jq/download/",children:"jq"}),"."]}),"\n"]}),"\n",(0,a.jsx)(t.h2,{id:"load-initial-data",children:"Load initial data"}),"\n",(0,a.jsxs)(t.p,{children:["In this tutorial, we will use the Wikipedia edits data, with an indexing spec that creates hourly segments. This spec is located at ",(0,a.jsx)(t.code,{children:"quickstart/tutorial/deletion-index.json"}),", and it creates a datasource called ",(0,a.jsx)(t.code,{children:"deletion-tutorial"}),"."]}),"\n",(0,a.jsx)(t.p,{children:"Let's load this initial data:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:"bin/post-index-task --file quickstart/tutorial/deletion-index.json --url http://localhost:8081\n"})}),"\n",(0,a.jsxs)(t.p,{children:["When the load finishes, open ",(0,a.jsx)(t.a,{href:"http://localhost:8888/unified-console.html#datasources",children:"http://localhost:8888/unified-console.md#datasources"})," in a browser."]}),"\n",(0,a.jsx)(t.h2,{id:"how-to-permanently-delete-data",children:"How to permanently delete data"}),"\n",(0,a.jsx)(t.p,{children:"Permanent deletion of a Druid segment has two steps:"}),"\n",(0,a.jsxs)(t.ol,{children:["\n",(0,a.jsx)(t.li,{children:'The segment must first be marked as "unused". This occurs when a user manually disables a segment through the Coordinator API.'}),"\n",(0,a.jsx)(t.li,{children:'After segments have been marked as "unused", a Kill Task will delete any "unused" segments from Druid\'s metadata store as well as deep storage.'}),"\n"]}),"\n",(0,a.jsx)(t.p,{children:"Let's drop some segments now, by using the coordinator API to drop data by interval and segmentIds."}),"\n",(0,a.jsx)(t.h2,{id:"disable-segments-by-interval",children:"Disable segments by interval"}),"\n",(0,a.jsxs)(t.p,{children:["Let's disable segments in a specified interval. This will mark all segments in the interval as \"unused\", but not remove them from deep storage.\nLet's disable segments in interval ",(0,a.jsx)(t.code,{children:"2015-09-12T18:00:00.000Z/2015-09-12T20:00:00.000Z"})," i.e. between hour 18 and 20."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:"curl -X 'POST' -H 'Content-Type:application/json' -d '{ \"interval\" : \"2015-09-12T18:00:00.000Z/2015-09-12T20:00:00.000Z\" }' http://localhost:8081/druid/coordinator/v1/datasources/deletion-tutorial/markUnused\n"})}),"\n",(0,a.jsxs)(t.p,{children:["When the request completes, the Segments view of the web console no longer displays the segments for hours 18 and 19.\n",(0,a.jsx)(t.img,{alt:"Segments 1",src:n(56967).A+"",title:"Segments 1",width:"1250",height:"640"})]}),"\n",(0,a.jsx)(t.p,{children:"Note that the hour 18 and 19 segments are still present in deep storage:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:"$ ls -l1 var/druid/segments/deletion-tutorial/\n2015-09-12T00:00:00.000Z_2015-09-12T01:00:00.000Z\n2015-09-12T01:00:00.000Z_2015-09-12T02:00:00.000Z\n2015-09-12T02:00:00.000Z_2015-09-12T03:00:00.000Z\n2015-09-12T03:00:00.000Z_2015-09-12T04:00:00.000Z\n2015-09-12T04:00:00.000Z_2015-09-12T05:00:00.000Z\n2015-09-12T05:00:00.000Z_2015-09-12T06:00:00.000Z\n2015-09-12T06:00:00.000Z_2015-09-12T07:00:00.000Z\n2015-09-12T07:00:00.000Z_2015-09-12T08:00:00.000Z\n2015-09-12T08:00:00.000Z_2015-09-12T09:00:00.000Z\n2015-09-12T09:00:00.000Z_2015-09-12T10:00:00.000Z\n2015-09-12T10:00:00.000Z_2015-09-12T11:00:00.000Z\n2015-09-12T11:00:00.000Z_2015-09-12T12:00:00.000Z\n2015-09-12T12:00:00.000Z_2015-09-12T13:00:00.000Z\n2015-09-12T13:00:00.000Z_2015-09-12T14:00:00.000Z\n2015-09-12T14:00:00.000Z_2015-09-12T15:00:00.000Z\n2015-09-12T15:00:00.000Z_2015-09-12T16:00:00.000Z\n2015-09-12T16:00:00.000Z_2015-09-12T17:00:00.000Z\n2015-09-12T17:00:00.000Z_2015-09-12T18:00:00.000Z\n2015-09-12T18:00:00.000Z_2015-09-12T19:00:00.000Z\n2015-09-12T19:00:00.000Z_2015-09-12T20:00:00.000Z\n2015-09-12T20:00:00.000Z_2015-09-12T21:00:00.000Z\n2015-09-12T21:00:00.000Z_2015-09-12T22:00:00.000Z\n2015-09-12T22:00:00.000Z_2015-09-12T23:00:00.000Z\n2015-09-12T23:00:00.000Z_2015-09-13T00:00:00.000Z\n"})}),"\n",(0,a.jsx)(t.h2,{id:"disable-segments-by-segment-ids",children:"Disable segments by segment IDs"}),"\n",(0,a.jsx)(t.p,{children:'Let\'s disable some segments by their segmentID. This will again mark the segments as "unused", but not remove them from deep storage. You can see the full segmentID for a segment using the web console.'}),"\n",(0,a.jsxs)(t.p,{children:["In the ",(0,a.jsx)(t.a,{href:"http://localhost:8888/unified-console.html#segments",children:"segments view"}),", click one of the segment rows to open the segment metadata dialog:"]}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.img,{alt:"Segments_2",src:n(36908).A+"",title:"Segments 2",width:"1250",height:"640"})}),"\n",(0,a.jsxs)(t.p,{children:["The ",(0,a.jsx)(t.code,{children:"identifier"})," field in the metadata dialog shows the full segment ID. For example, the hour 23 segment has segment ID ",(0,a.jsx)(t.code,{children:"deletion-tutorial_2015-09-12T23:00:00.000Z_2015-09-13T00:00:00.000Z_2023-05-16T00:04:12.091Z"}),"."]}),"\n",(0,a.jsxs)(t.p,{children:["Disable the last two segments, hour 22 and 23 segments, by sending a POST request to the Coordinator with the corresponding segment IDs.\nThe following command queries the Coordinator for segment IDs and uses ",(0,a.jsx)(t.code,{children:"jq"})," to parse and extract the IDs of the last two segments.\nThe segment IDs are stored in an environment variable named ",(0,a.jsx)(t.code,{children:"unusedSegmentIds"}),"."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:"unusedSegmentIds=$(curl -X 'GET' -H 'Content-Type:application/json' http://localhost:8081/druid/coordinator/v1/datasources/deletion-tutorial/segments | jq '.[-2:]')\n"})}),"\n",(0,a.jsx)(t.p,{children:"The following request marks the segments unused:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:"curl -X 'POST' -H 'Content-Type:application/json' -d \"{\\\"segmentIds\\\": $unusedSegmentIds}\" http://localhost:8081/druid/coordinator/v1/datasources/deletion-tutorial/markUnused\n"})}),"\n",(0,a.jsx)(t.p,{children:"When the request completes, the Segments view of the web console no longer displays the segments for hours 22 and 23."}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.img,{alt:"Segments 3",src:n(6005).A+"",title:"Segments 3",width:"1250",height:"640"})}),"\n",(0,a.jsx)(t.p,{children:"Note that the hour 22 and 23 segments are still in deep storage:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:"$ ls -l1 var/druid/segments/deletion-tutorial/\n2015-09-12T00:00:00.000Z_2015-09-12T01:00:00.000Z\n2015-09-12T01:00:00.000Z_2015-09-12T02:00:00.000Z\n2015-09-12T02:00:00.000Z_2015-09-12T03:00:00.000Z\n2015-09-12T03:00:00.000Z_2015-09-12T04:00:00.000Z\n2015-09-12T04:00:00.000Z_2015-09-12T05:00:00.000Z\n2015-09-12T05:00:00.000Z_2015-09-12T06:00:00.000Z\n2015-09-12T06:00:00.000Z_2015-09-12T07:00:00.000Z\n2015-09-12T07:00:00.000Z_2015-09-12T08:00:00.000Z\n2015-09-12T08:00:00.000Z_2015-09-12T09:00:00.000Z\n2015-09-12T09:00:00.000Z_2015-09-12T10:00:00.000Z\n2015-09-12T10:00:00.000Z_2015-09-12T11:00:00.000Z\n2015-09-12T11:00:00.000Z_2015-09-12T12:00:00.000Z\n2015-09-12T12:00:00.000Z_2015-09-12T13:00:00.000Z\n2015-09-12T13:00:00.000Z_2015-09-12T14:00:00.000Z\n2015-09-12T14:00:00.000Z_2015-09-12T15:00:00.000Z\n2015-09-12T15:00:00.000Z_2015-09-12T16:00:00.000Z\n2015-09-12T16:00:00.000Z_2015-09-12T17:00:00.000Z\n2015-09-12T17:00:00.000Z_2015-09-12T18:00:00.000Z\n2015-09-12T18:00:00.000Z_2015-09-12T19:00:00.000Z\n2015-09-12T19:00:00.000Z_2015-09-12T20:00:00.000Z\n2015-09-12T20:00:00.000Z_2015-09-12T21:00:00.000Z\n2015-09-12T21:00:00.000Z_2015-09-12T22:00:00.000Z\n2015-09-12T22:00:00.000Z_2015-09-12T23:00:00.000Z\n2015-09-12T23:00:00.000Z_2015-09-13T00:00:00.000Z\n"})}),"\n",(0,a.jsx)(t.h2,{id:"run-a-kill-task",children:"Run a kill task"}),"\n",(0,a.jsx)(t.p,{children:"Now that we have disabled some segments, we can submit a Kill Task, which will delete the disabled segments from metadata and deep storage."}),"\n",(0,a.jsxs)(t.p,{children:["A Kill Task spec has been provided at ",(0,a.jsx)(t.code,{children:"quickstart/tutorial/deletion-kill.json"}),". Submit this task to the Overlord with the following command:"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:"curl -X 'POST' -H 'Content-Type:application/json' -d @quickstart/tutorial/deletion-kill.json http://localhost:8081/druid/indexer/v1/task\n"})}),"\n",(0,a.jsx)(t.p,{children:"When the task finishes, note that Druid deleted the disabled segments from deep storage."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:"$ ls -l1 var/druid/segments/deletion-tutorial/\n2015-09-12T00:00:00.000Z_2015-09-12T01:00:00.000Z\n2015-09-12T01:00:00.000Z_2015-09-12T02:00:00.000Z\n2015-09-12T02:00:00.000Z_2015-09-12T03:00:00.000Z\n2015-09-12T03:00:00.000Z_2015-09-12T04:00:00.000Z\n2015-09-12T04:00:00.000Z_2015-09-12T05:00:00.000Z\n2015-09-12T05:00:00.000Z_2015-09-12T06:00:00.000Z\n2015-09-12T06:00:00.000Z_2015-09-12T07:00:00.000Z\n2015-09-12T07:00:00.000Z_2015-09-12T08:00:00.000Z\n2015-09-12T08:00:00.000Z_2015-09-12T09:00:00.000Z\n2015-09-12T09:00:00.000Z_2015-09-12T10:00:00.000Z\n2015-09-12T10:00:00.000Z_2015-09-12T11:00:00.000Z\n2015-09-12T11:00:00.000Z_2015-09-12T12:00:00.000Z\n2015-09-12T12:00:00.000Z_2015-09-12T13:00:00.000Z\n2015-09-12T13:00:00.000Z_2015-09-12T14:00:00.000Z\n2015-09-12T14:00:00.000Z_2015-09-12T15:00:00.000Z\n2015-09-12T15:00:00.000Z_2015-09-12T16:00:00.000Z\n2015-09-12T16:00:00.000Z_2015-09-12T17:00:00.000Z\n2015-09-12T17:00:00.000Z_2015-09-12T18:00:00.000Z\n2015-09-12T20:00:00.000Z_2015-09-12T21:00:00.000Z\n2015-09-12T21:00:00.000Z_2015-09-12T22:00:00.000Z\n"})})]})}function c(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}}}]);