"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[8633],{28453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>l});var r=s(96540);const a={},t=r.createContext(a);function i(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),r.createElement(t.Provider,{value:n},e.children)}},65537:(e,n,s)=>{s.d(n,{A:()=>b});var r=s(96540),a=s(18215),t=s(65627),i=s(56347),l=s(50372),d=s(30604),o=s(11861),c=s(78749);function u(e){var n,s;return null!=(n=null==(s=r.Children.toArray(e).filter((function(e){return"\n"!==e})).map((function(e){if(!e||(0,r.isValidElement)(e)&&((n=e.props)&&"object"==typeof n&&"value"in n))return e;var n;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))?void 0:s.filter(Boolean))?n:[]}function p(e){var n=e.values,s=e.children;return(0,r.useMemo)((function(){var e=null!=n?n:function(e){return u(e).map((function(e){var n=e.props;return{value:n.value,label:n.label,attributes:n.attributes,default:n.default}}))}(s);return function(e){var n=(0,o.XI)(e,(function(e,n){return e.value===n.value}));if(n.length>0)throw new Error('Docusaurus error: Duplicate values "'+n.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[n,s])}function h(e){var n=e.value;return e.tabValues.some((function(e){return e.value===n}))}function m(e){var n=e.queryString,s=void 0!==n&&n,a=e.groupId,t=(0,i.W6)(),l=function(e){var n=e.queryString,s=void 0!==n&&n,r=e.groupId;if("string"==typeof s)return s;if(!1===s)return null;if(!0===s&&!r)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=r?r:null}({queryString:s,groupId:a});return[(0,d.aZ)(l),(0,r.useCallback)((function(e){if(l){var n=new URLSearchParams(t.location.search);n.set(l,e),t.replace(Object.assign({},t.location,{search:n.toString()}))}}),[l,t])]}function x(e){var n,s,a,t,i=e.defaultValue,d=e.queryString,o=void 0!==d&&d,u=e.groupId,x=p(e),j=(0,r.useState)((function(){return function(e){var n,s=e.defaultValue,r=e.tabValues;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(s){if(!h({value:s,tabValues:r}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+s+'" but none of its children has the corresponding value. Available values are: '+r.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return s}var a=null!=(n=r.find((function(e){return e.default})))?n:r[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:i,tabValues:x})})),g=j[0],k=j[1],f=m({queryString:o,groupId:u}),v=f[0],T=f[1],b=(n=function(e){return e?"docusaurus.tab."+e:null}({groupId:u}.groupId),s=(0,c.Dv)(n),a=s[0],t=s[1],[a,(0,r.useCallback)((function(e){n&&t.set(e)}),[n,t])]),S=b[0],y=b[1],_=function(){var e=null!=v?v:S;return h({value:e,tabValues:x})?e:null}();return(0,l.A)((function(){_&&k(_)}),[_]),{selectedValue:g,selectValue:(0,r.useCallback)((function(e){if(!h({value:e,tabValues:x}))throw new Error("Can't select invalid tab value="+e);k(e),T(e),y(e)}),[T,y,x]),tabValues:x}}var j=s(9136);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var k=s(74848);function f(e){var n=e.className,s=e.block,r=e.selectedValue,i=e.selectValue,l=e.tabValues,d=[],o=(0,t.a_)().blockElementScrollPositionUntilNextRender,c=function(e){var n=e.currentTarget,s=d.indexOf(n),a=l[s].value;a!==r&&(o(n),i(a))},u=function(e){var n,s=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":var r,a=d.indexOf(e.currentTarget)+1;s=null!=(r=d[a])?r:d[0];break;case"ArrowLeft":var t,i=d.indexOf(e.currentTarget)-1;s=null!=(t=d[i])?t:d[d.length-1]}null==(n=s)||n.focus()};return(0,k.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.A)("tabs",{"tabs--block":s},n),children:l.map((function(e){var n=e.value,s=e.label,t=e.attributes;return(0,k.jsx)("li",Object.assign({role:"tab",tabIndex:r===n?0:-1,"aria-selected":r===n,ref:function(e){d.push(e)},onKeyDown:u,onClick:c},t,{className:(0,a.A)("tabs__item",g.tabItem,null==t?void 0:t.className,{"tabs__item--active":r===n}),children:null!=s?s:n}),n)}))})}function v(e){var n=e.lazy,s=e.children,t=e.selectedValue,i=(Array.isArray(s)?s:[s]).filter(Boolean);if(n){var l=i.find((function(e){return e.props.value===t}));return l?(0,r.cloneElement)(l,{className:(0,a.A)("margin-top--md",l.props.className)}):null}return(0,k.jsx)("div",{className:"margin-top--md",children:i.map((function(e,n){return(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==t})}))})}function T(e){var n=x(e);return(0,k.jsxs)("div",{className:(0,a.A)("tabs-container",g.tabList),children:[(0,k.jsx)(f,Object.assign({},n,e)),(0,k.jsx)(v,Object.assign({},n,e))]})}function b(e){var n=(0,j.A)();return(0,k.jsx)(T,Object.assign({},e,{children:u(e.children)}),String(n))}},73374:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>d,metadata:()=>r,toc:()=>u});const r=JSON.parse('{"id":"api-reference/tasks-api","title":"Tasks API","description":"\x3c!--","source":"@site/docs/33.0.0/api-reference/tasks-api.md","sourceDirName":"api-reference","slug":"/api-reference/tasks-api","permalink":"/docs/33.0.0/api-reference/tasks-api","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"tasks-api","title":"Tasks API","sidebar_label":"Tasks"},"sidebar":"docs","previous":{"title":"JSON querying","permalink":"/docs/33.0.0/api-reference/json-querying-api"},"next":{"title":"Supervisors","permalink":"/docs/33.0.0/api-reference/supervisor-api"}}');var a=s(74848),t=s(28453),i=s(65537),l=s(79329);const d={id:"tasks-api",title:"Tasks API",sidebar_label:"Tasks"},o=void 0,c={},u=[{value:"Task information and retrieval",id:"task-information-and-retrieval",level:2},{value:"Get an array of tasks",id:"get-an-array-of-tasks",level:3},{value:"URL",id:"url",level:4},{value:"Query parameters",id:"query-parameters",level:4},{value:"Responses",id:"responses",level:4},{value:"Sample request",id:"sample-request",level:4},{value:"Sample response",id:"sample-response",level:4},{value:"Get an array of complete tasks",id:"get-an-array-of-complete-tasks",level:3},{value:"URL",id:"url-1",level:4},{value:"Query parameters",id:"query-parameters-1",level:4},{value:"Responses",id:"responses-1",level:4},{value:"Sample request",id:"sample-request-1",level:4},{value:"Sample response",id:"sample-response-1",level:4},{value:"Get an array of running tasks",id:"get-an-array-of-running-tasks",level:3},{value:"URL",id:"url-2",level:4},{value:"Query parameters",id:"query-parameters-2",level:4},{value:"Responses",id:"responses-2",level:4},{value:"Sample request",id:"sample-request-2",level:4},{value:"Sample response",id:"sample-response-2",level:4},{value:"Get an array of waiting tasks",id:"get-an-array-of-waiting-tasks",level:3},{value:"URL",id:"url-3",level:4},{value:"Query parameters",id:"query-parameters-3",level:4},{value:"Responses",id:"responses-3",level:4},{value:"Sample request",id:"sample-request-3",level:4},{value:"Sample response",id:"sample-response-3",level:4},{value:"Get an array of pending tasks",id:"get-an-array-of-pending-tasks",level:3},{value:"URL",id:"url-4",level:4},{value:"Query parameters",id:"query-parameters-4",level:4},{value:"Responses",id:"responses-4",level:4},{value:"Sample request",id:"sample-request-4",level:4},{value:"Sample response",id:"sample-response-4",level:4},{value:"Get task payload",id:"get-task-payload",level:3},{value:"URL",id:"url-5",level:4},{value:"Responses",id:"responses-5",level:4},{value:"Sample request",id:"sample-request-5",level:4},{value:"Sample response",id:"sample-response-5",level:4},{value:"Get task status",id:"get-task-status",level:3},{value:"URL",id:"url-6",level:4},{value:"Responses",id:"responses-6",level:4},{value:"Sample request",id:"sample-request-6",level:4},{value:"Sample response",id:"sample-response-6",level:4},{value:"Get task segments",id:"get-task-segments",level:3},{value:"URL",id:"url-7",level:4},{value:"Responses",id:"responses-7",level:4},{value:"Sample request",id:"sample-request-7",level:4},{value:"Sample response",id:"sample-response-7",level:4},{value:"Get task log",id:"get-task-log",level:3},{value:"URL",id:"url-8",level:4},{value:"Query parameters",id:"query-parameters-5",level:4},{value:"Responses",id:"responses-8",level:4},{value:"Sample request",id:"sample-request-8",level:4},{value:"Sample response",id:"sample-response-8",level:4},{value:"Get task completion report",id:"get-task-completion-report",level:3},{value:"URL",id:"url-9",level:4},{value:"Responses",id:"responses-9",level:4},{value:"Sample request",id:"sample-request-9",level:4},{value:"Sample response",id:"sample-response-9",level:4},{value:"Task operations",id:"task-operations",level:2},{value:"Submit a task",id:"submit-a-task",level:3},{value:"URL",id:"url-10",level:4},{value:"Responses",id:"responses-10",level:4},{value:"Sample request",id:"sample-request-10",level:4},{value:"Sample response",id:"sample-response-10",level:4},{value:"Shut down a task",id:"shut-down-a-task",level:3},{value:"URL",id:"url-11",level:4},{value:"Responses",id:"responses-11",level:4},{value:"Sample request",id:"sample-request-11",level:4},{value:"Sample response",id:"sample-response-11",level:4},{value:"Shut down all tasks for a datasource",id:"shut-down-all-tasks-for-a-datasource",level:3},{value:"URL",id:"url-12",level:4},{value:"Responses",id:"responses-12",level:4},{value:"Sample request",id:"sample-request-12",level:4},{value:"Sample response",id:"sample-response-12",level:4},{value:"Task management",id:"task-management",level:2},{value:"Retrieve status objects for tasks",id:"retrieve-status-objects-for-tasks",level:3},{value:"URL",id:"url-13",level:4},{value:"Responses",id:"responses-13",level:4},{value:"Sample request",id:"sample-request-13",level:4},{value:"Sample response",id:"sample-response-13",level:4},{value:"Clean up pending segments for a datasource",id:"clean-up-pending-segments-for-a-datasource",level:3},{value:"URL",id:"url-14",level:4},{value:"Responses",id:"responses-14",level:4},{value:"Sample request",id:"sample-request-14",level:4},{value:"Sample response",id:"sample-response-14",level:4}];function p(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",hr:"hr",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components},{Details:s}=n;return s||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.p,{children:"This document describes the API endpoints for task retrieval, submission, and deletion for Apache Druid. Tasks are individual jobs performed by Druid to complete operations such as ingestion, querying, and compaction."}),"\n",(0,a.jsxs)(n.p,{children:["In this topic, ",(0,a.jsx)(n.code,{children:"http://ROUTER_IP:ROUTER_PORT"})," is a placeholder for the Router service address and port. For example, on the quickstart configuration, use ",(0,a.jsx)(n.code,{children:"http://localhost:8888"}),"."]}),"\n",(0,a.jsx)(n.h2,{id:"task-information-and-retrieval",children:"Task information and retrieval"}),"\n",(0,a.jsx)(n.h3,{id:"get-an-array-of-tasks",children:"Get an array of tasks"}),"\n",(0,a.jsxs)(n.p,{children:["Retrieves an array of all tasks in the Druid cluster. Each task object includes information on its ID, status, associated datasource, and other metadata. For definitions of the response properties, see the ",(0,a.jsx)(n.a,{href:"/docs/33.0.0/querying/sql-metadata-tables#tasks-table",children:"Tasks table"}),"."]}),"\n",(0,a.jsx)(n.h4,{id:"url",children:"URL"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"GET"})," ",(0,a.jsx)(n.code,{children:"/druid/indexer/v1/tasks"})]}),"\n",(0,a.jsx)(n.h4,{id:"query-parameters",children:"Query parameters"}),"\n",(0,a.jsx)(n.p,{children:"The endpoint supports a set of optional query parameters to filter results."}),"\n",(0,a.jsxs)(n.table,{children:[(0,a.jsx)(n.thead,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.th,{children:"Parameter"}),(0,a.jsx)(n.th,{children:"Type"}),(0,a.jsx)(n.th,{children:"Description"})]})}),(0,a.jsxs)(n.tbody,{children:[(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"state"})}),(0,a.jsx)(n.td,{children:"String"}),(0,a.jsxs)(n.td,{children:["Filter list of tasks by task state, valid options are ",(0,a.jsx)(n.code,{children:"running"}),", ",(0,a.jsx)(n.code,{children:"complete"}),", ",(0,a.jsx)(n.code,{children:"waiting"}),", and ",(0,a.jsx)(n.code,{children:"pending"}),"."]})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"datasource"})}),(0,a.jsx)(n.td,{children:"String"}),(0,a.jsx)(n.td,{children:"Return tasks filtered by Druid datasource."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"createdTimeInterval"})}),(0,a.jsx)(n.td,{children:"String (ISO-8601)"}),(0,a.jsxs)(n.td,{children:["Return tasks created within the specified interval. Use ",(0,a.jsx)(n.code,{children:"_"})," as the delimiter for the interval string. Do not use ",(0,a.jsx)(n.code,{children:"/"}),". For example, ",(0,a.jsx)(n.code,{children:"2023-06-27_2023-06-28"}),"."]})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"max"})}),(0,a.jsx)(n.td,{children:"Integer"}),(0,a.jsxs)(n.td,{children:["Maximum number of ",(0,a.jsx)(n.code,{children:"complete"})," tasks to return. Only applies when ",(0,a.jsx)(n.code,{children:"state"})," is set to ",(0,a.jsx)(n.code,{children:"complete"}),"."]})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"type"})}),(0,a.jsx)(n.td,{children:"String"}),(0,a.jsxs)(n.td,{children:["Filter tasks by task type. See ",(0,a.jsx)(n.a,{href:"/docs/33.0.0/ingestion/tasks",children:"task documentation"})," for more details."]})]})]})]}),"\n",(0,a.jsx)(n.h4,{id:"responses",children:"Responses"}),"\n",(0,a.jsxs)(i.A,{children:[(0,a.jsxs)(l.A,{value:"1",label:"200 SUCCESS",children:[(0,a.jsx)("br",{}),(0,a.jsx)(n.p,{children:(0,a.jsx)(n.em,{children:"Successfully retrieved list of tasks"})})]}),(0,a.jsxs)(l.A,{value:"2",label:"400 BAD REQUEST",children:[(0,a.jsx)("br",{}),(0,a.jsx)(n.p,{children:(0,a.jsxs)(n.em,{children:["Invalid ",(0,a.jsx)(n.code,{children:"state"})," query parameter value"]})})]}),(0,a.jsxs)(l.A,{value:"3",label:"500 SERVER ERROR",children:[(0,a.jsx)("br",{}),(0,a.jsx)(n.p,{children:(0,a.jsx)(n.em,{children:"Invalid query parameter"})})]})]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h4,{id:"sample-request",children:"Sample request"}),"\n",(0,a.jsx)(n.p,{children:"The following example shows how to retrieve a list of tasks filtered with the following query parameters:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["State: ",(0,a.jsx)(n.code,{children:"complete"})]}),"\n",(0,a.jsxs)(n.li,{children:["Datasource: ",(0,a.jsx)(n.code,{children:"wikipedia_api"})]}),"\n",(0,a.jsxs)(n.li,{children:["Time interval: between ",(0,a.jsx)(n.code,{children:"2015-09-12"})," and ",(0,a.jsx)(n.code,{children:"2015-09-13"})]}),"\n",(0,a.jsxs)(n.li,{children:["Max entries returned: ",(0,a.jsx)(n.code,{children:"10"})]}),"\n",(0,a.jsxs)(n.li,{children:["Task type: ",(0,a.jsx)(n.code,{children:"query_worker"})]}),"\n"]}),"\n",(0,a.jsxs)(i.A,{children:[(0,a.jsx)(l.A,{value:"4",label:"cURL",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:'curl "http://ROUTER_IP:ROUTER_PORT/druid/indexer/v1/tasks/?state=complete&datasource=wikipedia_api&createdTimeInterval=2015-09-12_2015-09-13&max=10&type=query_worker"\n'})})}),(0,a.jsx)(l.A,{value:"5",label:"HTTP",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-HTTP",children:"GET /druid/indexer/v1/tasks/?state=complete&datasource=wikipedia_api&createdTimeInterval=2015-09-12_2015-09-13&max=10&type=query_worker HTTP/1.1\nHost: http://ROUTER_IP:ROUTER_PORT\n"})})})]}),"\n",(0,a.jsx)(n.h4,{id:"sample-response",children:"Sample response"}),"\n",(0,a.jsxs)(s,{children:[(0,a.jsx)("summary",{children:"View the response"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'[\n  {\n      "id": "query-223549f8-b993-4483-b028-1b0d54713cad-worker0_0",\n      "groupId": "query-223549f8-b993-4483-b028-1b0d54713cad",\n      "type": "query_worker",\n      "createdTime": "2023-06-22T22:11:37.012Z",\n      "queueInsertionTime": "1970-01-01T00:00:00.000Z",\n      "statusCode": "SUCCESS",\n      "status": "SUCCESS",\n      "runnerStatusCode": "NONE",\n      "duration": 17897,\n      "location": {\n          "host": "localhost",\n          "port": 8101,\n          "tlsPort": -1\n      },\n      "dataSource": "wikipedia_api",\n      "errorMsg": null\n  },\n  {\n      "id": "query-fa82fa40-4c8c-4777-b832-cabbee5f519f-worker0_0",\n      "groupId": "query-fa82fa40-4c8c-4777-b832-cabbee5f519f",\n      "type": "query_worker",\n      "createdTime": "2023-06-20T22:51:21.302Z",\n      "queueInsertionTime": "1970-01-01T00:00:00.000Z",\n      "statusCode": "SUCCESS",\n      "status": "SUCCESS",\n      "runnerStatusCode": "NONE",\n      "duration": 16911,\n      "location": {\n          "host": "localhost",\n          "port": 8101,\n          "tlsPort": -1\n      },\n      "dataSource": "wikipedia_api",\n      "errorMsg": null\n  },\n  {\n      "id": "query-5419da7a-b270-492f-90e6-920ecfba766a-worker0_0",\n      "groupId": "query-5419da7a-b270-492f-90e6-920ecfba766a",\n      "type": "query_worker",\n      "createdTime": "2023-06-20T22:45:53.909Z",\n      "queueInsertionTime": "1970-01-01T00:00:00.000Z",\n      "statusCode": "SUCCESS",\n      "status": "SUCCESS",\n      "runnerStatusCode": "NONE",\n      "duration": 17030,\n      "location": {\n          "host": "localhost",\n          "port": 8101,\n          "tlsPort": -1\n      },\n      "dataSource": "wikipedia_api",\n      "errorMsg": null\n  }\n]\n'})})]}),"\n",(0,a.jsx)(n.h3,{id:"get-an-array-of-complete-tasks",children:"Get an array of complete tasks"}),"\n",(0,a.jsxs)(n.p,{children:["Retrieves an array of completed tasks in the Druid cluster. This is functionally equivalent to ",(0,a.jsx)(n.code,{children:"/druid/indexer/v1/tasks?state=complete"}),". For definitions of the response properties, see the ",(0,a.jsx)(n.a,{href:"/docs/33.0.0/querying/sql-metadata-tables#tasks-table",children:"Tasks table"}),"."]}),"\n",(0,a.jsx)(n.h4,{id:"url-1",children:"URL"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"GET"})," ",(0,a.jsx)(n.code,{children:"/druid/indexer/v1/completeTasks"})]}),"\n",(0,a.jsx)(n.h4,{id:"query-parameters-1",children:"Query parameters"}),"\n",(0,a.jsx)(n.p,{children:"The endpoint supports a set of optional query parameters to filter results."}),"\n",(0,a.jsxs)(n.table,{children:[(0,a.jsx)(n.thead,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.th,{children:"Parameter"}),(0,a.jsx)(n.th,{children:"Type"}),(0,a.jsx)(n.th,{children:"Description"})]})}),(0,a.jsxs)(n.tbody,{children:[(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"datasource"})}),(0,a.jsx)(n.td,{children:"String"}),(0,a.jsx)(n.td,{children:"Return tasks filtered by Druid datasource."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"createdTimeInterval"})}),(0,a.jsx)(n.td,{children:"String (ISO-8601)"}),(0,a.jsxs)(n.td,{children:["Return tasks created within the specified interval. The interval string should be delimited by ",(0,a.jsx)(n.code,{children:"_"})," instead of ",(0,a.jsx)(n.code,{children:"/"}),". For example, ",(0,a.jsx)(n.code,{children:"2023-06-27_2023-06-28"}),"."]})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"max"})}),(0,a.jsx)(n.td,{children:"Integer"}),(0,a.jsxs)(n.td,{children:["Maximum number of ",(0,a.jsx)(n.code,{children:"complete"})," tasks to return. Only applies when ",(0,a.jsx)(n.code,{children:"state"})," is set to ",(0,a.jsx)(n.code,{children:"complete"}),"."]})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"type"})}),(0,a.jsx)(n.td,{children:"String"}),(0,a.jsxs)(n.td,{children:["Filter tasks by task type. See ",(0,a.jsx)(n.a,{href:"/docs/33.0.0/ingestion/tasks",children:"task documentation"})," for more details."]})]})]})]}),"\n",(0,a.jsx)(n.h4,{id:"responses-1",children:"Responses"}),"\n",(0,a.jsxs)(i.A,{children:[(0,a.jsxs)(l.A,{value:"6",label:"200 SUCCESS",children:[(0,a.jsx)("br",{}),(0,a.jsx)(n.p,{children:(0,a.jsx)(n.em,{children:"Successfully retrieved list of complete tasks"})})]}),(0,a.jsxs)(l.A,{value:"7",label:"404 NOT FOUND",children:[(0,a.jsx)("br",{}),(0,a.jsx)(n.p,{children:(0,a.jsx)(n.em,{children:"Request sent to incorrect service"})})]})]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h4,{id:"sample-request-1",children:"Sample request"}),"\n",(0,a.jsxs)(i.A,{children:[(0,a.jsx)(l.A,{value:"8",label:"cURL",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:'curl "http://ROUTER_IP:ROUTER_PORT/druid/indexer/v1/completeTasks"\n'})})}),(0,a.jsx)(l.A,{value:"9",label:"HTTP",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-HTTP",children:"GET /druid/indexer/v1/completeTasks HTTP/1.1\nHost: http://ROUTER_IP:ROUTER_PORT\n"})})})]}),"\n",(0,a.jsx)(n.h4,{id:"sample-response-1",children:"Sample response"}),"\n",(0,a.jsxs)(s,{children:[(0,a.jsx)("summary",{children:"View the response"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'[\n  {\n      "id": "query-223549f8-b993-4483-b028-1b0d54713cad-worker0_0",\n      "groupId": "query-223549f8-b993-4483-b028-1b0d54713cad",\n      "type": "query_worker",\n      "createdTime": "2023-06-22T22:11:37.012Z",\n      "queueInsertionTime": "1970-01-01T00:00:00.000Z",\n      "statusCode": "SUCCESS",\n      "status": "SUCCESS",\n      "runnerStatusCode": "NONE",\n      "duration": 17897,\n      "location": {\n          "host": "localhost",\n          "port": 8101,\n          "tlsPort": -1\n      },\n      "dataSource": "wikipedia_api",\n      "errorMsg": null\n  },\n  {\n      "id": "query-223549f8-b993-4483-b028-1b0d54713cad",\n      "groupId": "query-223549f8-b993-4483-b028-1b0d54713cad",\n      "type": "query_controller",\n      "createdTime": "2023-06-22T22:11:28.367Z",\n      "queueInsertionTime": "1970-01-01T00:00:00.000Z",\n      "statusCode": "SUCCESS",\n      "status": "SUCCESS",\n      "runnerStatusCode": "NONE",\n      "duration": 30317,\n      "location": {\n          "host": "localhost",\n          "port": 8100,\n          "tlsPort": -1\n      },\n      "dataSource": "wikipedia_api",\n      "errorMsg": null\n  }\n]\n'})})]}),"\n",(0,a.jsx)(n.h3,{id:"get-an-array-of-running-tasks",children:"Get an array of running tasks"}),"\n",(0,a.jsxs)(n.p,{children:["Retrieves an array of running task objects in the Druid cluster. It is functionally equivalent to ",(0,a.jsx)(n.code,{children:"/druid/indexer/v1/tasks?state=running"}),". For definitions of the response properties, see the ",(0,a.jsx)(n.a,{href:"/docs/33.0.0/querying/sql-metadata-tables#tasks-table",children:"Tasks table"}),"."]}),"\n",(0,a.jsx)(n.h4,{id:"url-2",children:"URL"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"GET"})," ",(0,a.jsx)(n.code,{children:"/druid/indexer/v1/runningTasks"})]}),"\n",(0,a.jsx)(n.h4,{id:"query-parameters-2",children:"Query parameters"}),"\n",(0,a.jsx)(n.p,{children:"The endpoint supports a set of optional query parameters to filter results."}),"\n",(0,a.jsxs)(n.table,{children:[(0,a.jsx)(n.thead,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.th,{children:"Parameter"}),(0,a.jsx)(n.th,{children:"Type"}),(0,a.jsx)(n.th,{children:"Description"})]})}),(0,a.jsxs)(n.tbody,{children:[(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"datasource"})}),(0,a.jsx)(n.td,{children:"String"}),(0,a.jsx)(n.td,{children:"Return tasks filtered by Druid datasource."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"createdTimeInterval"})}),(0,a.jsx)(n.td,{children:"String (ISO-8601)"}),(0,a.jsxs)(n.td,{children:["Return tasks created within the specified interval. The interval string should be delimited by ",(0,a.jsx)(n.code,{children:"_"})," instead of ",(0,a.jsx)(n.code,{children:"/"}),". For example, ",(0,a.jsx)(n.code,{children:"2023-06-27_2023-06-28"}),"."]})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"max"})}),(0,a.jsx)(n.td,{children:"Integer"}),(0,a.jsxs)(n.td,{children:["Maximum number of ",(0,a.jsx)(n.code,{children:"complete"})," tasks to return. Only applies when ",(0,a.jsx)(n.code,{children:"state"})," is set to ",(0,a.jsx)(n.code,{children:"complete"}),"."]})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"type"})}),(0,a.jsx)(n.td,{children:"String"}),(0,a.jsxs)(n.td,{children:["Filter tasks by task type. See ",(0,a.jsx)(n.a,{href:"/docs/33.0.0/ingestion/tasks",children:"task documentation"})," for more details."]})]})]})]}),"\n",(0,a.jsx)(n.h4,{id:"responses-2",children:"Responses"}),"\n",(0,a.jsx)(i.A,{children:(0,a.jsxs)(l.A,{value:"10",label:"200 SUCCESS",children:[(0,a.jsx)("br",{}),(0,a.jsx)(n.p,{children:(0,a.jsx)(n.em,{children:"Successfully retrieved list of running tasks"})})]})}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h4,{id:"sample-request-2",children:"Sample request"}),"\n",(0,a.jsxs)(i.A,{children:[(0,a.jsx)(l.A,{value:"11",label:"cURL",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:'curl "http://ROUTER_IP:ROUTER_PORT/druid/indexer/v1/runningTasks"\n'})})}),(0,a.jsx)(l.A,{value:"12",label:"HTTP",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-HTTP",children:"GET /druid/indexer/v1/runningTasks HTTP/1.1\nHost: http://ROUTER_IP:ROUTER_PORT\n"})})})]}),"\n",(0,a.jsx)(n.h4,{id:"sample-response-2",children:"Sample response"}),"\n",(0,a.jsxs)(s,{children:[(0,a.jsx)("summary",{children:"View the response"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'[\n  {\n      "id": "query-32663269-ead9-405a-8eb6-0817a952ef47",\n      "groupId": "query-32663269-ead9-405a-8eb6-0817a952ef47",\n      "type": "query_controller",\n      "createdTime": "2023-06-22T22:54:43.170Z",\n      "queueInsertionTime": "2023-06-22T22:54:43.170Z",\n      "statusCode": "RUNNING",\n      "status": "RUNNING",\n      "runnerStatusCode": "RUNNING",\n      "duration": -1,\n      "location": {\n          "host": "localhost",\n          "port": 8100,\n          "tlsPort": -1\n      },\n      "dataSource": "wikipedia_api",\n      "errorMsg": null\n  }\n]\n'})})]}),"\n",(0,a.jsx)(n.h3,{id:"get-an-array-of-waiting-tasks",children:"Get an array of waiting tasks"}),"\n",(0,a.jsxs)(n.p,{children:["Retrieves an array of waiting tasks in the Druid cluster. It is functionally equivalent to ",(0,a.jsx)(n.code,{children:"/druid/indexer/v1/tasks?state=waiting"}),". For definitions of the response properties, see the ",(0,a.jsx)(n.a,{href:"/docs/33.0.0/querying/sql-metadata-tables#tasks-table",children:"Tasks table"}),"."]}),"\n",(0,a.jsx)(n.h4,{id:"url-3",children:"URL"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"GET"})," ",(0,a.jsx)(n.code,{children:"/druid/indexer/v1/waitingTasks"})]}),"\n",(0,a.jsx)(n.h4,{id:"query-parameters-3",children:"Query parameters"}),"\n",(0,a.jsx)(n.p,{children:"The endpoint supports a set of optional query parameters to filter results."}),"\n",(0,a.jsxs)(n.table,{children:[(0,a.jsx)(n.thead,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.th,{children:"Parameter"}),(0,a.jsx)(n.th,{children:"Type"}),(0,a.jsx)(n.th,{children:"Description"})]})}),(0,a.jsxs)(n.tbody,{children:[(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"datasource"})}),(0,a.jsx)(n.td,{children:"String"}),(0,a.jsx)(n.td,{children:"Return tasks filtered by Druid datasource."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"createdTimeInterval"})}),(0,a.jsx)(n.td,{children:"String (ISO-8601)"}),(0,a.jsxs)(n.td,{children:["Return tasks created within the specified interval. The interval string should be delimited by ",(0,a.jsx)(n.code,{children:"_"})," instead of ",(0,a.jsx)(n.code,{children:"/"}),". For example, ",(0,a.jsx)(n.code,{children:"2023-06-27_2023-06-28"}),"."]})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"max"})}),(0,a.jsx)(n.td,{children:"Integer"}),(0,a.jsxs)(n.td,{children:["Maximum number of ",(0,a.jsx)(n.code,{children:"complete"})," tasks to return. Only applies when ",(0,a.jsx)(n.code,{children:"state"})," is set to ",(0,a.jsx)(n.code,{children:"complete"}),"."]})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"type"})}),(0,a.jsx)(n.td,{children:"String"}),(0,a.jsxs)(n.td,{children:["Filter tasks by task type. See ",(0,a.jsx)(n.a,{href:"/docs/33.0.0/ingestion/tasks",children:"task documentation"})," for more details."]})]})]})]}),"\n",(0,a.jsx)(n.h4,{id:"responses-3",children:"Responses"}),"\n",(0,a.jsx)(i.A,{children:(0,a.jsxs)(l.A,{value:"13",label:"200 SUCCESS",children:[(0,a.jsx)("br",{}),(0,a.jsx)(n.p,{children:(0,a.jsx)(n.em,{children:"Successfully retrieved list of waiting tasks"})})]})}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h4,{id:"sample-request-3",children:"Sample request"}),"\n",(0,a.jsxs)(i.A,{children:[(0,a.jsx)(l.A,{value:"14",label:"cURL",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:'curl "http://ROUTER_IP:ROUTER_PORT/druid/indexer/v1/waitingTasks"\n'})})}),(0,a.jsx)(l.A,{value:"15",label:"HTTP",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-HTTP",children:"GET /druid/indexer/v1/waitingTasks HTTP/1.1\nHost: http://ROUTER_IP:ROUTER_PORT\n"})})})]}),"\n",(0,a.jsx)(n.h4,{id:"sample-response-3",children:"Sample response"}),"\n",(0,a.jsxs)(s,{children:[(0,a.jsx)("summary",{children:"View the response"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'[\n  {\n      "id": "index_parallel_wikipedia_auto_biahcbmf_2023-06-26T21:08:05.216Z",\n      "groupId": "index_parallel_wikipedia_auto_biahcbmf_2023-06-26T21:08:05.216Z",\n      "type": "index_parallel",\n      "createdTime": "2023-06-26T21:08:05.217Z",\n      "queueInsertionTime": "1970-01-01T00:00:00.000Z",\n      "statusCode": "RUNNING",\n      "status": "RUNNING",\n      "runnerStatusCode": "WAITING",\n      "duration": -1,\n      "location": {\n          "host": null,\n          "port": -1,\n          "tlsPort": -1\n      },\n      "dataSource": "wikipedia_auto",\n      "errorMsg": null\n  },\n  {\n      "id": "index_parallel_wikipedia_auto_afggfiec_2023-06-26T21:08:05.546Z",\n      "groupId": "index_parallel_wikipedia_auto_afggfiec_2023-06-26T21:08:05.546Z",\n      "type": "index_parallel",\n      "createdTime": "2023-06-26T21:08:05.548Z",\n      "queueInsertionTime": "1970-01-01T00:00:00.000Z",\n      "statusCode": "RUNNING",\n      "status": "RUNNING",\n      "runnerStatusCode": "WAITING",\n      "duration": -1,\n      "location": {\n          "host": null,\n          "port": -1,\n          "tlsPort": -1\n      },\n      "dataSource": "wikipedia_auto",\n      "errorMsg": null\n  },\n  {\n      "id": "index_parallel_wikipedia_auto_jmmddihf_2023-06-26T21:08:06.644Z",\n      "groupId": "index_parallel_wikipedia_auto_jmmddihf_2023-06-26T21:08:06.644Z",\n      "type": "index_parallel",\n      "createdTime": "2023-06-26T21:08:06.671Z",\n      "queueInsertionTime": "1970-01-01T00:00:00.000Z",\n      "statusCode": "RUNNING",\n      "status": "RUNNING",\n      "runnerStatusCode": "WAITING",\n      "duration": -1,\n      "location": {\n          "host": null,\n          "port": -1,\n          "tlsPort": -1\n      },\n      "dataSource": "wikipedia_auto",\n      "errorMsg": null\n  }\n]\n'})})]}),"\n",(0,a.jsx)(n.h3,{id:"get-an-array-of-pending-tasks",children:"Get an array of pending tasks"}),"\n",(0,a.jsxs)(n.p,{children:["Retrieves an array of pending tasks in the Druid cluster. It is functionally equivalent to ",(0,a.jsx)(n.code,{children:"/druid/indexer/v1/tasks?state=pending"}),". For definitions of the response properties, see the ",(0,a.jsx)(n.a,{href:"/docs/33.0.0/querying/sql-metadata-tables#tasks-table",children:"Tasks table"}),"."]}),"\n",(0,a.jsx)(n.h4,{id:"url-4",children:"URL"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"GET"})," ",(0,a.jsx)(n.code,{children:"/druid/indexer/v1/pendingTasks"})]}),"\n",(0,a.jsx)(n.h4,{id:"query-parameters-4",children:"Query parameters"}),"\n",(0,a.jsx)(n.p,{children:"The endpoint supports a set of optional query parameters to filter results."}),"\n",(0,a.jsxs)(n.table,{children:[(0,a.jsx)(n.thead,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.th,{children:"Parameter"}),(0,a.jsx)(n.th,{children:"Type"}),(0,a.jsx)(n.th,{children:"Description"})]})}),(0,a.jsxs)(n.tbody,{children:[(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"datasource"})}),(0,a.jsx)(n.td,{children:"String"}),(0,a.jsx)(n.td,{children:"Return tasks filtered by Druid datasource."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"createdTimeInterval"})}),(0,a.jsx)(n.td,{children:"String (ISO-8601)"}),(0,a.jsxs)(n.td,{children:["Return tasks created within the specified interval. The interval string should be delimited by ",(0,a.jsx)(n.code,{children:"_"})," instead of ",(0,a.jsx)(n.code,{children:"/"}),". For example, ",(0,a.jsx)(n.code,{children:"2023-06-27_2023-06-28"}),"."]})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"max"})}),(0,a.jsx)(n.td,{children:"Integer"}),(0,a.jsxs)(n.td,{children:["Maximum number of ",(0,a.jsx)(n.code,{children:"complete"})," tasks to return. Only applies when ",(0,a.jsx)(n.code,{children:"state"})," is set to ",(0,a.jsx)(n.code,{children:"complete"}),"."]})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"type"})}),(0,a.jsx)(n.td,{children:"String"}),(0,a.jsxs)(n.td,{children:["Filter tasks by task type. See ",(0,a.jsx)(n.a,{href:"/docs/33.0.0/ingestion/tasks",children:"task documentation"})," for more details."]})]})]})]}),"\n",(0,a.jsx)(n.h4,{id:"responses-4",children:"Responses"}),"\n",(0,a.jsx)(i.A,{children:(0,a.jsxs)(l.A,{value:"16",label:"200 SUCCESS",children:[(0,a.jsx)("br",{}),(0,a.jsx)(n.p,{children:(0,a.jsx)(n.em,{children:"Successfully retrieved list of pending tasks"})})]})}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h4,{id:"sample-request-4",children:"Sample request"}),"\n",(0,a.jsxs)(i.A,{children:[(0,a.jsx)(l.A,{value:"17",label:"cURL",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:'curl "http://ROUTER_IP:ROUTER_PORT/druid/indexer/v1/pendingTasks"\n'})})}),(0,a.jsx)(l.A,{value:"18",label:"HTTP",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-HTTP",children:"GET /druid/indexer/v1/pendingTasks HTTP/1.1\nHost: http://ROUTER_IP:ROUTER_PORT\n"})})})]}),"\n",(0,a.jsx)(n.h4,{id:"sample-response-4",children:"Sample response"}),"\n",(0,a.jsxs)(s,{children:[(0,a.jsx)("summary",{children:"View the response"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'[\n  {\n      "id": "query-7b37c315-50a0-4b68-aaa8-b1ef1f060e67",\n      "groupId": "query-7b37c315-50a0-4b68-aaa8-b1ef1f060e67",\n      "type": "query_controller",\n      "createdTime": "2023-06-23T19:53:06.037Z",\n      "queueInsertionTime": "2023-06-23T19:53:06.037Z",\n      "statusCode": "RUNNING",\n      "status": "RUNNING",\n      "runnerStatusCode": "PENDING",\n      "duration": -1,\n      "location": {\n          "host": null,\n          "port": -1,\n          "tlsPort": -1\n      },\n      "dataSource": "wikipedia_api",\n      "errorMsg": null\n  },\n  {\n      "id": "query-544f0c41-f81d-4504-b98b-f9ab8b36ef36",\n      "groupId": "query-544f0c41-f81d-4504-b98b-f9ab8b36ef36",\n      "type": "query_controller",\n      "createdTime": "2023-06-23T19:53:06.616Z",\n      "queueInsertionTime": "2023-06-23T19:53:06.616Z",\n      "statusCode": "RUNNING",\n      "status": "RUNNING",\n      "runnerStatusCode": "PENDING",\n      "duration": -1,\n      "location": {\n          "host": null,\n          "port": -1,\n          "tlsPort": -1\n      },\n      "dataSource": "wikipedia_api",\n      "errorMsg": null\n  }\n]\n'})})]}),"\n",(0,a.jsx)(n.h3,{id:"get-task-payload",children:"Get task payload"}),"\n",(0,a.jsx)(n.p,{children:"Retrieves the payload of a task given the task ID. It returns a JSON object with the task ID and payload that includes task configuration details and relevant specifications associated with the execution of the task."}),"\n",(0,a.jsx)(n.h4,{id:"url-5",children:"URL"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"GET"})," ",(0,a.jsx)(n.code,{children:"/druid/indexer/v1/task/{taskId}"})]}),"\n",(0,a.jsx)(n.h4,{id:"responses-5",children:"Responses"}),"\n",(0,a.jsxs)(i.A,{children:[(0,a.jsxs)(l.A,{value:"19",label:"200 SUCCESS",children:[(0,a.jsx)("br",{}),(0,a.jsx)(n.p,{children:(0,a.jsx)(n.em,{children:"Successfully retrieved payload of task"})})]}),(0,a.jsxs)(l.A,{value:"20",label:"404 NOT FOUND",children:[(0,a.jsx)("br",{}),(0,a.jsx)(n.p,{children:(0,a.jsx)(n.em,{children:"Cannot find task with ID"})})]})]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h4,{id:"sample-request-5",children:"Sample request"}),"\n",(0,a.jsxs)(n.p,{children:["The following examples shows how to retrieve the task payload of a task with the specified ID ",(0,a.jsx)(n.code,{children:"index_parallel_wikipedia_short_iajoonnd_2023-07-07T17:53:12.174Z"}),"."]}),"\n",(0,a.jsxs)(i.A,{children:[(0,a.jsx)(l.A,{value:"21",label:"cURL",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:'curl "http://ROUTER_IP:ROUTER_PORT/druid/indexer/v1/task/index_parallel_wikipedia_short_iajoonnd_2023-07-07T17:53:12.174Z"\n'})})}),(0,a.jsx)(l.A,{value:"22",label:"HTTP",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-HTTP",children:"GET /druid/indexer/v1/task/index_parallel_wikipedia_short_iajoonnd_2023-07-07T17:53:12.174Z HTTP/1.1\nHost: http://ROUTER_IP:ROUTER_PORT\n"})})})]}),"\n",(0,a.jsx)(n.h4,{id:"sample-response-5",children:"Sample response"}),"\n",(0,a.jsxs)(s,{children:[(0,a.jsx)("summary",{children:"View the response"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\n  "task": "index_parallel_wikipedia_short_iajoonnd_2023-07-07T17:53:12.174Z",\n  "payload": {\n      "type": "index_parallel",\n      "id": "index_parallel_wikipedia_short_iajoonnd_2023-07-07T17:53:12.174Z",\n      "groupId": "index_parallel_wikipedia_short_iajoonnd_2023-07-07T17:53:12.174Z",\n      "resource": {\n          "availabilityGroup": "index_parallel_wikipedia_short_iajoonnd_2023-07-07T17:53:12.174Z",\n          "requiredCapacity": 1\n      },\n      "spec": {\n          "dataSchema": {\n              "dataSource": "wikipedia_short",\n              "timestampSpec": {\n                  "column": "time",\n                  "format": "iso",\n                  "missingValue": null\n              },\n              "dimensionsSpec": {\n                  "dimensions": [\n                      {\n                          "type": "string",\n                          "name": "cityName",\n                          "multiValueHandling": "SORTED_ARRAY",\n                          "createBitmapIndex": true\n                      },\n                      {\n                          "type": "string",\n                          "name": "countryName",\n                          "multiValueHandling": "SORTED_ARRAY",\n                          "createBitmapIndex": true\n                      },\n                      {\n                          "type": "string",\n                          "name": "regionName",\n                          "multiValueHandling": "SORTED_ARRAY",\n                          "createBitmapIndex": true\n                      }\n                  ],\n                  "dimensionExclusions": [\n                      "__time",\n                      "time"\n                  ],\n                  "includeAllDimensions": false,\n                  "useSchemaDiscovery": false\n              },\n              "metricsSpec": [],\n              "granularitySpec": {\n                  "type": "uniform",\n                  "segmentGranularity": "DAY",\n                  "queryGranularity": {\n                      "type": "none"\n                  },\n                  "rollup": false,\n                  "intervals": [\n                      "2015-09-12T00:00:00.000Z/2015-09-13T00:00:00.000Z"\n                  ]\n              },\n              "transformSpec": {\n                  "filter": null,\n                  "transforms": []\n              }\n          },\n          "ioConfig": {\n              "type": "index_parallel",\n              "inputSource": {\n                  "type": "local",\n                  "baseDir": "quickstart/tutorial",\n                  "filter": "wikiticker-2015-09-12-sampled.json.gz"\n              },\n              "inputFormat": {\n                  "type": "json"\n              },\n              "appendToExisting": false,\n              "dropExisting": false\n          },\n          "tuningConfig": {\n              "type": "index_parallel",\n              "maxRowsPerSegment": 5000000,\n              "appendableIndexSpec": {\n                  "type": "onheap",\n                  "preserveExistingMetrics": false\n              },\n              "maxRowsInMemory": 25000,\n              "maxBytesInMemory": 0,\n              "skipBytesInMemoryOverheadCheck": false,\n              "maxTotalRows": null,\n              "numShards": null,\n              "splitHintSpec": null,\n              "partitionsSpec": {\n                  "type": "dynamic",\n                  "maxRowsPerSegment": 5000000,\n                  "maxTotalRows": null\n              },\n              "indexSpec": {\n                  "bitmap": {\n                      "type": "roaring"\n                  },\n                  "dimensionCompression": "lz4",\n                  "stringDictionaryEncoding": {\n                      "type": "utf8"\n                  },\n                  "metricCompression": "lz4",\n                  "longEncoding": "longs"\n              },\n              "indexSpecForIntermediatePersists": {\n                  "bitmap": {\n                      "type": "roaring"\n                  },\n                  "dimensionCompression": "lz4",\n                  "stringDictionaryEncoding": {\n                      "type": "utf8"\n                  },\n                  "metricCompression": "lz4",\n                  "longEncoding": "longs"\n              },\n              "maxPendingPersists": 0,\n              "forceGuaranteedRollup": false,\n              "reportParseExceptions": false,\n              "pushTimeout": 0,\n              "segmentWriteOutMediumFactory": null,\n              "maxNumConcurrentSubTasks": 1,\n              "maxRetry": 3,\n              "taskStatusCheckPeriodMs": 1000,\n              "chatHandlerTimeout": "PT10S",\n              "chatHandlerNumRetries": 5,\n              "maxNumSegmentsToMerge": 100,\n              "totalNumMergeTasks": 10,\n              "logParseExceptions": false,\n              "maxParseExceptions": 2147483647,\n              "maxSavedParseExceptions": 0,\n              "maxColumnsToMerge": -1,\n              "awaitSegmentAvailabilityTimeoutMillis": 0,\n              "maxAllowedLockCount": -1,\n              "partitionDimensions": []\n          }\n      },\n      "context": {\n          "forceTimeChunkLock": true,\n          "useLineageBasedSegmentAllocation": true\n      },\n      "dataSource": "wikipedia_short"\n  }\n}\n'})})]}),"\n",(0,a.jsx)(n.h3,{id:"get-task-status",children:"Get task status"}),"\n",(0,a.jsx)(n.p,{children:"Retrieves the status of a task given the task ID. It returns a JSON object with the task's status code, runner status, task type, datasource, and other relevant metadata."}),"\n",(0,a.jsx)(n.h4,{id:"url-6",children:"URL"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"GET"})," ",(0,a.jsx)(n.code,{children:"/druid/indexer/v1/task/{taskId}/status"})]}),"\n",(0,a.jsx)(n.h4,{id:"responses-6",children:"Responses"}),"\n",(0,a.jsxs)(i.A,{children:[(0,a.jsxs)(l.A,{value:"23",label:"200 SUCCESS",children:[(0,a.jsx)("br",{}),(0,a.jsx)(n.p,{children:(0,a.jsx)(n.em,{children:"Successfully retrieved task status"})})]}),(0,a.jsxs)(l.A,{value:"24",label:"404 NOT FOUND",children:[(0,a.jsx)("br",{}),(0,a.jsx)(n.p,{children:(0,a.jsx)(n.em,{children:"Cannot find task with ID"})})]})]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h4,{id:"sample-request-6",children:"Sample request"}),"\n",(0,a.jsxs)(n.p,{children:["The following examples shows how to retrieve the status of a task with the specified ID ",(0,a.jsx)(n.code,{children:"query-223549f8-b993-4483-b028-1b0d54713cad"}),"."]}),"\n",(0,a.jsxs)(i.A,{children:[(0,a.jsx)(l.A,{value:"25",label:"cURL",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:'curl "http://ROUTER_IP:ROUTER_PORT/druid/indexer/v1/task/query-223549f8-b993-4483-b028-1b0d54713cad/status"\n'})})}),(0,a.jsx)(l.A,{value:"26",label:"HTTP",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-HTTP",children:"GET /druid/indexer/v1/task/query-223549f8-b993-4483-b028-1b0d54713cad/status HTTP/1.1\nHost: http://ROUTER_IP:ROUTER_PORT\n"})})})]}),"\n",(0,a.jsx)(n.h4,{id:"sample-response-6",children:"Sample response"}),"\n",(0,a.jsxs)(s,{children:[(0,a.jsx)("summary",{children:"View the response"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\n  "task": "query-223549f8-b993-4483-b028-1b0d54713cad",\n  "status": {\n    "id": "query-223549f8-b993-4483-b028-1b0d54713cad",\n    "groupId": "query-223549f8-b993-4483-b028-1b0d54713cad",\n    "type": "query_controller",\n    "createdTime": "2023-06-22T22:11:28.367Z",\n    "queueInsertionTime": "1970-01-01T00:00:00.000Z",\n    "statusCode": "RUNNING",\n    "status": "RUNNING",\n    "runnerStatusCode": "RUNNING",\n    "duration": -1,\n    "location": {"host": "localhost", "port": 8100, "tlsPort": -1},\n    "dataSource": "wikipedia_api",\n    "errorMsg": null\n  }\n}\n'})})]}),"\n",(0,a.jsx)(n.h3,{id:"get-task-segments",children:"Get task segments"}),"\n",(0,a.jsx)(n.admonition,{type:"info",children:(0,a.jsxs)(n.p,{children:["This API is not supported anymore and always returns a 404 response.\nUse the metric ",(0,a.jsx)(n.code,{children:"segment/added/bytes"})," instead to identify the segment IDs committed by a task."]})}),"\n",(0,a.jsx)(n.h4,{id:"url-7",children:"URL"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"GET"})," ",(0,a.jsx)(n.code,{children:"/druid/indexer/v1/task/{taskId}/segments"})]}),"\n",(0,a.jsx)(n.h4,{id:"responses-7",children:"Responses"}),"\n",(0,a.jsx)(i.A,{children:(0,a.jsx)(l.A,{value:"27",label:"404 NOT FOUND",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\n  "error": "Segment IDs committed by a task action are not persisted anymore. Use the metric \'segment/added/bytes\' to identify the segments created by a task."\n}\n'})})})}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h4,{id:"sample-request-7",children:"Sample request"}),"\n",(0,a.jsxs)(n.p,{children:["The following examples shows how to retrieve the task segment of the task with the specified ID ",(0,a.jsx)(n.code,{children:"query-52a8aafe-7265-4427-89fe-dc51275cc470"}),"."]}),"\n",(0,a.jsxs)(i.A,{children:[(0,a.jsx)(l.A,{value:"28",label:"cURL",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:'curl "http://ROUTER_IP:ROUTER_PORT/druid/indexer/v1/task/query-52a8aafe-7265-4427-89fe-dc51275cc470/reports"\n'})})}),(0,a.jsx)(l.A,{value:"29",label:"HTTP",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-HTTP",children:"GET /druid/indexer/v1/task/query-52a8aafe-7265-4427-89fe-dc51275cc470/reports HTTP/1.1\nHost: http://ROUTER_IP:ROUTER_PORT\n"})})})]}),"\n",(0,a.jsx)(n.h4,{id:"sample-response-7",children:"Sample response"}),"\n",(0,a.jsxs)(n.p,{children:["A successful request returns a ",(0,a.jsx)(n.code,{children:"200 OK"})," response and an array of the task segments."]}),"\n",(0,a.jsx)(n.h3,{id:"get-task-log",children:"Get task log"}),"\n",(0,a.jsx)(n.p,{children:"Retrieves the event log associated with a task. It returns a list of logged events during the lifecycle of the task. The endpoint is useful for providing information about the execution of the task, including any errors or warnings raised."}),"\n",(0,a.jsxs)(n.p,{children:["Task logs are automatically retrieved from the Middle Manager/Indexer or in long-term storage. For reference, see ",(0,a.jsx)(n.a,{href:"/docs/33.0.0/ingestion/tasks#task-logs",children:"Task logs"}),"."]}),"\n",(0,a.jsx)(n.h4,{id:"url-8",children:"URL"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"GET"})," ",(0,a.jsx)(n.code,{children:"/druid/indexer/v1/task/{taskId}/log"})]}),"\n",(0,a.jsx)(n.h4,{id:"query-parameters-5",children:"Query parameters"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"offset"})," (optional)","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Type: Int"}),"\n",(0,a.jsx)(n.li,{children:"Exclude the first passed in number of entries from the response."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.h4,{id:"responses-8",children:"Responses"}),"\n",(0,a.jsx)(i.A,{children:(0,a.jsxs)(l.A,{value:"30",label:"200 SUCCESS",children:[(0,a.jsx)("br",{}),(0,a.jsx)(n.p,{children:(0,a.jsx)(n.em,{children:"Successfully retrieved task log"})})]})}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h4,{id:"sample-request-8",children:"Sample request"}),"\n",(0,a.jsxs)(n.p,{children:["The following examples shows how to retrieve the task log of a task with the specified ID ",(0,a.jsx)(n.code,{children:"index_kafka_social_media_0e905aa31037879_nommnaeg"}),"."]}),"\n",(0,a.jsxs)(i.A,{children:[(0,a.jsx)(l.A,{value:"31",label:"cURL",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:'curl "http://ROUTER_IP:ROUTER_PORT/druid/indexer/v1/task/index_kafka_social_media_0e905aa31037879_nommnaeg/log"\n'})})}),(0,a.jsx)(l.A,{value:"32",label:"HTTP",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-HTTP",children:"GET /druid/indexer/v1/task/index_kafka_social_media_0e905aa31037879_nommnaeg/log HTTP/1.1\nHost: http://ROUTER_IP:ROUTER_PORT\n"})})})]}),"\n",(0,a.jsx)(n.h4,{id:"sample-response-8",children:"Sample response"}),"\n",(0,a.jsxs)(s,{children:[(0,a.jsx)("summary",{children:"View the response"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'  2023-07-03T22:11:17,891 INFO [qtp1251996697-122] org.apache.druid.indexing.seekablestream.SeekableStreamIndexTaskRunner - Sequence[index_kafka_social_media_0e905aa31037879_0] end offsets updated from [{0=9223372036854775807}] to [{0=230985}].\n  2023-07-03T22:11:17,900 INFO [qtp1251996697-122] org.apache.druid.indexing.seekablestream.SeekableStreamIndexTaskRunner - Saved sequence metadata to disk: [SequenceMetadata{sequenceId=0, sequenceName=\'index_kafka_social_media_0e905aa31037879_0\', assignments=[0], startOffsets={0=230985}, exclusiveStartPartitions=[], endOffsets={0=230985}, sentinel=false, checkpointed=true}]\n  2023-07-03T22:11:17,901 INFO [task-runner-0-priority-0] org.apache.druid.indexing.seekablestream.SeekableStreamIndexTaskRunner - Received resume command, resuming ingestion.\n  2023-07-03T22:11:17,901 INFO [task-runner-0-priority-0] org.apache.druid.indexing.seekablestream.SeekableStreamIndexTaskRunner - Finished reading partition[0], up to[230985].\n  2023-07-03T22:11:17,902 INFO [task-runner-0-priority-0] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-kafka-supervisor-dcanhmig-1, groupId=kafka-supervisor-dcanhmig] Resetting generation and member id due to: consumer pro-actively leaving the group\n  2023-07-03T22:11:17,902 INFO [task-runner-0-priority-0] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-kafka-supervisor-dcanhmig-1, groupId=kafka-supervisor-dcanhmig] Request joining group due to: consumer pro-actively leaving the group\n  2023-07-03T22:11:17,902 INFO [task-runner-0-priority-0] org.apache.kafka.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-kafka-supervisor-dcanhmig-1, groupId=kafka-supervisor-dcanhmig] Unsubscribed all topics or patterns and assigned partitions\n  2023-07-03T22:11:17,912 INFO [task-runner-0-priority-0] org.apache.druid.segment.realtime.appenderator.StreamAppenderator - Persisted rows[0] and (estimated) bytes[0]\n  2023-07-03T22:11:17,916 INFO [[index_kafka_social_media_0e905aa31037879_nommnaeg]-appenderator-persist] org.apache.druid.segment.realtime.appenderator.StreamAppenderator - Flushed in-memory data with commit metadata [AppenderatorDriverMetadata{segments={}, lastSegmentIds={}, callerMetadata={nextPartitions=SeekableStreamEndSequenceNumbers{stream=\'social_media\', partitionSequenceNumberMap={0=230985}}}}] for segments:\n  2023-07-03T22:11:17,917 INFO [[index_kafka_social_media_0e905aa31037879_nommnaeg]-appenderator-persist] org.apache.druid.segment.realtime.appenderator.StreamAppenderator - Persisted stats: processed rows: [0], persisted rows[0], sinks: [0], total fireHydrants (across sinks): [0], persisted fireHydrants (across sinks): [0]\n  2023-07-03T22:11:17,919 INFO [task-runner-0-priority-0] org.apache.druid.segment.realtime.appenderator.BaseAppenderatorDriver - Pushing [0] segments in background\n  2023-07-03T22:11:17,921 INFO [task-runner-0-priority-0] org.apache.druid.segment.realtime.appenderator.StreamAppenderator - Persisted rows[0] and (estimated) bytes[0]\n  2023-07-03T22:11:17,924 INFO [[index_kafka_social_media_0e905aa31037879_nommnaeg]-appenderator-persist] org.apache.druid.segment.realtime.appenderator.StreamAppenderator - Flushed in-memory data with commit metadata [AppenderatorDriverMetadata{segments={}, lastSegmentIds={}, callerMetadata={nextPartitions=SeekableStreamStartSequenceNumbers{stream=\'social_media\', partitionSequenceNumberMap={0=230985}, exclusivePartitions=[]}, publishPartitions=SeekableStreamEndSequenceNumbers{stream=\'social_media\', partitionSequenceNumberMap={0=230985}}}}] for segments:\n  2023-07-03T22:11:17,924 INFO [[index_kafka_social_media_0e905aa31037879_nommnaeg]-appenderator-persist] org.apache.druid.segment.realtime.appenderator.StreamAppenderator - Persisted stats: processed rows: [0], persisted rows[0], sinks: [0], total fireHydrants (across sinks): [0], persisted fireHydrants (across sinks): [0]\n  2023-07-03T22:11:17,925 INFO [[index_kafka_social_media_0e905aa31037879_nommnaeg]-appenderator-merge] org.apache.druid.segment.realtime.appenderator.StreamAppenderator - Preparing to push (stats): processed rows: [0], sinks: [0], fireHydrants (across sinks): [0]\n  2023-07-03T22:11:17,925 INFO [[index_kafka_social_media_0e905aa31037879_nommnaeg]-appenderator-merge] org.apache.druid.segment.realtime.appenderator.StreamAppenderator - Push complete...\n  2023-07-03T22:11:17,929 INFO [[index_kafka_social_media_0e905aa31037879_nommnaeg]-publish] org.apache.druid.indexing.seekablestream.SequenceMetadata - With empty segment set, start offsets [SeekableStreamStartSequenceNumbers{stream=\'social_media\', partitionSequenceNumberMap={0=230985}, exclusivePartitions=[]}] and end offsets [SeekableStreamEndSequenceNumbers{stream=\'social_media\', partitionSequenceNumberMap={0=230985}}] are the same, skipping metadata commit.\n  2023-07-03T22:11:17,930 INFO [[index_kafka_social_media_0e905aa31037879_nommnaeg]-publish] org.apache.druid.segment.realtime.appenderator.BaseAppenderatorDriver - Published [0] segments with commit metadata [{nextPartitions=SeekableStreamStartSequenceNumbers{stream=\'social_media\', partitionSequenceNumberMap={0=230985}, exclusivePartitions=[]}, publishPartitions=SeekableStreamEndSequenceNumbers{stream=\'social_media\', partitionSequenceNumberMap={0=230985}}}]\n  2023-07-03T22:11:17,930 INFO [[index_kafka_social_media_0e905aa31037879_nommnaeg]-publish] org.apache.druid.indexing.seekablestream.SeekableStreamIndexTaskRunner - Published 0 segments for sequence [index_kafka_social_media_0e905aa31037879_0] with metadata [AppenderatorDriverMetadata{segments={}, lastSegmentIds={}, callerMetadata={nextPartitions=SeekableStreamStartSequenceNumbers{stream=\'social_media\', partitionSequenceNumberMap={0=230985}, exclusivePartitions=[]}, publishPartitions=SeekableStreamEndSequenceNumbers{stream=\'social_media\', partitionSequenceNumberMap={0=230985}}}}].\n  2023-07-03T22:11:17,931 INFO [[index_kafka_social_media_0e905aa31037879_nommnaeg]-publish] org.apache.druid.indexing.seekablestream.SeekableStreamIndexTaskRunner - Saved sequence metadata to disk: []\n  2023-07-03T22:11:17,932 INFO [task-runner-0-priority-0] org.apache.druid.indexing.seekablestream.SeekableStreamIndexTaskRunner - Handoff complete for segments:\n  2023-07-03T22:11:17,932 INFO [task-runner-0-priority-0] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-kafka-supervisor-dcanhmig-1, groupId=kafka-supervisor-dcanhmig] Resetting generation and member id due to: consumer pro-actively leaving the group\n  2023-07-03T22:11:17,932 INFO [task-runner-0-priority-0] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-kafka-supervisor-dcanhmig-1, groupId=kafka-supervisor-dcanhmig] Request joining group due to: consumer pro-actively leaving the group\n  2023-07-03T22:11:17,933 INFO [task-runner-0-priority-0] org.apache.kafka.common.metrics.Metrics - Metrics scheduler closed\n  2023-07-03T22:11:17,933 INFO [task-runner-0-priority-0] org.apache.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter\n  2023-07-03T22:11:17,933 INFO [task-runner-0-priority-0] org.apache.kafka.common.metrics.Metrics - Metrics reporters closed\n  2023-07-03T22:11:17,935 INFO [task-runner-0-priority-0] org.apache.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-kafka-supervisor-dcanhmig-1 unregistered\n  2023-07-03T22:11:17,936 INFO [task-runner-0-priority-0] org.apache.druid.curator.announcement.Announcer - Unannouncing [/druid/internal-discovery/PEON/localhost:8100]\n  2023-07-03T22:11:17,972 INFO [task-runner-0-priority-0] org.apache.druid.curator.discovery.CuratorDruidNodeAnnouncer - Unannounced self [{"druidNode":{"service":"druid/middleManager","host":"localhost","bindOnHost":false,"plaintextPort":8100,"port":-1,"tlsPort":-1,"enablePlaintextPort":true,"enableTlsPort":false},"nodeType":"peon","services":{"dataNodeService":{"type":"dataNodeService","tier":"_default_tier","maxSize":0,"type":"indexer-executor","serverType":"indexer-executor","priority":0},"lookupNodeService":{"type":"lookupNodeService","lookupTier":"__default"}}}].\n  2023-07-03T22:11:17,972 INFO [task-runner-0-priority-0] org.apache.druid.curator.announcement.Announcer - Unannouncing [/druid/announcements/localhost:8100]\n  2023-07-03T22:11:17,996 INFO [task-runner-0-priority-0] org.apache.druid.indexing.worker.executor.ExecutorLifecycle - Task completed with status: {\n  "id" : "index_kafka_social_media_0e905aa31037879_nommnaeg",\n  "status" : "SUCCESS",\n  "duration" : 3601130,\n  "errorMsg" : null,\n  "location" : {\n      "host" : null,\n      "port" : -1,\n      "tlsPort" : -1\n  }\n  }\n  2023-07-03T22:11:17,998 INFO [main] org.apache.druid.java.util.common.lifecycle.Lifecycle - Stopping lifecycle [module] stage [ANNOUNCEMENTS]\n  2023-07-03T22:11:18,005 INFO [main] org.apache.druid.java.util.common.lifecycle.Lifecycle - Stopping lifecycle [module] stage [SERVER]\n  2023-07-03T22:11:18,009 INFO [main] org.eclipse.jetty.server.AbstractConnector - Stopped ServerConnector@6491006{HTTP/1.1, (http/1.1)}{0.0.0.0:8100}\n  2023-07-03T22:11:18,009 INFO [main] org.eclipse.jetty.server.session - node0 Stopped scavenging\n  2023-07-03T22:11:18,012 INFO [main] org.eclipse.jetty.server.handler.ContextHandler - Stopped o.e.j.s.ServletContextHandler@742aa00a{/,null,STOPPED}\n  2023-07-03T22:11:18,014 INFO [main] org.apache.druid.java.util.common.lifecycle.Lifecycle - Stopping lifecycle [module] stage [NORMAL]\n  2023-07-03T22:11:18,014 INFO [main] org.apache.druid.server.coordination.ZkCoordinator - Stopping ZkCoordinator for [DruidServerMetadata{name=\'localhost:8100\', hostAndPort=\'localhost:8100\', hostAndTlsPort=\'null\', maxSize=0, tier=\'_default_tier\', type=indexer-executor, priority=0}]\n  2023-07-03T22:11:18,014 INFO [main] org.apache.druid.server.coordination.SegmentLoadDropHandler - Stopping...\n  2023-07-03T22:11:18,014 INFO [main] org.apache.druid.server.coordination.SegmentLoadDropHandler - Stopped.\n  2023-07-03T22:11:18,014 INFO [main] org.apache.druid.indexing.overlord.SingleTaskBackgroundRunner - Starting graceful shutdown of task[index_kafka_social_media_0e905aa31037879_nommnaeg].\n  2023-07-03T22:11:18,014 INFO [main] org.apache.druid.indexing.seekablestream.SeekableStreamIndexTaskRunner - Stopping forcefully (status: [PUBLISHING])\n  2023-07-03T22:11:18,019 INFO [LookupExtractorFactoryContainerProvider-MainThread] org.apache.druid.query.lookup.LookupReferencesManager - Lookup Management loop exited. Lookup notices are not handled anymore.\n  2023-07-03T22:11:18,020 INFO [main] org.apache.druid.query.lookup.LookupReferencesManager - Closed lookup [name].\n  2023-07-03T22:11:18,020 INFO [Curator-Framework-0] org.apache.curator.framework.imps.CuratorFrameworkImpl - backgroundOperationsLoop exiting\n  2023-07-03T22:11:18,147 INFO [main] org.apache.zookeeper.ZooKeeper - Session: 0x1000097ceaf0007 closed\n  2023-07-03T22:11:18,147 INFO [main-EventThread] org.apache.zookeeper.ClientCnxn - EventThread shut down for session: 0x1000097ceaf0007\n  2023-07-03T22:11:18,151 INFO [main] org.apache.druid.java.util.common.lifecycle.Lifecycle - Stopping lifecycle [module] stage [INIT]\n  Finished peon task\n'})})]}),"\n",(0,a.jsx)(n.h3,{id:"get-task-completion-report",children:"Get task completion report"}),"\n",(0,a.jsxs)(n.p,{children:["Retrieves a ",(0,a.jsx)(n.a,{href:"/docs/33.0.0/ingestion/tasks#task-reports",children:"task completion report"})," for a task. It returns a JSON object with information about the number of rows ingested, and any parse exceptions that Druid raised."]}),"\n",(0,a.jsx)(n.h4,{id:"url-9",children:"URL"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"GET"})," ",(0,a.jsx)(n.code,{children:"/druid/indexer/v1/task/{taskId}/reports"})]}),"\n",(0,a.jsx)(n.h4,{id:"responses-9",children:"Responses"}),"\n",(0,a.jsx)(i.A,{children:(0,a.jsxs)(l.A,{value:"33",label:"200 SUCCESS",children:[(0,a.jsx)("br",{}),(0,a.jsx)(n.p,{children:(0,a.jsx)(n.em,{children:"Successfully retrieved task report"})})]})}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h4,{id:"sample-request-9",children:"Sample request"}),"\n",(0,a.jsxs)(n.p,{children:["The following examples shows how to retrieve the completion report of a task with the specified ID ",(0,a.jsx)(n.code,{children:"query-52a8aafe-7265-4427-89fe-dc51275cc470"}),"."]}),"\n",(0,a.jsxs)(i.A,{children:[(0,a.jsx)(l.A,{value:"34",label:"cURL",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:'curl "http://ROUTER_IP:ROUTER_PORT/druid/indexer/v1/task/query-52a8aafe-7265-4427-89fe-dc51275cc470/reports"\n'})})}),(0,a.jsx)(l.A,{value:"35",label:"HTTP",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-HTTP",children:"GET /druid/indexer/v1/task/query-52a8aafe-7265-4427-89fe-dc51275cc470/reports HTTP/1.1\nHost: http://ROUTER_IP:ROUTER_PORT\n"})})})]}),"\n",(0,a.jsx)(n.h4,{id:"sample-response-9",children:"Sample response"}),"\n",(0,a.jsxs)(s,{children:[(0,a.jsx)("summary",{children:"View the response"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\n  "ingestionStatsAndErrors": {\n      "type": "ingestionStatsAndErrors",\n      "taskId": "query-52a8aafe-7265-4427-89fe-dc51275cc470",\n      "payload": {\n          "ingestionState": "COMPLETED",\n          "unparseableEvents": {},\n          "rowStats": {\n              "determinePartitions": {\n                  "processed": 0,\n                  "processedBytes": 0,\n                  "processedWithError": 0,\n                  "thrownAway": 0,\n                  "unparseable": 0\n              },\n              "buildSegments": {\n                  "processed": 39244,\n                  "processedBytes": 17106256,\n                  "processedWithError": 0,\n                  "thrownAway": 0,\n                  "unparseable": 0\n              }\n          },\n          "errorMsg": null,\n          "segmentAvailabilityConfirmed": false,\n          "segmentAvailabilityWaitTimeMs": 0\n      }\n  }\n}\n'})})]}),"\n",(0,a.jsx)(n.h2,{id:"task-operations",children:"Task operations"}),"\n",(0,a.jsx)(n.h3,{id:"submit-a-task",children:"Submit a task"}),"\n",(0,a.jsxs)(n.p,{children:["Submits a JSON-based ingestion spec or supervisor spec to the Overlord. It returns the task ID of the submitted task. For information on creating an ingestion spec, refer to the ",(0,a.jsx)(n.a,{href:"/docs/33.0.0/ingestion/ingestion-spec",children:"ingestion spec reference"}),"."]}),"\n",(0,a.jsxs)(n.p,{children:["Note that for most batch ingestion use cases, you should use the ",(0,a.jsx)(n.a,{href:"/docs/33.0.0/api-reference/sql-ingestion-api",children:"SQL-ingestion API"})," instead of JSON-based batch ingestion."]}),"\n",(0,a.jsx)(n.h4,{id:"url-10",children:"URL"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"POST"})," ",(0,a.jsx)(n.code,{children:"/druid/indexer/v1/task"})]}),"\n",(0,a.jsx)(n.h4,{id:"responses-10",children:"Responses"}),"\n",(0,a.jsxs)(i.A,{children:[(0,a.jsxs)(l.A,{value:"36",label:"200 SUCCESS",children:[(0,a.jsx)("br",{}),(0,a.jsx)(n.p,{children:(0,a.jsx)(n.em,{children:"Successfully submitted task"})})]}),(0,a.jsxs)(l.A,{value:"37",label:"400 BAD REQUEST",children:[(0,a.jsx)("br",{}),(0,a.jsx)(n.p,{children:(0,a.jsx)(n.em,{children:"Missing information in query"})})]}),(0,a.jsxs)(l.A,{value:"38",label:"415 UNSUPPORTED MEDIA TYPE",children:[(0,a.jsx)("br",{}),(0,a.jsx)(n.p,{children:(0,a.jsx)(n.em,{children:"Incorrect request body media type"})})]}),(0,a.jsxs)(l.A,{value:"39",label:"500 Server Error",children:[(0,a.jsx)("br",{}),(0,a.jsx)(n.p,{children:(0,a.jsx)(n.em,{children:"Unexpected token or characters in request body"})})]})]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h4,{id:"sample-request-10",children:"Sample request"}),"\n",(0,a.jsxs)(n.p,{children:["The following request is an example of submitting a task to create a datasource named ",(0,a.jsx)(n.code,{children:'"wikipedia auto"'}),"."]}),"\n",(0,a.jsxs)(i.A,{children:[(0,a.jsx)(l.A,{value:"40",label:"cURL",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:'curl "http://ROUTER_IP:ROUTER_PORT/druid/indexer/v1/task" \\\n--header \'Content-Type: application/json\' \\\n--data \'{\n  "type" : "index_parallel",\n  "spec" : {\n    "dataSchema" : {\n      "dataSource" : "wikipedia_auto",\n      "timestampSpec": {\n        "column": "time",\n        "format": "iso"\n      },\n      "dimensionsSpec" : {\n        "useSchemaDiscovery": true\n      },\n      "metricsSpec" : [],\n      "granularitySpec" : {\n        "type" : "uniform",\n        "segmentGranularity" : "day",\n        "queryGranularity" : "none",\n        "intervals" : ["2015-09-12/2015-09-13"],\n        "rollup" : false\n      }\n    },\n    "ioConfig" : {\n      "type" : "index_parallel",\n      "inputSource" : {\n        "type" : "local",\n        "baseDir" : "quickstart/tutorial/",\n        "filter" : "wikiticker-2015-09-12-sampled.json.gz"\n      },\n      "inputFormat" : {\n        "type" : "json"\n      },\n      "appendToExisting" : false\n    },\n    "tuningConfig" : {\n      "type" : "index_parallel",\n      "maxRowsPerSegment" : 5000000,\n      "maxRowsInMemory" : 25000\n    }\n  }\n}\'\n\n'})})}),(0,a.jsx)(l.A,{value:"41",label:"HTTP",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-HTTP",children:'POST /druid/indexer/v1/task HTTP/1.1\nHost: http://ROUTER_IP:ROUTER_PORT\nContent-Type: application/json\nContent-Length: 952\n\n{\n  "type" : "index_parallel",\n  "spec" : {\n    "dataSchema" : {\n      "dataSource" : "wikipedia_auto",\n      "timestampSpec": {\n        "column": "time",\n        "format": "iso"\n      },\n      "dimensionsSpec" : {\n        "useSchemaDiscovery": true\n      },\n      "metricsSpec" : [],\n      "granularitySpec" : {\n        "type" : "uniform",\n        "segmentGranularity" : "day",\n        "queryGranularity" : "none",\n        "intervals" : ["2015-09-12/2015-09-13"],\n        "rollup" : false\n      }\n    },\n    "ioConfig" : {\n      "type" : "index_parallel",\n      "inputSource" : {\n        "type" : "local",\n        "baseDir" : "quickstart/tutorial/",\n        "filter" : "wikiticker-2015-09-12-sampled.json.gz"\n      },\n      "inputFormat" : {\n        "type" : "json"\n      },\n      "appendToExisting" : false\n    },\n    "tuningConfig" : {\n      "type" : "index_parallel",\n      "maxRowsPerSegment" : 5000000,\n      "maxRowsInMemory" : 25000\n    }\n  }\n}\n'})})})]}),"\n",(0,a.jsx)(n.h4,{id:"sample-response-10",children:"Sample response"}),"\n",(0,a.jsxs)(s,{children:[(0,a.jsx)("summary",{children:"View the response"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\n    "task": "index_parallel_wikipedia_odofhkle_2023-06-23T21:07:28.226Z"\n}\n'})})]}),"\n",(0,a.jsx)(n.h3,{id:"shut-down-a-task",children:"Shut down a task"}),"\n",(0,a.jsx)(n.p,{children:"Shuts down a task if it not already complete. Returns a JSON object with the ID of the task that was shut down successfully."}),"\n",(0,a.jsx)(n.h4,{id:"url-11",children:"URL"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"POST"})," ",(0,a.jsx)(n.code,{children:"/druid/indexer/v1/task/{taskId}/shutdown"})]}),"\n",(0,a.jsx)(n.h4,{id:"responses-11",children:"Responses"}),"\n",(0,a.jsxs)(i.A,{children:[(0,a.jsxs)(l.A,{value:"42",label:"200 SUCCESS",children:[(0,a.jsx)("br",{}),(0,a.jsx)(n.p,{children:(0,a.jsx)(n.em,{children:"Successfully shut down task"})})]}),(0,a.jsxs)(l.A,{value:"43",label:"404 NOT FOUND",children:[(0,a.jsx)("br",{}),(0,a.jsx)(n.p,{children:(0,a.jsx)(n.em,{children:"Cannot find task with ID or task is no longer running"})})]})]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h4,{id:"sample-request-11",children:"Sample request"}),"\n",(0,a.jsxs)(n.p,{children:["The following request shows how to shut down a task with the ID ",(0,a.jsx)(n.code,{children:"query-52as 8aafe-7265-4427-89fe-dc51275cc470"}),"."]}),"\n",(0,a.jsxs)(i.A,{children:[(0,a.jsx)(l.A,{value:"44",label:"cURL",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:'curl --request POST "http://ROUTER_IP:ROUTER_PORT/druid/indexer/v1/task/query-52as 8aafe-7265-4427-89fe-dc51275cc470/shutdown"\n'})})}),(0,a.jsx)(l.A,{value:"45",label:"HTTP",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-HTTP",children:"POST /druid/indexer/v1/task/query-52as 8aafe-7265-4427-89fe-dc51275cc470/shutdown HTTP/1.1\nHost: http://ROUTER_IP:ROUTER_PORT\n"})})})]}),"\n",(0,a.jsx)(n.h4,{id:"sample-response-11",children:"Sample response"}),"\n",(0,a.jsxs)(s,{children:[(0,a.jsx)("summary",{children:"View the response"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\n  "task": "query-577a83dd-a14e-4380-bd01-c942b781236b"\n}\n'})})]}),"\n",(0,a.jsx)(n.h3,{id:"shut-down-all-tasks-for-a-datasource",children:"Shut down all tasks for a datasource"}),"\n",(0,a.jsx)(n.p,{children:"Shuts down all tasks for a specified datasource. If successful, it returns a JSON object with the name of the datasource whose tasks are shut down."}),"\n",(0,a.jsx)(n.h4,{id:"url-12",children:"URL"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"POST"})," ",(0,a.jsx)(n.code,{children:"/druid/indexer/v1/datasources/{datasource}/shutdownAllTasks"})]}),"\n",(0,a.jsx)(n.h4,{id:"responses-12",children:"Responses"}),"\n",(0,a.jsxs)(i.A,{children:[(0,a.jsxs)(l.A,{value:"46",label:"200 SUCCESS",children:[(0,a.jsx)("br",{}),(0,a.jsx)(n.p,{children:(0,a.jsx)(n.em,{children:"Successfully shut down tasks"})})]}),(0,a.jsxs)(l.A,{value:"47",label:"404 NOT FOUND",children:[(0,a.jsx)("br",{}),(0,a.jsx)(n.p,{children:(0,a.jsx)(n.em,{children:"Error or datasource does not have a running task"})})]})]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h4,{id:"sample-request-12",children:"Sample request"}),"\n",(0,a.jsxs)(n.p,{children:["The following request is an example of shutting down all tasks for datasource ",(0,a.jsx)(n.code,{children:"wikipedia_auto"}),"."]}),"\n",(0,a.jsxs)(i.A,{children:[(0,a.jsx)(l.A,{value:"48",label:"cURL",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:'curl --request POST "http://ROUTER_IP:ROUTER_PORT/druid/indexer/v1/datasources/wikipedia_auto/shutdownAllTasks"\n'})})}),(0,a.jsx)(l.A,{value:"49",label:"HTTP",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-HTTP",children:"POST /druid/indexer/v1/datasources/wikipedia_auto/shutdownAllTasks HTTP/1.1\nHost: http://ROUTER_IP:ROUTER_PORT\n"})})})]}),"\n",(0,a.jsx)(n.h4,{id:"sample-response-12",children:"Sample response"}),"\n",(0,a.jsxs)(s,{children:[(0,a.jsx)("summary",{children:"View the response"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\n  "dataSource": "wikipedia_api"\n}\n'})})]}),"\n",(0,a.jsx)(n.h2,{id:"task-management",children:"Task management"}),"\n",(0,a.jsx)(n.h3,{id:"retrieve-status-objects-for-tasks",children:"Retrieve status objects for tasks"}),"\n",(0,a.jsx)(n.p,{children:"Retrieves list of task status objects for list of task ID strings in request body. It returns a set of JSON objects with the status, duration, location of each task, and any error messages."}),"\n",(0,a.jsx)(n.h4,{id:"url-13",children:"URL"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"POST"})," ",(0,a.jsx)(n.code,{children:"/druid/indexer/v1/taskStatus"})]}),"\n",(0,a.jsx)(n.h4,{id:"responses-13",children:"Responses"}),"\n",(0,a.jsxs)(i.A,{children:[(0,a.jsxs)(l.A,{value:"50",label:"200 SUCCESS",children:[(0,a.jsx)("br",{}),(0,a.jsx)(n.p,{children:(0,a.jsx)(n.em,{children:"Successfully retrieved status objects"})})]}),(0,a.jsxs)(l.A,{value:"51",label:"415 UNSUPPORTED MEDIA TYPE",children:[(0,a.jsx)("br",{}),(0,a.jsx)(n.p,{children:(0,a.jsx)(n.em,{children:"Missing request body or incorrect request body type"})})]})]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h4,{id:"sample-request-13",children:"Sample request"}),"\n",(0,a.jsxs)(n.p,{children:["The following request is an example of retrieving status objects for task ID ",(0,a.jsx)(n.code,{children:"index_parallel_wikipedia_auto_jndhkpbo_2023-06-26T17:23:05.308Z"})," and ",(0,a.jsx)(n.code,{children:"index_parallel_wikipedia_auto_jbgiianh_2023-06-26T23:17:56.769Z"})," ."]}),"\n",(0,a.jsxs)(i.A,{children:[(0,a.jsx)(l.A,{value:"52",label:"cURL",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:'curl "http://ROUTER_IP:ROUTER_PORT/druid/indexer/v1/taskStatus" \\\n--header \'Content-Type: application/json\' \\\n--data \'["index_parallel_wikipedia_auto_jndhkpbo_2023-06-26T17:23:05.308Z","index_parallel_wikipedia_auto_jbgiianh_2023-06-26T23:17:56.769Z"]\'\n'})})}),(0,a.jsx)(l.A,{value:"53",label:"HTTP",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-HTTP",children:'POST /druid/indexer/v1/taskStatus HTTP/1.1\nHost: http://ROUTER_IP:ROUTER_PORT\nContent-Type: application/json\nContent-Length: 134\n\n["index_parallel_wikipedia_auto_jndhkpbo_2023-06-26T17:23:05.308Z", "index_parallel_wikipedia_auto_jbgiianh_2023-06-26T23:17:56.769Z"]\n'})})})]}),"\n",(0,a.jsx)(n.h4,{id:"sample-response-13",children:"Sample response"}),"\n",(0,a.jsxs)(s,{children:[(0,a.jsx)("summary",{children:"View the response"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\n  "index_parallel_wikipedia_auto_jbgiianh_2023-06-26T23:17:56.769Z": {\n      "id": "index_parallel_wikipedia_auto_jbgiianh_2023-06-26T23:17:56.769Z",\n      "status": "SUCCESS",\n      "duration": 10630,\n      "errorMsg": null,\n      "location": {\n          "host": "localhost",\n          "port": 8100,\n          "tlsPort": -1\n      }\n  },\n  "index_parallel_wikipedia_auto_jndhkpbo_2023-06-26T17:23:05.308Z": {\n      "id": "index_parallel_wikipedia_auto_jndhkpbo_2023-06-26T17:23:05.308Z",\n      "status": "SUCCESS",\n      "duration": 11012,\n      "errorMsg": null,\n      "location": {\n          "host": "localhost",\n          "port": 8100,\n          "tlsPort": -1\n      }\n  }\n}\n'})})]}),"\n",(0,a.jsx)(n.h3,{id:"clean-up-pending-segments-for-a-datasource",children:"Clean up pending segments for a datasource"}),"\n",(0,a.jsxs)(n.p,{children:["Manually clean up pending segments table in metadata storage for ",(0,a.jsx)(n.code,{children:"datasource"}),". It returns a JSON object response with\n",(0,a.jsx)(n.code,{children:"numDeleted"})," for the number of rows deleted from the pending segments table. This API is used by the\n",(0,a.jsx)(n.code,{children:"druid.coordinator.kill.pendingSegments.on"})," ",(0,a.jsx)(n.a,{href:"/docs/33.0.0/configuration/#coordinator-operation",children:"Coordinator setting"}),"\nwhich automates this operation to perform periodically."]}),"\n",(0,a.jsx)(n.h4,{id:"url-14",children:"URL"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"DELETE"})," ",(0,a.jsx)(n.code,{children:"/druid/indexer/v1/pendingSegments/{datasource}"})]}),"\n",(0,a.jsx)(n.h4,{id:"responses-14",children:"Responses"}),"\n",(0,a.jsx)(i.A,{children:(0,a.jsxs)(l.A,{value:"54",label:"200 SUCCESS",children:[(0,a.jsx)("br",{}),(0,a.jsx)(n.p,{children:(0,a.jsx)(n.em,{children:"Successfully deleted pending segments"})})]})}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h4,{id:"sample-request-14",children:"Sample request"}),"\n",(0,a.jsxs)(n.p,{children:["The following request is an example of cleaning up pending segments for the ",(0,a.jsx)(n.code,{children:"wikipedia_api"})," datasource."]}),"\n",(0,a.jsxs)(i.A,{children:[(0,a.jsx)(l.A,{value:"55",label:"cURL",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:'curl --request DELETE "http://ROUTER_IP:ROUTER_PORT/druid/indexer/v1/pendingSegments/wikipedia_api"\n'})})}),(0,a.jsx)(l.A,{value:"56",label:"HTTP",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-HTTP",children:"DELETE /druid/indexer/v1/pendingSegments/wikipedia_api HTTP/1.1\nHost: http://ROUTER_IP:ROUTER_PORT\n"})})})]}),"\n",(0,a.jsx)(n.h4,{id:"sample-response-14",children:"Sample response"}),"\n",(0,a.jsxs)(s,{children:[(0,a.jsx)("summary",{children:"View the response"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\n  "numDeleted": 2\n}\n'})})]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(p,{...e})}):p(e)}},79329:(e,n,s)=>{s.d(n,{A:()=>i});s(96540);var r=s(18215);const a={tabItem:"tabItem_Ymn6"};var t=s(74848);function i(e){var n=e.children,s=e.hidden,i=e.className;return(0,t.jsx)("div",{role:"tabpanel",className:(0,r.A)(a.tabItem,i),hidden:s,children:n})}}}]);