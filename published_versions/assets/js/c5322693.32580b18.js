"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[2552],{28453:(e,t,a)=>{a.d(t,{R:()=>i,x:()=>d});var r=a(96540);const n={},s=r.createContext(n);function i(e){const t=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),r.createElement(s.Provider,{value:t},e.children)}},32548:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>d,default:()=>l,frontMatter:()=>i,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"querying/datasourcemetadataquery","title":"DatasourceMetadata queries","description":"\x3c!--","source":"@site/docs/33.0.0/querying/datasourcemetadataquery.md","sourceDirName":"querying","slug":"/querying/datasourcemetadataquery","permalink":"/docs/33.0.0/querying/datasourcemetadataquery","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"datasourcemetadataquery","title":"DatasourceMetadata queries","sidebar_label":"DatasourceMetadata"},"sidebar":"docs","previous":{"title":"SegmentMetadata","permalink":"/docs/33.0.0/querying/segmentmetadataquery"},"next":{"title":"Filters","permalink":"/docs/33.0.0/querying/filters"}}');var n=a(74848),s=a(28453);const i={id:"datasourcemetadataquery",title:"DatasourceMetadata queries",sidebar_label:"DatasourceMetadata"},d=void 0,o={},c=[];function u(e){const t={a:"a",admonition:"admonition",code:"code",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.admonition,{type:"info",children:(0,n.jsxs)(t.p,{children:["Apache Druid supports two query languages: ",(0,n.jsx)(t.a,{href:"/docs/33.0.0/querying/sql",children:"Druid SQL"})," and ",(0,n.jsx)(t.a,{href:"/docs/33.0.0/querying/",children:"native queries"}),".\nThis document describes a query\ntype that is only available in the native language."]})}),"\n",(0,n.jsx)(t.p,{children:"Data Source Metadata queries return metadata information for a dataSource.  These queries return information about:"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"maxIngestedEventTime"}),": The timestamp of the latest ingested event for the dataSource. For realtime datasources, this may be later than ",(0,n.jsx)(t.code,{children:"MAX(__time)"})," if ",(0,n.jsx)(t.code,{children:"queryGranularity"})," is being used. For non-realtime datasources, this is equivalent to ",(0,n.jsx)(t.code,{children:"MAX(__time)"}),"."]}),"\n"]}),"\n",(0,n.jsx)(t.p,{children:"The grammar for these queries is:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-json",children:'{\n    "queryType" : "dataSourceMetadata",\n    "dataSource": "sample_datasource"\n}\n'})}),"\n",(0,n.jsx)(t.p,{children:"There are 2 main parts to a Data Source Metadata query:"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"property"}),(0,n.jsx)(t.th,{children:"description"}),(0,n.jsx)(t.th,{children:"required?"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"queryType"}),(0,n.jsx)(t.td,{children:'This String should always be "dataSourceMetadata"; this is the first thing Apache Druid looks at to figure out how to interpret the query'}),(0,n.jsx)(t.td,{children:"yes"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"dataSource"}),(0,n.jsxs)(t.td,{children:["A String or Object defining the data source to query, very similar to a table in a relational database. See ",(0,n.jsx)(t.a,{href:"/docs/33.0.0/querying/datasource",children:"DataSource"})," for more information."]}),(0,n.jsx)(t.td,{children:"yes"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"context"}),(0,n.jsxs)(t.td,{children:["See ",(0,n.jsx)(t.a,{href:"/docs/33.0.0/querying/query-context",children:"Context"})]}),(0,n.jsx)(t.td,{children:"no"})]})]})]}),"\n",(0,n.jsx)(t.p,{children:"The format of the result is:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-json",children:'[ {\n  "timestamp" : "2013-05-09T18:24:00.000Z",\n  "result" : {\n    "maxIngestedEventTime" : "2013-05-09T18:24:09.007Z"\n  }\n} ]\n'})})]})}function l(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(u,{...e})}):u(e)}}}]);