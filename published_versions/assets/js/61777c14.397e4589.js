"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[39],{7678:(e,s,r)=>{r.r(s),r.d(s,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>t,metadata:()=>n,toc:()=>u});const n=JSON.parse('{"id":"api-reference/service-status-api","title":"Service status API","description":"\x3c!--","source":"@site/docs/33.0.0/api-reference/service-status-api.md","sourceDirName":"api-reference","slug":"/api-reference/service-status-api","permalink":"/docs/33.0.0/api-reference/service-status-api","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"service-status-api","title":"Service status API","sidebar_label":"Service status"},"sidebar":"docs","previous":{"title":"Lookups","permalink":"/docs/33.0.0/api-reference/lookups-api"},"next":{"title":"Dynamic configuration","permalink":"/docs/33.0.0/api-reference/dynamic-configuration-api"}}');var l=r(74848),a=r(28453),d=r(65537),i=r(79329);const t={id:"service-status-api",title:"Service status API",sidebar_label:"Service status"},o=void 0,c={},u=[{value:"Common",id:"common",level:2},{value:"Get service information",id:"get-service-information",level:3},{value:"URL",id:"url",level:4},{value:"Responses",id:"responses",level:4},{value:"Sample request",id:"sample-request",level:4},{value:"Sample response",id:"sample-response",level:4},{value:"Get service health",id:"get-service-health",level:3},{value:"URL",id:"url-1",level:4},{value:"Responses",id:"responses-1",level:4},{value:"Sample request",id:"sample-request-1",level:4},{value:"Sample response",id:"sample-response-1",level:4},{value:"Get configuration properties",id:"get-configuration-properties",level:3},{value:"URL",id:"url-2",level:4},{value:"Responses",id:"responses-2",level:4},{value:"Sample request",id:"sample-request-2",level:4},{value:"Sample response",id:"sample-response-2",level:4},{value:"Get node discovery status and cluster integration confirmation",id:"get-node-discovery-status-and-cluster-integration-confirmation",level:3},{value:"URL",id:"url-3",level:4},{value:"Responses",id:"responses-3",level:4},{value:"Sample request",id:"sample-request-3",level:4},{value:"Sample response",id:"sample-response-3",level:4},{value:"Get node self-discovery status",id:"get-node-self-discovery-status",level:3},{value:"URL",id:"url-4",level:4},{value:"Responses",id:"responses-4",level:4},{value:"Sample request",id:"sample-request-4",level:4},{value:"Sample response",id:"sample-response-4",level:4},{value:"Coordinator",id:"coordinator",level:2},{value:"Get Coordinator leader address",id:"get-coordinator-leader-address",level:3},{value:"URL",id:"url-5",level:4},{value:"Responses",id:"responses-5",level:4},{value:"Sample request",id:"sample-request-5",level:4},{value:"Sample response",id:"sample-response-5",level:4},{value:"Get Coordinator leader status",id:"get-coordinator-leader-status",level:3},{value:"URL",id:"url-6",level:4},{value:"Responses",id:"responses-6",level:4},{value:"Sample request",id:"sample-request-6",level:4},{value:"Sample response",id:"sample-response-6",level:4},{value:"Overlord",id:"overlord",level:2},{value:"Get Overlord leader address",id:"get-overlord-leader-address",level:3},{value:"URL",id:"url-7",level:4},{value:"Responses",id:"responses-7",level:4},{value:"Sample request",id:"sample-request-7",level:4},{value:"Sample response",id:"sample-response-7",level:4},{value:"Get Overlord leader status",id:"get-overlord-leader-status",level:3},{value:"URL",id:"url-8",level:4},{value:"Responses",id:"responses-8",level:4},{value:"Sample request",id:"sample-request-8",level:4},{value:"Sample response",id:"sample-response-8",level:4},{value:"Middle Manager",id:"middle-manager",level:2},{value:"Get Middle Manager state status",id:"get-middle-manager-state-status",level:3},{value:"URL",id:"url-9",level:4},{value:"Responses",id:"responses-9",level:4},{value:"Sample request",id:"sample-request-9",level:4},{value:"Sample response",id:"sample-response-9",level:4},{value:"Get active tasks",id:"get-active-tasks",level:3},{value:"URL",id:"url-10",level:4},{value:"Responses",id:"responses-10",level:4},{value:"Sample request",id:"sample-request-10",level:4},{value:"Sample response",id:"sample-response-10",level:4},{value:"Get task log",id:"get-task-log",level:3},{value:"URL",id:"url-11",level:4},{value:"Shut down running task",id:"shut-down-running-task",level:3},{value:"URL",id:"url-12",level:4},{value:"Responses",id:"responses-11",level:4},{value:"Sample request",id:"sample-request-11",level:4},{value:"Sample response",id:"sample-response-11",level:4},{value:"Disable Middle Manager",id:"disable-middle-manager",level:3},{value:"URL",id:"url-13",level:4},{value:"Responses",id:"responses-12",level:4},{value:"Sample request",id:"sample-request-12",level:4},{value:"Sample response",id:"sample-response-12",level:4},{value:"Enable Middle Manager",id:"enable-middle-manager",level:3},{value:"URL",id:"url-14",level:4},{value:"Responses",id:"responses-13",level:4},{value:"Sample request",id:"sample-request-13",level:4},{value:"Sample response",id:"sample-response-13",level:4},{value:"Historical",id:"historical",level:2},{value:"Get segment load status",id:"get-segment-load-status",level:3},{value:"URL",id:"url-15",level:4},{value:"Responses",id:"responses-14",level:4},{value:"Sample request",id:"sample-request-14",level:4},{value:"Sample response",id:"sample-response-14",level:4},{value:"Get segment readiness",id:"get-segment-readiness",level:3},{value:"URL",id:"url-16",level:4},{value:"Responses",id:"responses-15",level:4},{value:"Sample request",id:"sample-request-15",level:4},{value:"Sample response",id:"sample-response-15",level:4},{value:"Load Status",id:"load-status",level:2},{value:"Get Broker query load status",id:"get-broker-query-load-status",level:3},{value:"URL",id:"url-17",level:4},{value:"Responses",id:"responses-16",level:4},{value:"Sample request",id:"sample-request-16",level:4},{value:"Sample response",id:"sample-response-16",level:4},{value:"Get Broker query readiness",id:"get-broker-query-readiness",level:3},{value:"URL",id:"url-18",level:4},{value:"Responses",id:"responses-17",level:4},{value:"Sample request",id:"sample-request-17",level:4},{value:"Sample response",id:"sample-response-17",level:4}];function h(e){const s={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",hr:"hr",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,a.R)(),...e.components},{Details:r}=s;return r||function(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(s.p,{children:"This document describes the API endpoints to retrieve service status, cluster information for Apache Druid."}),"\n",(0,l.jsxs)(s.p,{children:["In this document, ",(0,l.jsx)(s.code,{children:"http://SERVICE_IP:SERVICE_PORT"})," is a placeholder for the server address of deployment and the service port. For example, on the quickstart configuration, replace ",(0,l.jsx)(s.code,{children:"http://ROUTER_IP:ROUTER_PORT"})," with ",(0,l.jsx)(s.code,{children:"http://localhost:8888"}),"."]}),"\n",(0,l.jsx)(s.h2,{id:"common",children:"Common"}),"\n",(0,l.jsx)(s.p,{children:"All services support the following endpoints."}),"\n",(0,l.jsx)(s.p,{children:"You can use each endpoint with the ports for each type of service. The following table contains port addresses for a local configuration:"}),"\n",(0,l.jsxs)(s.table,{children:[(0,l.jsx)(s.thead,{children:(0,l.jsxs)(s.tr,{children:[(0,l.jsx)(s.th,{children:"Service"}),(0,l.jsx)(s.th,{children:"Port address"})]})}),(0,l.jsxs)(s.tbody,{children:[(0,l.jsxs)(s.tr,{children:[(0,l.jsx)(s.td,{children:"Coordinator"}),(0,l.jsx)(s.td,{children:"8081"})]}),(0,l.jsxs)(s.tr,{children:[(0,l.jsx)(s.td,{children:"Overlord"}),(0,l.jsx)(s.td,{children:"8081"})]}),(0,l.jsxs)(s.tr,{children:[(0,l.jsx)(s.td,{children:"Router"}),(0,l.jsx)(s.td,{children:"8888"})]}),(0,l.jsxs)(s.tr,{children:[(0,l.jsx)(s.td,{children:"Broker"}),(0,l.jsx)(s.td,{children:"8082"})]}),(0,l.jsxs)(s.tr,{children:[(0,l.jsx)(s.td,{children:"Historical"}),(0,l.jsx)(s.td,{children:"8083"})]}),(0,l.jsxs)(s.tr,{children:[(0,l.jsx)(s.td,{children:"Middle Manager"}),(0,l.jsx)(s.td,{children:"8091"})]})]})]}),"\n",(0,l.jsx)(s.h3,{id:"get-service-information",children:"Get service information"}),"\n",(0,l.jsx)(s.p,{children:"Retrieves the Druid version, loaded extensions, memory used, total memory, and other useful information about the individual service."}),"\n",(0,l.jsxs)(s.p,{children:["Modify the host and port for the endpoint to match the service to query. Refer to the ",(0,l.jsx)(s.a,{href:"#common",children:"default service ports"})," for the port numbers."]}),"\n",(0,l.jsx)(s.h4,{id:"url",children:"URL"}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.code,{children:"GET"})," ",(0,l.jsx)(s.code,{children:"/status"})]}),"\n",(0,l.jsx)(s.h4,{id:"responses",children:"Responses"}),"\n",(0,l.jsx)(d.A,{children:(0,l.jsxs)(i.A,{value:"1",label:"200 SUCCESS",children:[(0,l.jsx)("br",{}),(0,l.jsx)(s.p,{children:(0,l.jsx)(s.em,{children:"Successfully retrieved service information"})})]})}),"\n",(0,l.jsx)(s.hr,{}),"\n",(0,l.jsx)(s.h4,{id:"sample-request",children:"Sample request"}),"\n",(0,l.jsxs)(d.A,{children:[(0,l.jsx)(i.A,{value:"2",label:"cURL",children:(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-shell",children:'curl "http://ROUTER_IP:ROUTER_PORT/status"\n'})})}),(0,l.jsx)(i.A,{value:"3",label:"HTTP",children:(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-http",children:"GET /status HTTP/1.1\nHost: http://ROUTER_IP:ROUTER_PORT\n"})})})]}),"\n",(0,l.jsx)(s.h4,{id:"sample-response",children:"Sample response"}),"\n",(0,l.jsxs)(r,{children:[(0,l.jsx)("summary",{children:"View the response"}),(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-json",children:'{\n  "version": "26.0.0",\n  "modules": [\n      {\n          "name": "org.apache.druid.common.aws.AWSModule",\n          "artifact": "druid-aws-common",\n          "version": "26.0.0"\n      },\n      {\n          "name": "org.apache.druid.common.gcp.GcpModule",\n          "artifact": "druid-gcp-common",\n          "version": "26.0.0"\n      },\n      {\n          "name": "org.apache.druid.storage.hdfs.HdfsStorageDruidModule",\n          "artifact": "druid-hdfs-storage",\n          "version": "26.0.0"\n      },\n      {\n          "name": "org.apache.druid.indexing.kafka.KafkaIndexTaskModule",\n          "artifact": "druid-kafka-indexing-service",\n          "version": "26.0.0"\n      },\n      {\n          "name": "org.apache.druid.query.aggregation.datasketches.theta.SketchModule",\n          "artifact": "druid-datasketches",\n          "version": "26.0.0"\n      },\n      {\n          "name": "org.apache.druid.query.aggregation.datasketches.theta.oldapi.OldApiSketchModule",\n          "artifact": "druid-datasketches",\n          "version": "26.0.0"\n      },\n      {\n          "name": "org.apache.druid.query.aggregation.datasketches.quantiles.DoublesSketchModule",\n          "artifact": "druid-datasketches",\n          "version": "26.0.0"\n      },\n      {\n          "name": "org.apache.druid.query.aggregation.datasketches.tuple.ArrayOfDoublesSketchModule",\n          "artifact": "druid-datasketches",\n          "version": "26.0.0"\n      },\n      {\n          "name": "org.apache.druid.query.aggregation.datasketches.hll.HllSketchModule",\n          "artifact": "druid-datasketches",\n          "version": "26.0.0"\n      },\n      {\n          "name": "org.apache.druid.query.aggregation.datasketches.kll.KllSketchModule",\n          "artifact": "druid-datasketches",\n          "version": "26.0.0"\n      },\n      {\n          "name": "org.apache.druid.msq.guice.MSQExternalDataSourceModule",\n          "artifact": "druid-multi-stage-query",\n          "version": "26.0.0"\n      },\n      {\n          "name": "org.apache.druid.msq.guice.MSQIndexingModule",\n          "artifact": "druid-multi-stage-query",\n          "version": "26.0.0"\n      },\n      {\n          "name": "org.apache.druid.msq.guice.MSQDurableStorageModule",\n          "artifact": "druid-multi-stage-query",\n          "version": "26.0.0"\n      },\n      {\n          "name": "org.apache.druid.msq.guice.MSQServiceClientModule",\n          "artifact": "druid-multi-stage-query",\n          "version": "26.0.0"\n      },\n      {\n          "name": "org.apache.druid.msq.guice.MSQSqlModule",\n          "artifact": "druid-multi-stage-query",\n          "version": "26.0.0"\n      },\n      {\n          "name": "org.apache.druid.msq.guice.SqlTaskModule",\n          "artifact": "druid-multi-stage-query",\n          "version": "26.0.0"\n      }\n  ],\n  "memory": {\n      "maxMemory": 268435456,\n      "totalMemory": 268435456,\n      "freeMemory": 139060688,\n      "usedMemory": 129374768,\n      "directMemory": 134217728\n  }\n}\n'})})]}),"\n",(0,l.jsx)(s.h3,{id:"get-service-health",children:"Get service health"}),"\n",(0,l.jsxs)(s.p,{children:["Retrieves the online status of the individual Druid service. It is a simple health check to determine if the service is running and accessible. If online, it will always return a boolean ",(0,l.jsx)(s.code,{children:"true"})," value, indicating that the service can receive API calls. This endpoint is suitable for automated health checks."]}),"\n",(0,l.jsxs)(s.p,{children:["Modify the host and port for the endpoint to match the service to query. Refer to the ",(0,l.jsx)(s.a,{href:"#common",children:"default service ports"})," for the port numbers."]}),"\n",(0,l.jsxs)(s.p,{children:["Additional checks for readiness should use the ",(0,l.jsx)(s.a,{href:"#get-segment-readiness",children:"Historical segment readiness"})," and ",(0,l.jsx)(s.a,{href:"#get-broker-query-readiness",children:"Broker query readiness"})," endpoints."]}),"\n",(0,l.jsx)(s.h4,{id:"url-1",children:"URL"}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.code,{children:"GET"})," ",(0,l.jsx)(s.code,{children:"/status/health"})]}),"\n",(0,l.jsx)(s.h4,{id:"responses-1",children:"Responses"}),"\n",(0,l.jsx)(d.A,{children:(0,l.jsxs)(i.A,{value:"4",label:"200 SUCCESS",children:[(0,l.jsx)("br",{}),(0,l.jsx)(s.p,{children:(0,l.jsx)(s.em,{children:"Successfully retrieved service health"})})]})}),"\n",(0,l.jsx)(s.h4,{id:"sample-request-1",children:"Sample request"}),"\n",(0,l.jsxs)(d.A,{children:[(0,l.jsx)(i.A,{value:"5",label:"cURL",children:(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-shell",children:'curl "http://ROUTER_IP:ROUTER_PORT/status/health"\n'})})}),(0,l.jsx)(i.A,{value:"6",label:"HTTP",children:(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-http",children:"GET /status/health HTTP/1.1\nHost: http://ROUTER_IP:ROUTER_PORT\n"})})})]}),"\n",(0,l.jsx)(s.h4,{id:"sample-response-1",children:"Sample response"}),"\n",(0,l.jsxs)(r,{children:[(0,l.jsx)("summary",{children:"View the response"}),(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-json",children:"true\n"})})]}),"\n",(0,l.jsx)(s.h3,{id:"get-configuration-properties",children:"Get configuration properties"}),"\n",(0,l.jsx)(s.p,{children:"Retrieves the current configuration properties of the individual service queried."}),"\n",(0,l.jsxs)(s.p,{children:["Modify the host and port for the endpoint to match the service to query. Refer to the ",(0,l.jsx)(s.a,{href:"#common",children:"default service ports"})," for the port numbers."]}),"\n",(0,l.jsx)(s.h4,{id:"url-2",children:"URL"}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.code,{children:"GET"})," ",(0,l.jsx)(s.code,{children:"/status/properties"})]}),"\n",(0,l.jsx)(s.h4,{id:"responses-2",children:"Responses"}),"\n",(0,l.jsx)(d.A,{children:(0,l.jsxs)(i.A,{value:"7",label:"200 SUCCESS",children:[(0,l.jsx)("br",{}),(0,l.jsx)(s.p,{children:(0,l.jsx)(s.em,{children:"Successfully retrieved service configuration properties"})})]})}),"\n",(0,l.jsx)(s.h4,{id:"sample-request-2",children:"Sample request"}),"\n",(0,l.jsxs)(d.A,{children:[(0,l.jsx)(i.A,{value:"8",label:"cURL",children:(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-shell",children:'curl "http://ROUTER_IP:ROUTER_PORT/status/properties"\n'})})}),(0,l.jsx)(i.A,{value:"9",label:"HTTP",children:(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-http",children:"GET /status/properties HTTP/1.1\nHost: http://ROUTER_IP:ROUTER_PORT\n"})})})]}),"\n",(0,l.jsx)(s.h4,{id:"sample-response-2",children:"Sample response"}),"\n",(0,l.jsxs)(r,{children:[(0,l.jsx)("summary",{children:"View the response"}),(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-json",children:'{\n{\n  "gopherProxySet": "false",\n  "awt.toolkit": "sun.lwawt.macosx.LWCToolkit",\n  "druid.monitoring.monitors": "[\\"org.apache.druid.java.util.metrics.JvmMonitor\\"]",\n  "java.specification.version": "11",\n  "sun.cpu.isalist": "",\n  "druid.plaintextPort": "8888",\n  "sun.jnu.encoding": "UTF-8",\n  "druid.indexing.doubleStorage": "double",\n  "druid.metadata.storage.connector.port": "1527",\n  "java.class.path": "/Users/genericUserPath",\n  "log4j.shutdownHookEnabled": "true",\n  "java.vm.vendor": "Homebrew",\n  "sun.arch.data.model": "64",\n  "druid.extensions.loadList": "[\\"druid-hdfs-storage\\", \\"druid-kafka-indexing-service\\", \\"druid-datasketches\\", \\"druid-multi-stage-query\\"]",\n  "java.vendor.url": "https://github.com/Homebrew/homebrew-core/issues",\n  "druid.router.coordinatorServiceName": "druid/coordinator",\n  "user.timezone": "UTC",\n  "druid.global.http.eagerInitialization": "false",\n  "os.name": "Mac OS X",\n  "java.vm.specification.version": "11",\n  "sun.java.launcher": "SUN_STANDARD",\n  "user.country": "US",\n  "sun.boot.library.path": "/opt/homebrew/Cellar/openjdk@11/11.0.19/libexec/openjdk.jdk/Contents/Home/lib",\n  "sun.java.command": "org.apache.druid.cli.Main server router",\n  "http.nonProxyHosts": "local|*.local|169.254/16|*.169.254/16",\n  "jdk.debug": "release",\n  "druid.metadata.storage.connector.host": "localhost",\n  "sun.cpu.endian": "little",\n  "druid.zk.paths.base": "/druid",\n  "user.home": "/Users/genericUser",\n  "user.language": "en",\n  "java.specification.vendor": "Oracle Corporation",\n  "java.version.date": "2023-04-18",\n  "java.home": "/opt/homebrew/Cellar/openjdk@11/11.0.19/libexec/openjdk.jdk/Contents/Home",\n  "druid.service": "druid/router",\n  "druid.selectors.coordinator.serviceName": "druid/coordinator",\n  "druid.metadata.storage.connector.connectURI": "jdbc:derby://localhost:1527/var/druid/metadata.db;create=true",\n  "file.separator": "/",\n  "druid.selectors.indexing.serviceName": "druid/overlord",\n  "java.vm.compressedOopsMode": "Zero based",\n  "druid.metadata.storage.type": "derby",\n  "line.separator": "\\n",\n  "druid.log.path": "/Users/genericUserPath",\n  "java.vm.specification.vendor": "Oracle Corporation",\n  "java.specification.name": "Java Platform API Specification",\n  "druid.indexer.logs.directory": "var/druid/indexing-logs",\n  "java.awt.graphicsenv": "sun.awt.CGraphicsEnvironment",\n  "druid.router.defaultBrokerServiceName": "druid/broker",\n  "druid.storage.storageDirectory": "var/druid/segments",\n  "sun.management.compiler": "HotSpot 64-Bit Tiered Compilers",\n  "ftp.nonProxyHosts": "local|*.local|169.254/16|*.169.254/16",\n  "java.runtime.version": "11.0.19+0",\n  "user.name": "genericUser",\n  "druid.indexer.logs.type": "file",\n  "druid.host": "localhost",\n  "log4j2.is.webapp": "false",\n  "path.separator": ":",\n  "os.version": "12.6.5",\n  "druid.lookup.enableLookupSyncOnStartup": "false",\n  "java.runtime.name": "OpenJDK Runtime Environment",\n  "druid.zk.service.host": "localhost",\n  "file.encoding": "UTF-8",\n  "druid.sql.planner.useGroupingSetForExactDistinct": "true",\n  "druid.router.managementProxy.enabled": "true",\n  "java.vm.name": "OpenJDK 64-Bit Server VM",\n  "java.vendor.version": "Homebrew",\n  "druid.startup.logging.logProperties": "true",\n  "java.vendor.url.bug": "https://github.com/Homebrew/homebrew-core/issues",\n  "log4j.shutdownCallbackRegistry": "org.apache.druid.common.config.Log4jShutdown",\n  "java.io.tmpdir": "var/tmp",\n  "druid.sql.enable": "true",\n  "druid.emitter.logging.logLevel": "info",\n  "java.version": "11.0.19",\n  "user.dir": "/Users/genericUser/Downloads/apache-druid-26.0.0",\n  "os.arch": "aarch64",\n  "java.vm.specification.name": "Java Virtual Machine Specification",\n  "druid.node.type": "router",\n  "java.awt.printerjob": "sun.lwawt.macosx.CPrinterJob",\n  "sun.os.patch.level": "unknown",\n  "java.util.logging.manager": "org.apache.logging.log4j.jul.LogManager",\n  "java.library.path": "/Users/genericUserPath",\n  "java.vendor": "Homebrew",\n  "java.vm.info": "mixed mode",\n  "java.vm.version": "11.0.19+0",\n  "druid.emitter": "noop",\n  "sun.io.unicode.encoding": "UnicodeBig",\n  "druid.storage.type": "local",\n  "java.class.version": "55.0",\n  "socksNonProxyHosts": "local|*.local|169.254/16|*.169.254/16",\n  "druid.server.hiddenProperties": "[\\"druid.s3.accessKey\\",\\"druid.s3.secretKey\\",\\"druid.metadata.storage.connector.password\\", \\"password\\", \\"key\\", \\"token\\", \\"pwd\\"]"\n}\n'})})]}),"\n",(0,l.jsx)(s.h3,{id:"get-node-discovery-status-and-cluster-integration-confirmation",children:"Get node discovery status and cluster integration confirmation"}),"\n",(0,l.jsxs)(s.p,{children:["Retrieves a JSON map of the form ",(0,l.jsx)(s.code,{children:'{"selfDiscovered": true/false}'}),", indicating whether the node has received a confirmation from the central node discovery mechanism (currently ZooKeeper) of the Druid cluster that the node has been added to the cluster."]}),"\n",(0,l.jsxs)(s.p,{children:['Only consider a Druid node "healthy" or "ready" in automated deployment/container management systems when this endpoint returns ',(0,l.jsx)(s.code,{children:'{"selfDiscovered": true}'}),". Nodes experiencing network issues may become isolated and are not healthy.\nFor nodes that use Zookeeper segment discovery, a response of ",(0,l.jsx)(s.code,{children:'{"selfDiscovered": true}'})," indicates that the node's Zookeeper client has started receiving data from the Zookeeper cluster, enabling timely discovery of segments and other nodes."]}),"\n",(0,l.jsx)(s.h4,{id:"url-3",children:"URL"}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.code,{children:"GET"})," ",(0,l.jsx)(s.code,{children:"/status/selfDiscovered/status"})]}),"\n",(0,l.jsx)(s.h4,{id:"responses-3",children:"Responses"}),"\n",(0,l.jsx)(d.A,{children:(0,l.jsxs)(i.A,{value:"10",label:"200 SUCCESS",children:[(0,l.jsx)("br",{}),(0,l.jsx)(s.p,{children:(0,l.jsx)(s.em,{children:"Node was successfully added to the cluster"})})]})}),"\n",(0,l.jsx)(s.h4,{id:"sample-request-3",children:"Sample request"}),"\n",(0,l.jsxs)(d.A,{children:[(0,l.jsx)(i.A,{value:"11",label:"cURL",children:(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-shell",children:'curl "http://ROUTER_IP:ROUTER_PORT/status/selfDiscovered/status"\n'})})}),(0,l.jsx)(i.A,{value:"12",label:"HTTP",children:(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-http",children:"GET /status/selfDiscovered/status HTTP/1.1\nHost: http://ROUTER_IP:ROUTER_PORT\n"})})})]}),"\n",(0,l.jsx)(s.h4,{id:"sample-response-3",children:"Sample response"}),"\n",(0,l.jsxs)(r,{children:[(0,l.jsx)("summary",{children:"View the response"}),(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-json",children:'{\n  "selfDiscovered": true\n}\n'})})]}),"\n",(0,l.jsx)(s.h3,{id:"get-node-self-discovery-status",children:"Get node self-discovery status"}),"\n",(0,l.jsxs)(s.p,{children:["Returns an HTTP status code to indicate node discovery within the Druid cluster. This endpoint is similar to the ",(0,l.jsx)(s.code,{children:"status/selfDiscovered/status"})," endpoint, but relies on HTTP status codes alone.\nUse this endpoint for monitoring checks that are unable to examine the response body. For example, AWS load balancer health checks."]}),"\n",(0,l.jsx)(s.h4,{id:"url-4",children:"URL"}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.code,{children:"GET"})," ",(0,l.jsx)(s.code,{children:"/status/selfDiscovered"})]}),"\n",(0,l.jsx)(s.h4,{id:"responses-4",children:"Responses"}),"\n",(0,l.jsxs)(d.A,{children:[(0,l.jsxs)(i.A,{value:"13",label:"200 SUCCESS",children:[(0,l.jsx)("br",{}),(0,l.jsx)(s.p,{children:(0,l.jsx)(s.em,{children:"Successfully retrieved node status"})})]}),(0,l.jsxs)(i.A,{value:"14",label:"503 SERVICE UNAVAILABLE",children:[(0,l.jsx)("br",{}),(0,l.jsx)(s.p,{children:(0,l.jsx)(s.em,{children:"Unsuccessful node self-discovery"})})]})]}),"\n",(0,l.jsx)(s.h4,{id:"sample-request-4",children:"Sample request"}),"\n",(0,l.jsxs)(d.A,{children:[(0,l.jsx)(i.A,{value:"15",label:"cURL",children:(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-shell",children:'curl "http://ROUTER_IP:ROUTER_PORT/status/selfDiscovered"\n'})})}),(0,l.jsx)(i.A,{value:"16",label:"HTTP",children:(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-http",children:"GET /status/selfDiscovered HTTP/1.1\nHost: http://ROUTER_IP:ROUTER_PORT\n"})})})]}),"\n",(0,l.jsx)(s.h4,{id:"sample-response-4",children:"Sample response"}),"\n",(0,l.jsx)(s.p,{children:"A successful response to this endpoint results in an empty response body."}),"\n",(0,l.jsx)(s.h2,{id:"coordinator",children:"Coordinator"}),"\n",(0,l.jsx)(s.h3,{id:"get-coordinator-leader-address",children:"Get Coordinator leader address"}),"\n",(0,l.jsx)(s.p,{children:"Retrieves the address of the current leader Coordinator of the cluster. If any request is sent to a non-leader Coordinator, the request is automatically redirected to the leader Coordinator."}),"\n",(0,l.jsx)(s.h4,{id:"url-5",children:"URL"}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.code,{children:"GET"})," ",(0,l.jsx)(s.code,{children:"/druid/coordinator/v1/leader"})]}),"\n",(0,l.jsx)(s.h4,{id:"responses-5",children:"Responses"}),"\n",(0,l.jsx)(d.A,{children:(0,l.jsxs)(i.A,{value:"17",label:"200 SUCCESS",children:[(0,l.jsx)("br",{}),(0,l.jsx)(s.p,{children:(0,l.jsx)(s.em,{children:"Successfully retrieved leader Coordinator address"})})]})}),"\n",(0,l.jsx)(s.hr,{}),"\n",(0,l.jsx)(s.h4,{id:"sample-request-5",children:"Sample request"}),"\n",(0,l.jsxs)(d.A,{children:[(0,l.jsx)(i.A,{value:"18",label:"cURL",children:(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-shell",children:'curl "http://ROUTER_IP:ROUTER_PORT/druid/coordinator/v1/leader"\n'})})}),(0,l.jsx)(i.A,{value:"19",label:"HTTP",children:(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-http",children:"GET /druid/coordinator/v1/leader HTTP/1.1\nHost: http://ROUTER_IP:ROUTER_PORT\n"})})})]}),"\n",(0,l.jsx)(s.h4,{id:"sample-response-5",children:"Sample response"}),"\n",(0,l.jsxs)(r,{children:[(0,l.jsx)("summary",{children:"View the response"}),(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-json",children:"http://localhost:8081\n"})})]}),"\n",(0,l.jsx)(s.h3,{id:"get-coordinator-leader-status",children:"Get Coordinator leader status"}),"\n",(0,l.jsxs)(s.p,{children:["Retrieves a JSON object with a ",(0,l.jsx)(s.code,{children:"leader"})," key. Returns ",(0,l.jsx)(s.code,{children:"true"})," if this server is the current leader Coordinator of the cluster. To get the individual address of the leader Coordinator node, see the ",(0,l.jsx)(s.a,{href:"#get-coordinator-leader-address",children:"leader endpoint"}),"."]}),"\n",(0,l.jsx)(s.p,{children:"Use this endpoint as a load balancer status check when you only want the active leader to be considered in-service at the load balancer."}),"\n",(0,l.jsx)(s.h4,{id:"url-6",children:"URL"}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.code,{children:"GET"})," ",(0,l.jsx)(s.code,{children:"/druid/coordinator/v1/isLeader"})]}),"\n",(0,l.jsx)(s.h4,{id:"responses-6",children:"Responses"}),"\n",(0,l.jsxs)(d.A,{children:[(0,l.jsxs)(i.A,{value:"20",label:"200 SUCCESS",children:[(0,l.jsx)("br",{}),(0,l.jsx)(s.p,{children:(0,l.jsx)(s.em,{children:"Current server is the leader"})})]}),(0,l.jsxs)(i.A,{value:"21",label:"404 NOT FOUND",children:[(0,l.jsx)("br",{}),(0,l.jsx)(s.p,{children:(0,l.jsx)(s.em,{children:"Current server is not the leader"})})]})]}),"\n",(0,l.jsx)(s.hr,{}),"\n",(0,l.jsx)(s.h4,{id:"sample-request-6",children:"Sample request"}),"\n",(0,l.jsxs)(d.A,{children:[(0,l.jsx)(i.A,{value:"22",label:"cURL",children:(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-shell",children:'curl "http://COORDINATOR_IP:COORDINATOR_PORT/druid/coordinator/v1/isLeader"\n'})})}),(0,l.jsx)(i.A,{value:"23",label:"HTTP",children:(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-http",children:"GET /druid/coordinator/v1/isLeader HTTP/1.1\nHost: http://COORDINATOR_IP:COORDINATOR_PORT\n"})})})]}),"\n",(0,l.jsx)(s.h4,{id:"sample-response-6",children:"Sample response"}),"\n",(0,l.jsxs)(r,{children:[(0,l.jsx)("summary",{children:"View the response"}),(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-json",children:'{\n  "leader": true\n}\n'})})]}),"\n",(0,l.jsx)(s.h2,{id:"overlord",children:"Overlord"}),"\n",(0,l.jsx)(s.h3,{id:"get-overlord-leader-address",children:"Get Overlord leader address"}),"\n",(0,l.jsx)(s.p,{children:"Retrieves the address of the current leader Overlord of the cluster. In a cluster of multiple Overlords, only one Overlord assumes the leading role, while the remaining Overlords remain on standby."}),"\n",(0,l.jsx)(s.h4,{id:"url-7",children:"URL"}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.code,{children:"GET"})," ",(0,l.jsx)(s.code,{children:"/druid/indexer/v1/leader"})]}),"\n",(0,l.jsx)(s.h4,{id:"responses-7",children:"Responses"}),"\n",(0,l.jsx)(d.A,{children:(0,l.jsxs)(i.A,{value:"24",label:"200 SUCCESS",children:[(0,l.jsx)("br",{}),(0,l.jsx)(s.p,{children:(0,l.jsx)(s.em,{children:"Successfully retrieved leader Overlord address"})})]})}),"\n",(0,l.jsx)(s.hr,{}),"\n",(0,l.jsx)(s.h4,{id:"sample-request-7",children:"Sample request"}),"\n",(0,l.jsxs)(d.A,{children:[(0,l.jsx)(i.A,{value:"25",label:"cURL",children:(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-shell",children:'curl "http://ROUTER_IP:ROUTER_PORT/druid/indexer/v1/leader"\n'})})}),(0,l.jsx)(i.A,{value:"26",label:"HTTP",children:(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-http",children:"GET /druid/indexer/v1/leader HTTP/1.1\nHost: http://ROUTER_IP:ROUTER_PORT\n"})})})]}),"\n",(0,l.jsx)(s.h4,{id:"sample-response-7",children:"Sample response"}),"\n",(0,l.jsxs)(r,{children:[(0,l.jsx)("summary",{children:"View the response"}),(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-json",children:"http://localhost:8081\n"})})]}),"\n",(0,l.jsx)(s.h3,{id:"get-overlord-leader-status",children:"Get Overlord leader status"}),"\n",(0,l.jsxs)(s.p,{children:["Retrieves a JSON object with a ",(0,l.jsx)(s.code,{children:"leader"})," property. The value can be ",(0,l.jsx)(s.code,{children:"true"})," or ",(0,l.jsx)(s.code,{children:"false"}),", indicating if this server is the current leader Overlord of the cluster. To get the individual address of the leader Overlord node, see the ",(0,l.jsx)(s.a,{href:"#get-overlord-leader-address",children:"leader endpoint"}),"."]}),"\n",(0,l.jsx)(s.p,{children:"Use this endpoint as a load balancer status check when you only want the active leader to be considered in-service at the load balancer."}),"\n",(0,l.jsx)(s.h4,{id:"url-8",children:"URL"}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.code,{children:"GET"})," ",(0,l.jsx)(s.code,{children:"/druid/indexer/v1/isLeader"})]}),"\n",(0,l.jsx)(s.h4,{id:"responses-8",children:"Responses"}),"\n",(0,l.jsxs)(d.A,{children:[(0,l.jsxs)(i.A,{value:"27",label:"200 SUCCESS",children:[(0,l.jsx)("br",{}),(0,l.jsx)(s.p,{children:(0,l.jsx)(s.em,{children:"Current server is the leader"})})]}),(0,l.jsxs)(i.A,{value:"28",label:"404 NOT FOUND",children:[(0,l.jsx)("br",{}),(0,l.jsx)(s.p,{children:(0,l.jsx)(s.em,{children:"Current server is not the leader"})})]})]}),"\n",(0,l.jsx)(s.hr,{}),"\n",(0,l.jsx)(s.h4,{id:"sample-request-8",children:"Sample request"}),"\n",(0,l.jsxs)(d.A,{children:[(0,l.jsx)(i.A,{value:"29",label:"cURL",children:(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-shell",children:'curl "http://OVERLORD_IP:OVERLORD_PORT/druid/indexer/v1/isLeader"\n'})})}),(0,l.jsx)(i.A,{value:"30",label:"HTTP",children:(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-http",children:"GET /druid/indexer/v1/isLeader HTTP/1.1\nHost: http://OVERLORD_IP:OVERLORD_PORT\n"})})})]}),"\n",(0,l.jsx)(s.h4,{id:"sample-response-8",children:"Sample response"}),"\n",(0,l.jsxs)(r,{children:[(0,l.jsx)("summary",{children:"View the response"}),(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-json",children:'{\n  "leader": true\n}\n'})})]}),"\n",(0,l.jsx)(s.h2,{id:"middle-manager",children:"Middle Manager"}),"\n",(0,l.jsx)(s.h3,{id:"get-middle-manager-state-status",children:"Get Middle Manager state status"}),"\n",(0,l.jsxs)(s.p,{children:["Retrieves the enabled state of the Middle Manager process. Returns JSON object keyed by the combined ",(0,l.jsx)(s.code,{children:"druid.host"})," and ",(0,l.jsx)(s.code,{children:"druid.port"})," with a boolean ",(0,l.jsx)(s.code,{children:"true"})," or ",(0,l.jsx)(s.code,{children:"false"})," state as the value."]}),"\n",(0,l.jsx)(s.h4,{id:"url-9",children:"URL"}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.code,{children:"GET"})," ",(0,l.jsx)(s.code,{children:"/druid/worker/v1/enabled"})]}),"\n",(0,l.jsx)(s.h4,{id:"responses-9",children:"Responses"}),"\n",(0,l.jsx)(d.A,{children:(0,l.jsxs)(i.A,{value:"31",label:"200 SUCCESS",children:[(0,l.jsx)("br",{}),(0,l.jsx)(s.p,{children:(0,l.jsx)(s.em,{children:"Successfully retrieved Middle Manager state"})})]})}),"\n",(0,l.jsx)(s.hr,{}),"\n",(0,l.jsx)(s.h4,{id:"sample-request-9",children:"Sample request"}),"\n",(0,l.jsxs)(d.A,{children:[(0,l.jsx)(i.A,{value:"32",label:"cURL",children:(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-shell",children:'curl "http://MIDDLEMANAGER_IP:MIDDLEMANAGER_PORT/druid/worker/v1/enabled"\n'})})}),(0,l.jsx)(i.A,{value:"33",label:"HTTP",children:(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-http",children:"GET /druid/worker/v1/enabled HTTP/1.1\nHost: http://MIDDLEMANAGER_IP:MIDDLEMANAGER_PORT\n"})})})]}),"\n",(0,l.jsx)(s.h4,{id:"sample-response-9",children:"Sample response"}),"\n",(0,l.jsxs)(r,{children:[(0,l.jsx)("summary",{children:"View the response"}),(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-json",children:'{\n  "localhost:8091": true\n}\n'})})]}),"\n",(0,l.jsx)(s.h3,{id:"get-active-tasks",children:"Get active tasks"}),"\n",(0,l.jsxs)(s.p,{children:["Retrieves a list of active tasks being run on the Middle Manager. Returns JSON list of task ID strings. Note that for normal usage, you should use the ",(0,l.jsx)(s.code,{children:"/druid/indexer/v1/tasks"})," ",(0,l.jsx)(s.a,{href:"/docs/33.0.0/api-reference/tasks-api",children:"Tasks API"})," endpoint or one of the task state specific variants instead."]}),"\n",(0,l.jsx)(s.h4,{id:"url-10",children:"URL"}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.code,{children:"GET"})," ",(0,l.jsx)(s.code,{children:"/druid/worker/v1/tasks"})]}),"\n",(0,l.jsx)(s.h4,{id:"responses-10",children:"Responses"}),"\n",(0,l.jsx)(d.A,{children:(0,l.jsxs)(i.A,{value:"34",label:"200 SUCCESS",children:[(0,l.jsx)("br",{}),(0,l.jsx)(s.p,{children:(0,l.jsx)(s.em,{children:"Successfully retrieved active tasks"})})]})}),"\n",(0,l.jsx)(s.hr,{}),"\n",(0,l.jsx)(s.h4,{id:"sample-request-10",children:"Sample request"}),"\n",(0,l.jsxs)(d.A,{children:[(0,l.jsx)(i.A,{value:"35",label:"cURL",children:(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-shell",children:'curl "http://MIDDLEMANAGER_IP:MIDDLEMANAGER_PORT/druid/worker/v1/tasks"\n'})})}),(0,l.jsx)(i.A,{value:"36",label:"HTTP",children:(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-http",children:"GET /druid/worker/v1/tasks HTTP/1.1\nHost: http://MIDDLEMANAGER_IP:MIDDLEMANAGER_PORT\n"})})})]}),"\n",(0,l.jsx)(s.h4,{id:"sample-response-10",children:"Sample response"}),"\n",(0,l.jsxs)(r,{children:[(0,l.jsx)("summary",{children:"View the response"}),(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-json",children:'[\n  "index_parallel_wikipedia_mgchefio_2023-06-13T22:18:05.360Z"\n]\n'})})]}),"\n",(0,l.jsx)(s.h3,{id:"get-task-log",children:"Get task log"}),"\n",(0,l.jsxs)(s.p,{children:["Retrieves task log output stream by task ID. For normal usage, you should use the ",(0,l.jsx)(s.code,{children:"/druid/indexer/v1/task/{taskId}/log"}),"\n",(0,l.jsx)(s.a,{href:"/docs/33.0.0/api-reference/tasks-api",children:"Tasks API"})," endpoint instead."]}),"\n",(0,l.jsx)(s.h4,{id:"url-11",children:"URL"}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.code,{children:"GET"})," ",(0,l.jsx)(s.code,{children:"/druid/worker/v1/task/{taskId}/log"})]}),"\n",(0,l.jsx)(s.h3,{id:"shut-down-running-task",children:"Shut down running task"}),"\n",(0,l.jsxs)(s.p,{children:["Shuts down a running task by ID. For normal usage, you should use the ",(0,l.jsx)(s.code,{children:"/druid/indexer/v1/task/{taskId}/shutdown"}),"\n",(0,l.jsx)(s.a,{href:"/docs/33.0.0/api-reference/tasks-api",children:"Tasks API"})," endpoint instead."]}),"\n",(0,l.jsx)(s.h4,{id:"url-12",children:"URL"}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.code,{children:"POST"})," ",(0,l.jsx)(s.code,{children:"/druid/worker/v1/task/{taskId}/shutdown"})]}),"\n",(0,l.jsx)(s.h4,{id:"responses-11",children:"Responses"}),"\n",(0,l.jsx)(d.A,{children:(0,l.jsxs)(i.A,{value:"37",label:"200 SUCCESS",children:[(0,l.jsx)("br",{}),(0,l.jsx)(s.p,{children:(0,l.jsx)(s.em,{children:"Successfully shut down a task"})})]})}),"\n",(0,l.jsx)(s.hr,{}),"\n",(0,l.jsx)(s.h4,{id:"sample-request-11",children:"Sample request"}),"\n",(0,l.jsxs)(s.p,{children:["The following example shuts down a task with specified ID ",(0,l.jsx)(s.code,{children:"index_kafka_wikiticker_f7011f8ffba384b_fpeclode"}),"."]}),"\n",(0,l.jsxs)(d.A,{children:[(0,l.jsx)(i.A,{value:"38",label:"cURL",children:(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-shell",children:'curl "http://MIDDLEMANAGER_IP:MIDDLEMANAGER_PORT/druid/worker/v1/task/index_kafka_wikiticker_f7011f8ffba384b_fpeclode/shutdown"\n'})})}),(0,l.jsx)(i.A,{value:"39",label:"HTTP",children:(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-http",children:"POST /druid/worker/v1/task/index_kafka_wikiticker_f7011f8ffba384b_fpeclode/shutdown HTTP/1.1\nHost: http://MIDDLEMANAGER_IP:MIDDLEMANAGER_PORT\n"})})})]}),"\n",(0,l.jsx)(s.h4,{id:"sample-response-11",children:"Sample response"}),"\n",(0,l.jsxs)(r,{children:[(0,l.jsx)("summary",{children:"View the response"}),(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-json",children:'{\n  "task":"index_kafka_wikiticker_f7011f8ffba384b_fpeclode"\n}\n'})})]}),"\n",(0,l.jsx)(s.h3,{id:"disable-middle-manager",children:"Disable Middle Manager"}),"\n",(0,l.jsxs)(s.p,{children:["Disables a Middle Manager, causing it to stop accepting new tasks but complete all existing tasks. Returns a JSON  object\nkeyed by the combined ",(0,l.jsx)(s.code,{children:"druid.host"})," and ",(0,l.jsx)(s.code,{children:"druid.port"}),"."]}),"\n",(0,l.jsx)(s.h4,{id:"url-13",children:"URL"}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.code,{children:"POST"})," ",(0,l.jsx)(s.code,{children:"/druid/worker/v1/disable"})]}),"\n",(0,l.jsx)(s.h4,{id:"responses-12",children:"Responses"}),"\n",(0,l.jsx)(d.A,{children:(0,l.jsxs)(i.A,{value:"40",label:"200 SUCCESS",children:[(0,l.jsx)("br",{}),(0,l.jsx)(s.p,{children:(0,l.jsx)(s.em,{children:"Successfully disabled Middle Manager"})})]})}),"\n",(0,l.jsx)(s.h4,{id:"sample-request-12",children:"Sample request"}),"\n",(0,l.jsxs)(d.A,{children:[(0,l.jsx)(i.A,{value:"41",label:"cURL",children:(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-shell",children:'curl "http://MIDDLEMANAGER_IP:MIDDLEMANAGER_PORT/druid/worker/v1/disable"\n'})})}),(0,l.jsx)(i.A,{value:"42",label:"HTTP",children:(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-http",children:"POST /druid/worker/v1/disable HTTP/1.1\nHost: http://MIDDLEMANAGER_IP:MIDDLEMANAGER_PORT\n"})})})]}),"\n",(0,l.jsx)(s.h4,{id:"sample-response-12",children:"Sample response"}),"\n",(0,l.jsxs)(r,{children:[(0,l.jsx)("summary",{children:"View the response"}),(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-json",children:'{\n  "localhost:8091":"disabled"\n}\n'})})]}),"\n",(0,l.jsx)(s.h3,{id:"enable-middle-manager",children:"Enable Middle Manager"}),"\n",(0,l.jsxs)(s.p,{children:["Enables a Middle Manager, allowing it to accept new tasks again if it was previously disabled. Returns a JSON object keyed by the combined ",(0,l.jsx)(s.code,{children:"druid.host"})," and ",(0,l.jsx)(s.code,{children:"druid.port"}),"."]}),"\n",(0,l.jsx)(s.h4,{id:"url-14",children:"URL"}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.code,{children:"POST"})," ",(0,l.jsx)(s.code,{children:"/druid/worker/v1/enable"})]}),"\n",(0,l.jsx)(s.h4,{id:"responses-13",children:"Responses"}),"\n",(0,l.jsx)(d.A,{children:(0,l.jsxs)(i.A,{value:"43",label:"200 SUCCESS",children:[(0,l.jsx)("br",{}),(0,l.jsx)(s.p,{children:(0,l.jsx)(s.em,{children:"Successfully enabled Middle Manager"})})]})}),"\n",(0,l.jsx)(s.h4,{id:"sample-request-13",children:"Sample request"}),"\n",(0,l.jsxs)(d.A,{children:[(0,l.jsx)(i.A,{value:"44",label:"cURL",children:(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-shell",children:'curl "http://MIDDLEMANAGER_IP:MIDDLEMANAGER_PORT/druid/worker/v1/enable"\n'})})}),(0,l.jsx)(i.A,{value:"45",label:"HTTP",children:(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-http",children:"POST /druid/worker/v1/enable HTTP/1.1\nHost: http://MIDDLEMANAGER_IP:MIDDLEMANAGER_PORT\n"})})})]}),"\n",(0,l.jsx)(s.h4,{id:"sample-response-13",children:"Sample response"}),"\n",(0,l.jsxs)(r,{children:[(0,l.jsx)("summary",{children:"View the response"}),(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-json",children:'{\n  "localhost:8091":"enabled"\n}\n'})})]}),"\n",(0,l.jsx)(s.h2,{id:"historical",children:"Historical"}),"\n",(0,l.jsx)(s.h3,{id:"get-segment-load-status",children:"Get segment load status"}),"\n",(0,l.jsxs)(s.p,{children:["Retrieves a JSON object of the form ",(0,l.jsx)(s.code,{children:'{"cacheInitialized":value}'}),", where value is either ",(0,l.jsx)(s.code,{children:"true"})," or ",(0,l.jsx)(s.code,{children:"false"})," indicating if all segments in the local cache have been loaded."]}),"\n",(0,l.jsx)(s.p,{children:"Use this endpoint to know when a Broker service is ready to accept queries after a restart."}),"\n",(0,l.jsx)(s.h4,{id:"url-15",children:"URL"}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.code,{children:"GET"})," ",(0,l.jsx)(s.code,{children:"/druid/historical/v1/loadstatus"})]}),"\n",(0,l.jsx)(s.h4,{id:"responses-14",children:"Responses"}),"\n",(0,l.jsx)(d.A,{children:(0,l.jsxs)(i.A,{value:"46",label:"200 SUCCESS",children:[(0,l.jsx)("br",{}),(0,l.jsx)(s.p,{children:(0,l.jsx)(s.em,{children:"Successfully retrieved status"})})]})}),"\n",(0,l.jsx)(s.h4,{id:"sample-request-14",children:"Sample request"}),"\n",(0,l.jsxs)(d.A,{children:[(0,l.jsx)(i.A,{value:"47",label:"cURL",children:(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-shell",children:'curl "http://HISTORICAL_IP:HISTORICAL_PORT/druid/historical/v1/loadstatus"\n'})})}),(0,l.jsx)(i.A,{value:"48",label:"HTTP",children:(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-http",children:"GET /druid/historical/v1/loadstatus HTTP/1.1\nHost: http://HISTORICAL_IP:HISTORICAL_PORT\n"})})})]}),"\n",(0,l.jsx)(s.h4,{id:"sample-response-14",children:"Sample response"}),"\n",(0,l.jsxs)(r,{children:[(0,l.jsx)("summary",{children:"View the response"}),(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-json",children:'{\n  "cacheInitialized": true\n}\n'})})]}),"\n",(0,l.jsx)(s.h3,{id:"get-segment-readiness",children:"Get segment readiness"}),"\n",(0,l.jsxs)(s.p,{children:["Retrieves a status code to indicate if all segments in the local cache have been loaded. Similar to ",(0,l.jsx)(s.code,{children:"/druid/historical/v1/loadstatus"}),", but instead of returning JSON with a flag, it returns status codes."]}),"\n",(0,l.jsx)(s.h4,{id:"url-16",children:"URL"}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.code,{children:"GET"})," ",(0,l.jsx)(s.code,{children:"/druid/historical/v1/readiness"})]}),"\n",(0,l.jsx)(s.h4,{id:"responses-15",children:"Responses"}),"\n",(0,l.jsxs)(d.A,{children:[(0,l.jsxs)(i.A,{value:"49",label:"200 SUCCESS",children:[(0,l.jsx)("br",{}),(0,l.jsx)(s.p,{children:(0,l.jsx)(s.em,{children:"Segments in local cache successfully loaded"})})]}),(0,l.jsxs)(i.A,{value:"50",label:"503 SERVICE UNAVAILABLE",children:[(0,l.jsx)("br",{}),(0,l.jsx)(s.p,{children:(0,l.jsx)(s.em,{children:"Segments in local cache have not been loaded"})})]})]}),"\n",(0,l.jsx)(s.h4,{id:"sample-request-15",children:"Sample request"}),"\n",(0,l.jsxs)(d.A,{children:[(0,l.jsx)(i.A,{value:"51",label:"cURL",children:(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-shell",children:'curl "http://HISTORICAL_IP:HISTORICAL_PORT/druid/historical/v1/readiness"\n'})})}),(0,l.jsx)(i.A,{value:"52",label:"HTTP",children:(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-http",children:"GET /druid/historical/v1/readiness HTTP/1.1\nHost: http://HISTORICAL_IP:HISTORICAL_PORT\n"})})})]}),"\n",(0,l.jsx)(s.h4,{id:"sample-response-15",children:"Sample response"}),"\n",(0,l.jsx)(s.p,{children:"A successful response to this endpoint results in an empty response body."}),"\n",(0,l.jsx)(s.h2,{id:"load-status",children:"Load Status"}),"\n",(0,l.jsx)(s.h3,{id:"get-broker-query-load-status",children:"Get Broker query load status"}),"\n",(0,l.jsx)(s.p,{children:"Retrieves a flag indicating if the Broker knows about all segments in the cluster. Use this endpoint to know when a Broker service is ready to accept queries after a restart."}),"\n",(0,l.jsx)(s.h4,{id:"url-17",children:"URL"}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.code,{children:"GET"})," ",(0,l.jsx)(s.code,{children:"/druid/broker/v1/loadstatus"})]}),"\n",(0,l.jsx)(s.h4,{id:"responses-16",children:"Responses"}),"\n",(0,l.jsx)(d.A,{children:(0,l.jsxs)(i.A,{value:"53",label:"200 SUCCESS",children:[(0,l.jsx)("br",{}),(0,l.jsx)(s.p,{children:(0,l.jsx)(s.em,{children:"Segments successfully loaded"})})]})}),"\n",(0,l.jsx)(s.h4,{id:"sample-request-16",children:"Sample request"}),"\n",(0,l.jsxs)(d.A,{children:[(0,l.jsx)(i.A,{value:"54",label:"cURL",children:(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-shell",children:'curl "http://BROKER_IP:BROKER_PORT/druid/broker/v1/loadstatus"\n'})})}),(0,l.jsx)(i.A,{value:"55",label:"HTTP",children:(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-http",children:"GET /druid/broker/v1/loadstatus HTTP/1.1\nHost: http://<BROKER_IP>:<BROKER_PORT>\n"})})})]}),"\n",(0,l.jsx)(s.h4,{id:"sample-response-16",children:"Sample response"}),"\n",(0,l.jsxs)(r,{children:[(0,l.jsx)("summary",{children:"View the response"}),(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-json",children:'{\n  "inventoryInitialized": true\n}\n'})})]}),"\n",(0,l.jsx)(s.h3,{id:"get-broker-query-readiness",children:"Get Broker query readiness"}),"\n",(0,l.jsxs)(s.p,{children:["Retrieves a status code to indicate Broker readiness. Readiness signifies the Broker knows about all segments in the cluster and is ready to accept queries after a restart. Similar to ",(0,l.jsx)(s.code,{children:"/druid/broker/v1/loadstatus"}),", but instead of returning a JSON, it returns status codes."]}),"\n",(0,l.jsx)(s.h4,{id:"url-18",children:"URL"}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.code,{children:"GET"})," ",(0,l.jsx)(s.code,{children:"/druid/broker/v1/readiness"})]}),"\n",(0,l.jsx)(s.h4,{id:"responses-17",children:"Responses"}),"\n",(0,l.jsxs)(d.A,{children:[(0,l.jsxs)(i.A,{value:"56",label:"200 SUCCESS",children:[(0,l.jsx)("br",{}),(0,l.jsx)(s.p,{children:(0,l.jsx)(s.em,{children:"Segments successfully loaded"})})]}),(0,l.jsxs)(i.A,{value:"57",label:"503 SERVICE UNAVAILABLE",children:[(0,l.jsx)("br",{}),(0,l.jsx)(s.p,{children:(0,l.jsx)(s.em,{children:"Segments have not been loaded"})})]})]}),"\n",(0,l.jsx)(s.h4,{id:"sample-request-17",children:"Sample request"}),"\n",(0,l.jsxs)(d.A,{children:[(0,l.jsx)(i.A,{value:"58",label:"cURL",children:(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-shell",children:'curl "http://BROKER_IP:BROKER_PORT/druid/broker/v1/readiness"\n'})})}),(0,l.jsx)(i.A,{value:"59",label:"HTTP",children:(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-http",children:"GET /druid/broker/v1/readiness HTTP/1.1\nHost: http://BROKER_IP:BROKER_PORT\n"})})})]}),"\n",(0,l.jsx)(s.h4,{id:"sample-response-17",children:"Sample response"}),"\n",(0,l.jsx)(s.p,{children:"A successful response to this endpoint results in an empty response body."})]})}function p(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,l.jsx)(s,{...e,children:(0,l.jsx)(h,{...e})}):h(e)}},28453:(e,s,r)=>{r.d(s,{R:()=>d,x:()=>i});var n=r(96540);const l={},a=n.createContext(l);function d(e){const s=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:d(e.components),n.createElement(a.Provider,{value:s},e.children)}},65537:(e,s,r)=>{r.d(s,{A:()=>S});var n=r(96540),l=r(18215),a=r(65627),d=r(56347),i=r(50372),t=r(30604),o=r(11861),c=r(78749);function u(e){var s,r;return null!=(s=null==(r=n.Children.toArray(e).filter((function(e){return"\n"!==e})).map((function(e){if(!e||(0,n.isValidElement)(e)&&((s=e.props)&&"object"==typeof s&&"value"in s))return e;var s;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))?void 0:r.filter(Boolean))?s:[]}function h(e){var s=e.values,r=e.children;return(0,n.useMemo)((function(){var e=null!=s?s:function(e){return u(e).map((function(e){var s=e.props;return{value:s.value,label:s.label,attributes:s.attributes,default:s.default}}))}(r);return function(e){var s=(0,o.XI)(e,(function(e,s){return e.value===s.value}));if(s.length>0)throw new Error('Docusaurus error: Duplicate values "'+s.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[s,r])}function p(e){var s=e.value;return e.tabValues.some((function(e){return e.value===s}))}function j(e){var s=e.queryString,r=void 0!==s&&s,l=e.groupId,a=(0,d.W6)(),i=function(e){var s=e.queryString,r=void 0!==s&&s,n=e.groupId;if("string"==typeof r)return r;if(!1===r)return null;if(!0===r&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=n?n:null}({queryString:r,groupId:l});return[(0,t.aZ)(i),(0,n.useCallback)((function(e){if(i){var s=new URLSearchParams(a.location.search);s.set(i,e),a.replace(Object.assign({},a.location,{search:s.toString()}))}}),[i,a])]}function x(e){var s,r,l,a,d=e.defaultValue,t=e.queryString,o=void 0!==t&&t,u=e.groupId,x=h(e),v=(0,n.useState)((function(){return function(e){var s,r=e.defaultValue,n=e.tabValues;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(r){if(!p({value:r,tabValues:n}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+r+'" but none of its children has the corresponding value. Available values are: '+n.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return r}var l=null!=(s=n.find((function(e){return e.default})))?s:n[0];if(!l)throw new Error("Unexpected error: 0 tabValues");return l.value}({defaultValue:d,tabValues:x})})),m=v[0],g=v[1],f=j({queryString:o,groupId:u}),b=f[0],R=f[1],S=(s=function(e){return e?"docusaurus.tab."+e:null}({groupId:u}.groupId),r=(0,c.Dv)(s),l=r[0],a=r[1],[l,(0,n.useCallback)((function(e){s&&a.set(e)}),[s,a])]),T=S[0],k=S[1],A=function(){var e=null!=b?b:T;return p({value:e,tabValues:x})?e:null}();return(0,i.A)((function(){A&&g(A)}),[A]),{selectedValue:m,selectValue:(0,n.useCallback)((function(e){if(!p({value:e,tabValues:x}))throw new Error("Can't select invalid tab value="+e);g(e),R(e),k(e)}),[R,k,x]),tabValues:x}}var v=r(9136);const m={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var g=r(74848);function f(e){var s=e.className,r=e.block,n=e.selectedValue,d=e.selectValue,i=e.tabValues,t=[],o=(0,a.a_)().blockElementScrollPositionUntilNextRender,c=function(e){var s=e.currentTarget,r=t.indexOf(s),l=i[r].value;l!==n&&(o(s),d(l))},u=function(e){var s,r=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":var n,l=t.indexOf(e.currentTarget)+1;r=null!=(n=t[l])?n:t[0];break;case"ArrowLeft":var a,d=t.indexOf(e.currentTarget)-1;r=null!=(a=t[d])?a:t[t.length-1]}null==(s=r)||s.focus()};return(0,g.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.A)("tabs",{"tabs--block":r},s),children:i.map((function(e){var s=e.value,r=e.label,a=e.attributes;return(0,g.jsx)("li",Object.assign({role:"tab",tabIndex:n===s?0:-1,"aria-selected":n===s,ref:function(e){t.push(e)},onKeyDown:u,onClick:c},a,{className:(0,l.A)("tabs__item",m.tabItem,null==a?void 0:a.className,{"tabs__item--active":n===s}),children:null!=r?r:s}),s)}))})}function b(e){var s=e.lazy,r=e.children,a=e.selectedValue,d=(Array.isArray(r)?r:[r]).filter(Boolean);if(s){var i=d.find((function(e){return e.props.value===a}));return i?(0,n.cloneElement)(i,{className:(0,l.A)("margin-top--md",i.props.className)}):null}return(0,g.jsx)("div",{className:"margin-top--md",children:d.map((function(e,s){return(0,n.cloneElement)(e,{key:s,hidden:e.props.value!==a})}))})}function R(e){var s=x(e);return(0,g.jsxs)("div",{className:(0,l.A)("tabs-container",m.tabList),children:[(0,g.jsx)(f,Object.assign({},s,e)),(0,g.jsx)(b,Object.assign({},s,e))]})}function S(e){var s=(0,v.A)();return(0,g.jsx)(R,Object.assign({},e,{children:u(e.children)}),String(s))}},79329:(e,s,r)=>{r.d(s,{A:()=>d});r(96540);var n=r(18215);const l={tabItem:"tabItem_Ymn6"};var a=r(74848);function d(e){var s=e.children,r=e.hidden,d=e.className;return(0,a.jsx)("div",{role:"tabpanel",className:(0,n.A)(l.tabItem,d),hidden:r,children:s})}}}]);