"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[5917],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>c});var n=a(67294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},u=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=p(a),h=i,c=d["".concat(s,".").concat(h)]||d[h]||m[h]||r;return a?n.createElement(c,o(o({ref:t},u),{},{components:a})):n.createElement(c,o({ref:t},u))}));function c(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=a.length,o=new Array(r);o[0]=h;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[d]="string"==typeof e?e:i,o[1]=l;for(var p=2;p<r;p++)o[p]=a[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}h.displayName="MDXCreateElement"},87341:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>u,contentTitle:()=>s,default:()=>c,frontMatter:()=>l,metadata:()=>p,toc:()=>d});var n=a(87462),i=a(63366),r=(a(67294),a(3905)),o=["components"],l={id:"release-notes",title:"Release notes"},s=void 0,p={unversionedId:"release-info/release-notes",id:"release-info/release-notes",title:"Release notes",description:"\x3c!--",source:"@site/docs/32.0.0/release-info/release-notes.md",sourceDirName:"release-info",slug:"/release-info/release-notes",permalink:"/docs/32.0.0/release-info/release-notes",draft:!1,tags:[],version:"current",frontMatter:{id:"release-notes",title:"Release notes"},sidebar:"docs",previous:{title:"Experimental features",permalink:"/docs/32.0.0/development/experimental"},next:{title:"Upgrade notes",permalink:"/docs/32.0.0/release-info/upgrade-notes"}},u={},d=[{value:"Important features, changes, and deprecations",id:"important-features-changes-and-deprecations",level:2},{value:"ANSI-SQL compatibility and query results",id:"ansi-sql-compatibility-and-query-results",level:3},{value:"Java support",id:"java-support",level:3},{value:"Hadoop-based ingestion",id:"hadoop-based-ingestion",level:3},{value:"New Overlord APIs",id:"new-overlord-apis",level:3},{value:"Functional area and related changes",id:"functional-area-and-related-changes",level:2},{value:"Web console",id:"web-console",level:3},{value:"Explore view (experimental)",id:"explore-view-experimental",level:4},{value:"Segment timeline view",id:"segment-timeline-view",level:4},{value:"Other web console improvements",id:"other-web-console-improvements",level:4},{value:"Ingestion",id:"ingestion",level:3},{value:"Numbers for CSV and TSV input formats",id:"numbers-for-csv-and-tsv-input-formats",level:4},{value:"Other ingestion improvements",id:"other-ingestion-improvements",level:4},{value:"SQL-based ingestion",id:"sql-based-ingestion",level:4},{value:"Other SQL-based ingestion improvements",id:"other-sql-based-ingestion-improvements",level:5},{value:"Streaming ingestion",id:"streaming-ingestion",level:4},{value:"Control how many segments get merged for publishing",id:"control-how-many-segments-get-merged-for-publishing",level:5},{value:"Other streaming ingestion improvements",id:"other-streaming-ingestion-improvements",level:5},{value:"Querying",id:"querying",level:3},{value:"Window queries",id:"window-queries",level:4},{value:"Join hints",id:"join-hints",level:4},{value:"Other querying improvements",id:"other-querying-improvements",level:4},{value:"Cluster management",id:"cluster-management",level:3},{value:"Reduced metadata IO",id:"reduced-metadata-io",level:4},{value:"Other cluster management improvements",id:"other-cluster-management-improvements",level:4},{value:"Data management",id:"data-management",level:3},{value:"Sorting columns for compaction with the MSQ task engine",id:"sorting-columns-for-compaction-with-the-msq-task-engine",level:4},{value:"Other data management improvements",id:"other-data-management-improvements",level:4},{value:"Metrics and monitoring",id:"metrics-and-monitoring",level:3},{value:"New metrics for GroupByStatsMonitor:",id:"new-metrics-for-groupbystatsmonitor",level:4},{value:"CgroupV2 monitors (experimental)",id:"cgroupv2-monitors-experimental",level:4},{value:"Other metrics and monitoring improvements",id:"other-metrics-and-monitoring-improvements",level:4},{value:"Extensions",id:"extensions",level:3},{value:"Delta Lake",id:"delta-lake",level:4},{value:"gRPC queries",id:"grpc-queries",level:4},{value:"Kubernetes",id:"kubernetes",level:4},{value:"Iceberg",id:"iceberg",level:4},{value:"Documentation improvements",id:"documentation-improvements",level:3},{value:"Upgrade notes and incompatible changes",id:"upgrade-notes-and-incompatible-changes",level:2},{value:"Upgrade notes",id:"upgrade-notes",level:3},{value:"Front-coded dictionaries",id:"front-coded-dictionaries",level:4},{value:"Incompatible changes",id:"incompatible-changes",level:3},{value:"Developer notes",id:"developer-notes",level:3},{value:"Dependency updates",id:"dependency-updates",level:4}],m={toc:d},h="wrapper";function c(e){var t=e.components,l=(0,i.Z)(e,o);return(0,r.kt)(h,(0,n.Z)({},m,l,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Apache Druid 32.0.0 contains over 335 new features, bug fixes, performance enhancements, documentation improvements, and additional test coverage from 52 contributors."),(0,r.kt)("p",null,"See the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/apache/druid/issues?q=is%3Aclosed+milestone%3A32.0.0+sort%3Aupdated-desc+"},"complete set of changes")," for additional details, including bug fixes."),(0,r.kt)("p",null,"Review the ",(0,r.kt)("a",{parentName:"p",href:"#upgrade-notes"},"upgrade notes")," and ",(0,r.kt)("a",{parentName:"p",href:"#incompatible-changes"},"incompatible changes")," before you upgrade to Druid 32.0.0.\nIf you are upgrading across multiple versions, see the ",(0,r.kt)("a",{parentName:"p",href:"/docs/32.0.0/release-info/upgrade-notes"},"Upgrade notes")," page, which lists upgrade notes for the most recent Druid versions."),(0,r.kt)("h2",{id:"important-features-changes-and-deprecations"},"Important features, changes, and deprecations"),(0,r.kt)("p",null,"This section contains important information about new and existing features."),(0,r.kt)("h3",{id:"ansi-sql-compatibility-and-query-results"},"ANSI-SQL compatibility and query results"),(0,r.kt)("p",null,"Support for the configs that let you maintain older behavior that wasn't ANSI-SQL compliant have been removed:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"druid.generic.useDefaultValueForNull=true")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"druid.expressions.useStrictBooleans=false")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"druid.generic.useThreeValueLogicForNativeFilters=false")," ")),(0,r.kt)("p",null,"They no longer affect your query results. Only SQL-compliant non-legacy behavior is supported now. "),(0,r.kt)("p",null,"If the configs are set to the legacy behavior, Druid services will fail to start. "),(0,r.kt)("p",null,"If you want to continue to get the same results without these settings, you must update your queries or your results will be incorrect after you upgrade."),(0,r.kt)("p",null,"For more information about how to update your queries, see the ",(0,r.kt)("a",{parentName:"p",href:"https://druid.apache.org/docs/latest/release-info/migr-ansi-sql-null"},"migration guide"),"."),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/apache/druid/pull/17568"},"#17568")," ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/apache/druid/pull/17609"},"#17609")),(0,r.kt)("h3",{id:"java-support"},"Java support"),(0,r.kt)("p",null,"Java support in Druid has been updated:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Java 8 support has been removed"),(0,r.kt)("li",{parentName:"ul"},"Java 11 support is deprecated")),(0,r.kt)("p",null,"We recommend that you upgrade to Java 17."),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/apache/druid/pull/17466"},"#17466")),(0,r.kt)("h3",{id:"hadoop-based-ingestion"},"Hadoop-based ingestion"),(0,r.kt)("p",null,"Hadoop-based ingestion is now deprecated. We recommend that you migrate to SQL-based ingestion. "),(0,r.kt)("h3",{id:"new-overlord-apis"},"New Overlord APIs"),(0,r.kt)("p",null,"APIs for marking segments as used or unused have been moved from the Coordinator to the Overlord service:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Mark all segments of a datasource as unused:\n",(0,r.kt)("inlineCode",{parentName:"p"},"POST /druid/indexer/v1/datasources/{dataSourceName}"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Mark all (non-overshadowed) segments of a datasource as used:\n",(0,r.kt)("inlineCode",{parentName:"p"},"DELETE /druid/indexer/v1/datasources/{dataSourceName}"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Mark multiple segments as used\n",(0,r.kt)("inlineCode",{parentName:"p"},"POST /druid/indexer/v1/datasources/{dataSourceName}/markUsed"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Mark multiple (non-overshadowed) segments as unused\n",(0,r.kt)("inlineCode",{parentName:"p"},"POST /druid/indexer/v1/datasources/{dataSourceName}/markUnused"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Mark a single segment as used:\n",(0,r.kt)("inlineCode",{parentName:"p"},"POST /druid/indexer/v1/datasources/{dataSourceName}/segments/{segmentId}"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Mark a single segment as unused:\n",(0,r.kt)("inlineCode",{parentName:"p"},"DELETE /druid/indexer/v1/datasources/{dataSourceName}/segments/{segmentId}")))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/apache/druid/pull/17545"},"#17545")),(0,r.kt)("h2",{id:"functional-area-and-related-changes"},"Functional area and related changes"),(0,r.kt)("p",null,"This section contains detailed release notes separated by areas."),(0,r.kt)("h3",{id:"web-console"},"Web console"),(0,r.kt)("h4",{id:"explore-view-experimental"},"Explore view (experimental)"),(0,r.kt)("p",null,"Several improvements have been made to the Explore view in the web console:"),(0,r.kt)("p",null,"The time chart visualization now supports zooming, dragging, and is smarter about granularity detection:\n",(0,r.kt)("img",{src:a(18733).Z,width:"2500",height:"1280"})),(0,r.kt)("p",null,"Filters been improved with helper tables and additional context:\n",(0,r.kt)("img",{src:a(18237).Z,width:"2500",height:"1280"})),(0,r.kt)("p",null,"Tiles can now be shown side-by-side:\n",(0,r.kt)("img",{src:a(25701).Z,width:"2500",height:"1280"})),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/apache/druid/pull/17627"},"#17627")),(0,r.kt)("h4",{id:"segment-timeline-view"},"Segment timeline view"),(0,r.kt)("p",null,"The segment timeline is now more interactive and no longer forces day granularity."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"New view"),"\n",(0,r.kt)("img",{src:a(52767).Z,width:"2976",height:"950"})),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Old view:"),"\n",(0,r.kt)("img",{src:a(84235).Z,width:"2976",height:"938"})),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/apache/druid/pull/17521"},"#17521")),(0,r.kt)("h4",{id:"other-web-console-improvements"},"Other web console improvements"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"The timezoner picker now always shows your timezone ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/apache/druid/pull/17521"},"#17521")),(0,r.kt)("li",{parentName:"ul"},"UNNEST is now supported for autocomplete suggestions ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/apache/druid/pull/17521"},"#17521")),(0,r.kt)("li",{parentName:"ul"},"Tables now support less than and greater than filters ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/apache/druid/pull/17521"},"#17521")),(0,r.kt)("li",{parentName:"ul"},"You can now resize the side panels in the Query view ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/apache/druid/pull/17387"},"#17387")),(0,r.kt)("li",{parentName:"ul"},"Added the ",(0,r.kt)("inlineCode",{parentName:"li"},"expectedLoadTimeMillis")," segment loading metric to the web console ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/apache/druid/pull/17359"},"#17359"))),(0,r.kt)("h3",{id:"ingestion"},"Ingestion"),(0,r.kt)("h4",{id:"numbers-for-csv-and-tsv-input-formats"},"Numbers for CSV and TSV input formats"),(0,r.kt)("p",null,"Use the new optional config ",(0,r.kt)("inlineCode",{parentName:"p"},"tryParseNumbers")," for CSV and TSV input formats to control how numbers are treated. If enabled, any numbers present in the input will be parsed in the following manner:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"long data type for integer types and "),(0,r.kt)("li",{parentName:"ul"},"double for floating-point numbers")),(0,r.kt)("p",null,"By default, this configuration is set to false, so numeric strings will be treated as strings."),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/apache/druid/pull/17082"},"#17082")),(0,r.kt)("h4",{id:"other-ingestion-improvements"},"Other ingestion improvements"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Reduce the direct memory requirement on non-query processing tasks by not reserving query buffers for them ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/apache/druid/pull/16887"},"#16887")),(0,r.kt)("li",{parentName:"ul"},"JSON-based and SQL-based ingestion now support request headers when using an HTTP input source ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/apache/druid/pull/16974"},"#16974"))),(0,r.kt)("h4",{id:"sql-based-ingestion"},"SQL-based ingestion"),(0,r.kt)("h5",{id:"other-sql-based-ingestion-improvements"},"Other SQL-based ingestion improvements"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"SQL-based ingestion now supports dynamic parameters for queries besides SELECT queries, such as REPLACE ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/apache/druid/pull/17126"},"#17126")),(0,r.kt)("li",{parentName:"ul"},"Improved thread names to include the stage ID and worker number to help with troubleshooting ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/apache/druid/pull/17324"},"#17324"))),(0,r.kt)("h4",{id:"streaming-ingestion"},"Streaming ingestion"),(0,r.kt)("h5",{id:"control-how-many-segments-get-merged-for-publishing"},"Control how many segments get merged for publishing"),(0,r.kt)("p",null,"You can now use the ",(0,r.kt)("inlineCode",{parentName:"p"},"maxColumsnToMerge")," property in your supervisor spec to specify the number of segments to merge in a single phase when merging segments for publishing. This limit affects the total number of columns present in a set of segments to merge. If the limit is exceeded, segment merging occurs in multiple phases. Druid merges at least 2 segments each phase, regardless of this setting."),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/apache/druid/pull/17030"},"#17030")),(0,r.kt)("h5",{id:"other-streaming-ingestion-improvements"},"Other streaming ingestion improvements"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Druid now properly supports early/late rejection periods when ",(0,r.kt)("inlineCode",{parentName:"li"},"stopTasksCount")," is configured and streaming tasks run longer than the configured task duration ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/apache/druid/pull/17442"},"#17442")),(0,r.kt)("li",{parentName:"ul"},"Improved segment publishing when resubmitting supervisors or when task publishing takes a long time ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/apache/druid/pull/17509"},"#17509"))),(0,r.kt)("h3",{id:"querying"},"Querying"),(0,r.kt)("h4",{id:"window-queries"},"Window queries"),(0,r.kt)("p",null,"The following fields are deprecated for window queries that use the MSQ task engine: ",(0,r.kt)("inlineCode",{parentName:"p"},"maxRowsMaterializedInWindow")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"partitionColumnNames"),". They will be removed in a future release."),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/apache/druid/pull/17433"},"#17433")),(0,r.kt)("h4",{id:"join-hints"},"Join hints"),(0,r.kt)("p",null,"SQL JOIN queries now include hints. This allows queries to hint the JOIN type that should be used at a per join level. Join hints recursively affect sub queries."),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/apache/druid/pull/17541"},"#17541")),(0,r.kt)("h4",{id:"other-querying-improvements"},"Other querying improvements"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Added automatic query prioritization based on the period of the segments scanned in a query. You can set the duration threshold in ISO format using ",(0,r.kt)("inlineCode",{parentName:"li"},"druid.query.scheduler.prioritization.segmentRangeThreshold")," ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/apache/druid/pull/17009"},"#17009")),(0,r.kt)("li",{parentName:"ul"},"Improved error handling for incomplete queries. A trailer header to indicate an error is returned now ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/apache/druid/pull/16672"},"#16672")),(0,r.kt)("li",{parentName:"ul"},"Improved scan queries to account for column types in more situations ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/apache/druid/pull/17463"},"#17463")),(0,r.kt)("li",{parentName:"ul"},"Improved lookups so that they can now iterate over fetched data ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/apache/druid/pull/17212"},"#17212")),(0,r.kt)("li",{parentName:"ul"},"Improved projections so that they can contain only aggregators and no grouping columns ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/apache/druid/pull/17484"},"#17484")),(0,r.kt)("li",{parentName:"ul"},"Removed microseconds as a supported unit for EXTRACT ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/apache/druid/pull/17247"},"#17247"))),(0,r.kt)("h3",{id:"cluster-management"},"Cluster management"),(0,r.kt)("h4",{id:"reduced-metadata-io"},"Reduced metadata IO"),(0,r.kt)("p",null,"The Overlord runtime property ",(0,r.kt)("inlineCode",{parentName:"p"},"druid.indexer.tasklock.batchAllocationReduceMetadataIO")," can help reduce IO during segment allocation. Setting this flag to true (default value) allows the Overlord to fetch only necessary segment payloads during segment allocation."),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/apache/druid/pull/17496"},"#17496")),(0,r.kt)("h4",{id:"other-cluster-management-improvements"},"Other cluster management improvements"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Druid can now run non-G1 Garbage Collectors with ",(0,r.kt)("inlineCode",{parentName:"li"},"JAVA_OPTS")," ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/apache/druid/pull/17078"},"#17078")),(0,r.kt)("li",{parentName:"ul"},"You no longer have to configure a temporary storage directory on the Middle Manager for durable storage or exports. If it isn't configured, Druid uses the task directory ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/apache/druid/pull/17015"},"#17015")," ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/apache/druid/pull/17335"},"#17335")),(0,r.kt)("li",{parentName:"ul"},"Improved autoscaling on supervisors so that tasks don't get published needlessly ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/apache/druid/pull/17335"},"#17335")),(0,r.kt)("li",{parentName:"ul"},"Improved recovery time for Overlord leadership after ZooKeeper are bounced ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/apache/druid/pull/17535"},"#17535")),(0,r.kt)("li",{parentName:"ul"},"Improved Druid to be more resilient of Druid service leadership changes due to ZooKeeper outages ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/apache/druid/pull/17546"},"#17546")),(0,r.kt)("li",{parentName:"ul"},"Removed the following unused Coordinator dynamic configs: ",(0,r.kt)("inlineCode",{parentName:"li"},"mergeBytesLimit")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"mergeSegmentsLimit")," ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/apache/druid/pull/17384"},"#17384"))),(0,r.kt)("h3",{id:"data-management"},"Data management"),(0,r.kt)("h4",{id:"sorting-columns-for-compaction-with-the-msq-task-engine"},"Sorting columns for compaction with the MSQ task engine"),(0,r.kt)("p",null,"Compaction that uses the MSQ task engine now supports sorting segments with non-time columns.  If ",(0,r.kt)("inlineCode",{parentName:"p"},"forceSegmentSortByTime")," is set in the compaction config or the inferred schema, the following happens:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Skip adding ",(0,r.kt)("inlineCode",{parentName:"li"},"__time")," explicitly as the first column to the dimension schema since it already comes as part of the schema"),(0,r.kt)("li",{parentName:"ul"},"Ensure column mappings propagate ",(0,r.kt)("inlineCode",{parentName:"li"},"__time")," in the order specified by the schema"),(0,r.kt)("li",{parentName:"ul"},"Set ",(0,r.kt)("inlineCode",{parentName:"li"},"forceSegmentSortByTime")," in the MSQ query context.")),(0,r.kt)("h4",{id:"other-data-management-improvements"},"Other data management improvements"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Improved centeralized datasource schemas so that different permutations of the same column order do not result in distinct schemas ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/apache/druid/pull/17044"},"#17044")),(0,r.kt)("li",{parentName:"ul"},"Changed compaction tasks to always handle multivalue dimensions as arrays if the column schema is not explicitly specified ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/apache/druid/pull/17110"},"#17110"))),(0,r.kt)("h3",{id:"metrics-and-monitoring"},"Metrics and monitoring"),(0,r.kt)("h4",{id:"new-metrics-for-groupbystatsmonitor"},"New metrics for GroupByStatsMonitor:"),(0,r.kt)("p",null,"Druid now emits the folowing metrics for GroupBy queries:"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"mergeBuffer/used"),": Number of merge buffers used\n",(0,r.kt)("inlineCode",{parentName:"p"},"mergeBuffer/acquisitionTimeNs"),": Total time required to acquire merge buffer\n",(0,r.kt)("inlineCode",{parentName:"p"},"mergeBuffer/acquisition"),": Number of queries that acquired a batch of merge buffers\n",(0,r.kt)("inlineCode",{parentName:"p"},"groupBy/spilledQueries"),": Number of queries that spilled onto the disk\n",(0,r.kt)("inlineCode",{parentName:"p"},"groupBy/spilledBytes"),"-> Spilled bytes on the disk\n",(0,r.kt)("inlineCode",{parentName:"p"},"groupBy/mergeDictionarySize"),": Size of the merging dictionary"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/apache/druid/pull/17360"},"#17360")),(0,r.kt)("h4",{id:"cgroupv2-monitors-experimental"},"CgroupV2 monitors (experimental)"),(0,r.kt)("p",null,"The following monitors for ",(0,r.kt)("inlineCode",{parentName:"p"},"cgroupv2")," are now available: "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"CPU: ",(0,r.kt)("inlineCode",{parentName:"li"},"org.apache.druid.java.util.metrics.CgroupV2CpuMonitor")),(0,r.kt)("li",{parentName:"ul"},"disk usage ",(0,r.kt)("inlineCode",{parentName:"li"},"org.apache.druid.java.util.metrics.CgroupV2DiskMonitor")),(0,r.kt)("li",{parentName:"ul"},"memory ",(0,r.kt)("inlineCode",{parentName:"li"},"org.apache.druid.java.util.metrics.CgroupV2MemoryMonitor"))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/apache/druid/pull/16905"},"#16905")),(0,r.kt)("h4",{id:"other-metrics-and-monitoring-improvements"},"Other metrics and monitoring improvements"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Added ",(0,r.kt)("inlineCode",{parentName:"li"},"ingest/notices/queueSize"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"ingest/notices/time"),",  and ",(0,r.kt)("inlineCode",{parentName:"li"},"ingest/pause/time")," metrics to the statsd emitter ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/apache/druid/pull/17487"},"#17487")," ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/apache/druid/pull/17468"},"#17468")),(0,r.kt)("li",{parentName:"ul"},"Added duty group as a dimension for the ",(0,r.kt)("inlineCode",{parentName:"li"},"coordinator.global.time")," metric for the statsd-emitter ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/apache/druid/pull/17320"},"#17320"),"\n-The ",(0,r.kt)("inlineCode",{parentName:"li"},"service/heartbeat")," metric now reports the status on the Peon ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/apache/druid/pull/17488"},"#17488")),(0,r.kt)("li",{parentName:"ul"},"Changed real-time segment metrics so that they are for each Sink instead of for each FireHydrant. This is a return to  emission behavior prior to improvements to real-time query performance made in ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/apache/druid/pull/15757"},"30.0.0"),"  ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/apache/druid/pull/17170"},"#17170")),(0,r.kt)("li",{parentName:"ul"},"Changed query stats to be first before intervals in ",(0,r.kt)("inlineCode",{parentName:"li"},"getNativeQueryLine")," logging so that the stats are retained if the query object gets truncated ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/apache/druid/pull/17326"},"#17326"))),(0,r.kt)("h3",{id:"extensions"},"Extensions"),(0,r.kt)("h4",{id:"delta-lake"},"Delta Lake"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"The Delta Lake input source now supports decimal data types and is handled as a double.  If the value cannot fit within a double, ingest it as a string ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/apache/druid/pull/17376"},"#17376")),(0,r.kt)("li",{parentName:"ul"},"You can now filter by snap shot version even if if the version is 0 ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/apache/druid/pull/17367"},"#17367"))),(0,r.kt)("h4",{id:"grpc-queries"},"gRPC queries"),(0,r.kt)("p",null,"A new contributor extension enabled a gRPC API for SQL and native queries, which means that gRPC-based clients can use the extension to issue SQL queries. Use this extension for simple queries."),(0,r.kt)("p",null,"For more information, see ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/apache/druid/tree/master/extensions-contrib/grpc-query"},"gRPC query extension for Druid"),"."),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/apache/druid/pull/15982"},"#15982")),(0,r.kt)("h4",{id:"kubernetes"},"Kubernetes"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Middle Manger-less ingestion using Kubernetes is now more resilient to Overlord restarts ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/apache/druid/pull/17446"},"#17446")),(0,r.kt)("li",{parentName:"ul"},"You can now pass empty arrays to type and dataSource keys in selector based pod template selection strategy ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/apache/druid/pull/17400"},"#17400")),(0,r.kt)("li",{parentName:"ul"},"Improved the TaskRunner to expose the ",(0,r.kt)("inlineCode",{parentName:"li"},"getMaximumCapacity")," field ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/apache/druid/pull/17107"},"#17107"))),(0,r.kt)("h4",{id:"iceberg"},"Iceberg"),(0,r.kt)("p",null,"The Iceberg extension now supports the AWS Glue Iceberg catalog. "),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/apache/druid/pull/17392"},"#17392")),(0,r.kt)("h3",{id:"documentation-improvements"},"Documentation improvements"),(0,r.kt)("h2",{id:"upgrade-notes-and-incompatible-changes"},"Upgrade notes and incompatible changes"),(0,r.kt)("h3",{id:"upgrade-notes"},"Upgrade notes"),(0,r.kt)("h4",{id:"front-coded-dictionaries"},"Front-coded dictionaries"),(0,r.kt)("p",null,"In Druid 32.0.0, the front coded dictionaries feature will be turned on by default. Front-coded dictionaries reduce storage and improve performance by optimizing for strings where the front part looks similar."),(0,r.kt)("p",null,"Once this feature is on, you cannot easily downgrade to an earlier version that does not support the feature. "),(0,r.kt)("p",null,"For more information, see ",(0,r.kt)("a",{parentName:"p",href:"/docs/32.0.0/release-info/migr-front-coded-dict"},"Migration guide: front-coded dictionaries"),"."),(0,r.kt)("p",null,"If you're already using this feature, you don't need to take any action. "),(0,r.kt)("h3",{id:"incompatible-changes"},"Incompatible changes"),(0,r.kt)("h3",{id:"developer-notes"},"Developer notes"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Improved dependency support between extensions. When an extension has a dependency on another extension, it now tries to use the dependency's class loader to find classes required classes ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/apache/druid/pull/16973"},"#16973"))),(0,r.kt)("h4",{id:"dependency-updates"},"Dependency updates"),(0,r.kt)("p",null,"The following dependencies have had their versions bumped:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"javax.xml.bind")," is no longer used. Druid now uses ",(0,r.kt)("inlineCode",{parentName:"li"},"jakarta.xml.bind")," ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/apache/druid/pull/17370"},"#17370")),(0,r.kt)("li",{parentName:"ul"},"Several dependencies for the web console have had their dependencies updated. For a full list, see ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/apache/druid/pull/17381"},"#17381"),", ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/apache/druid/pull/17365"},"#17365"),", ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/apache/druid/pull/17363"},"#17363")),(0,r.kt)("li",{parentName:"ul"},"Removed ",(0,r.kt)("inlineCode",{parentName:"li"},"file-loader")," dependency for the web console ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/apache/druid/pull/17346"},"#17346")),(0,r.kt)("li",{parentName:"ul"},"Guice from 4.2.2 to 5.1.0"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"git-commit-id-maven-plugin")," from 4.9.10 to 9.0.1 ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/apache/druid/pull/17571"},"#17571")),(0,r.kt)("li",{parentName:"ul"},"Netty from version ",(0,r.kt)("inlineCode",{parentName:"li"},"4.1.108.Final")," to ",(0,r.kt)("inlineCode",{parentName:"li"},"4.1.116.Final"))))}c.isMDXComponent=!0},18237:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/explore_filtering-ec0a2c5f708e46e61ee9dcec4c455a17.png"},25701:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/explore_tiles-647765675fbfa5e594dd209756920a34.png"},18733:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/explore_timechart-93c00f8908a04935bb52a8b23f67a1e5.png"},52767:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/webconsole_segment_timeline2-ba87abc00d476068665e74186503e0f6.png"},84235:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/webconsole_segmenttimeline1-5bded1c8212a6f8de7f6ae91e7e6cc56.png"}}]);