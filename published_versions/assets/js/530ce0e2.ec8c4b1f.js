"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[4930],{7117:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"tutorials/tutorial-msq-extern","title":"Load files with SQL-based ingestion","description":"How to generate a query that references externally hosted data","source":"@site/docs/33.0.0/tutorials/tutorial-msq-extern.md","sourceDirName":"tutorials","slug":"/tutorials/tutorial-msq-extern","permalink":"/docs/33.0.0/tutorials/tutorial-msq-extern","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"tutorial-msq-extern","title":"Load files with SQL-based ingestion","sidebar_label":"Load files using SQL","description":"How to generate a query that references externally hosted data"},"sidebar":"docs","previous":{"title":"Clustered deployment","permalink":"/docs/33.0.0/tutorials/cluster"},"next":{"title":"Load from Apache Kafka","permalink":"/docs/33.0.0/tutorials/tutorial-kafka"}}');var s=t(74848),i=t(28453);const a={id:"tutorial-msq-extern",title:"Load files with SQL-based ingestion",sidebar_label:"Load files using SQL",description:"How to generate a query that references externally hosted data"},o=void 0,d={},l=[{value:"Query the data",id:"query-the-data",level:2},{value:"Further reading",id:"further-reading",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components},{Details:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:["This page describes SQL-based batch ingestion using the ",(0,s.jsx)(n.a,{href:"/docs/33.0.0/multi-stage-query/",children:(0,s.jsx)(n.code,{children:"druid-multi-stage-query"})}),"\nextension, new in Druid 24.0. Refer to the ",(0,s.jsx)(n.a,{href:"/docs/33.0.0/ingestion/#batch",children:"ingestion methods"})," table to determine which\ningestion method is right for you."]})}),"\n",(0,s.jsxs)(n.p,{children:["This tutorial demonstrates how to generate a query that references externally hosted data using the ",(0,s.jsx)(n.strong,{children:"Connect external data"})," wizard."]}),"\n",(0,s.jsxs)(n.p,{children:["The following example uses EXTERN to query a JSON file located at ",(0,s.jsx)(n.a,{href:"https://druid.apache.org/data/wikipedia.json.gz",children:"https://druid.apache.org/data/wikipedia.json.gz"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"Although you can manually create a query in the UI, you can use Druid to generate a base query for you that you can modify to meet your requirements."}),"\n",(0,s.jsx)(n.p,{children:"To generate a query from external data, do the following:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["In the ",(0,s.jsx)(n.strong,{children:"Query"})," view of the web console, click ",(0,s.jsx)(n.strong,{children:"Connect external data"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["On the ",(0,s.jsx)(n.strong,{children:"Select input type"})," screen, choose ",(0,s.jsx)(n.strong,{children:"HTTP(s)"})," and enter the following value in the ",(0,s.jsx)(n.strong,{children:"URIs"})," field: ",(0,s.jsx)(n.code,{children:"https://druid.apache.org/data/wikipedia.json.gz"}),". Leave the HTTP auth username and password blank."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Click ",(0,s.jsx)(n.strong,{children:"Connect data"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["On the ",(0,s.jsx)(n.strong,{children:"Parse"})," screen, you can perform additional actions before you load the data into Druid:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Expand a row to see what data it corresponds to from the source."}),"\n",(0,s.jsxs)(n.li,{children:["Customize how Druid handles the data by selecting the ",(0,s.jsx)(n.strong,{children:"Input format"})," and its related options, such as adding ",(0,s.jsx)(n.strong,{children:"JSON parser features"})," for JSON files."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["When you're ready, click ",(0,s.jsx)(n.strong,{children:"Done"}),". You're returned to the ",(0,s.jsx)(n.strong,{children:"Query"})," view where you can see the starter query that will insert the data from the external source into a table named ",(0,s.jsx)(n.code,{children:"wikipedia"}),"."]}),"\n",(0,s.jsxs)(t,{children:[(0,s.jsx)("summary",{children:"Show the query"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:'REPLACE INTO "wikipedia" OVERWRITE ALL\nWITH ext AS (SELECT *\nFROM TABLE(\n  EXTERN(\n    \'{"type":"http","uris":["https://druid.apache.org/data/wikipedia.json.gz"]}\',\n    \'{"type":"json"}\',\n    \'[{"name":"isRobot","type":"string"},{"name":"channel","type":"string"},{"name":"timestamp","type":"string"},{"name":"flags","type":"string"},{"name":"isUnpatrolled","type":"string"},{"name":"page","type":"string"},{"name":"diffUrl","type":"string"},{"name":"added","type":"long"},{"name":"comment","type":"string"},{"name":"commentLength","type":"long"},{"name":"isNew","type":"string"},{"name":"isMinor","type":"string"},{"name":"delta","type":"long"},{"name":"isAnonymous","type":"string"},{"name":"user","type":"string"},{"name":"deltaBucket","type":"long"},{"name":"deleted","type":"long"},{"name":"namespace","type":"string"},{"name":"cityName","type":"string"},{"name":"countryName","type":"string"},{"name":"regionIsoCode","type":"string"},{"name":"metroCode","type":"long"},{"name":"countryIsoCode","type":"string"},{"name":"regionName","type":"string"}]\'\n  )\n))\nSELECT\n  TIME_PARSE("timestamp") AS __time,\n  isRobot,\n  channel,\n  flags,\n  isUnpatrolled,\n  page,\n  diffUrl,\n  added,\n  comment,\n  commentLength,\n  isNew,\n  isMinor,\n  delta,\n  isAnonymous,\n  user,\n  deltaBucket,\n  deleted,\n  namespace,\n  cityName,\n  countryName,\n  regionIsoCode,\n  metroCode,\n  countryIsoCode,\n  regionName\nFROM ext\nPARTITIONED BY DAY\n'})})]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Review and modify the query to meet your needs. For example, you can rename the table or change segment granularity. To partition by something other than ALL, include ",(0,s.jsx)(n.code,{children:'TIME_PARSE("timestamp") AS __time'})," in your SELECT statement."]}),"\n",(0,s.jsxs)(n.p,{children:["For example, to specify day-based segment granularity, change the partitioning to ",(0,s.jsx)(n.code,{children:"PARTITIONED BY DAY"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:' INSERT INTO ...\n SELECT\n   TIME_PARSE("timestamp") AS __time,\n ...\n ...\n PARTITIONED BY DAY\n'})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Optionally, select ",(0,s.jsx)(n.strong,{children:"Preview"})," to review the data before you ingest it. A preview runs the query without the REPLACE INTO clause and with an added LIMIT.\nYou can see the general shape of the data before you commit to inserting it.\nThe LIMITs make the query run faster but can cause incomplete results."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Click ",(0,s.jsx)(n.strong,{children:"Run"})," to launch your query. The query returns information including its duration and the number of rows inserted into the table."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"query-the-data",children:"Query the data"}),"\n",(0,s.jsxs)(n.p,{children:["You can query the ",(0,s.jsx)(n.code,{children:"wikipedia"})," table after the ingestion completes.\nFor example, you can analyze the data in the table to produce a list of top channels:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:'SELECT\n  channel,\n  COUNT(*)\nFROM "wikipedia"\nGROUP BY channel\nORDER BY COUNT(*) DESC\n'})}),"\n",(0,s.jsx)(n.p,{children:"With the EXTERN function, you could run the same query on the external data directly without ingesting it first:"}),"\n",(0,s.jsxs)(t,{children:[(0,s.jsx)("summary",{children:"Show the query"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:'SELECT\n  channel,\n  COUNT(*)\nFROM TABLE(\n  EXTERN(\n    \'{"type": "http", "uris": ["https://druid.apache.org/data/wikipedia.json.gz"]}\',\n    \'{"type": "json"}\',\n    \'[{"name": "added", "type": "long"}, {"name": "channel", "type": "string"}, {"name": "cityName", "type": "string"}, {"name": "comment", "type": "string"}, {"name": "commentLength", "type": "long"}, {"name": "countryIsoCode", "type": "string"}, {"name": "countryName", "type": "string"}, {"name": "deleted", "type": "long"}, {"name": "delta", "type": "long"}, {"name": "deltaBucket", "type": "string"}, {"name": "diffUrl", "type": "string"}, {"name": "flags", "type": "string"}, {"name": "isAnonymous", "type": "string"}, {"name": "isMinor", "type": "string"}, {"name": "isNew", "type": "string"}, {"name": "isRobot", "type": "string"}, {"name": "isUnpatrolled", "type": "string"}, {"name": "metroCode", "type": "string"}, {"name": "namespace", "type": "string"}, {"name": "page", "type": "string"}, {"name": "regionIsoCode", "type": "string"}, {"name": "regionName", "type": "string"}, {"name": "timestamp", "type": "string"}, {"name": "user", "type": "string"}]\'\n  )\n)\nGROUP BY channel\nORDER BY COUNT(*) DESC\n'})})]}),"\n",(0,s.jsx)(n.h2,{id:"further-reading",children:"Further reading"}),"\n",(0,s.jsx)(n.p,{children:"See the following topics to learn more:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/docs/33.0.0/multi-stage-query/",children:"SQL-based ingestion overview"})," to further explore SQL-based ingestion."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/docs/33.0.0/multi-stage-query/reference",children:"SQL-based ingestion reference"})," for reference on context parameters, functions, and error codes."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var r=t(96540);const s={},i=r.createContext(s);function a(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);