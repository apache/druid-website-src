"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[149],{9376:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>u});const i=JSON.parse('{"id":"api-reference/supervisor-api","title":"Supervisor API","description":"\x3c!--","source":"@site/docs/latest/api-reference/supervisor-api.md","sourceDirName":"api-reference","slug":"/api-reference/supervisor-api","permalink":"/docs/latest/api-reference/supervisor-api","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"supervisor-api","title":"Supervisor API","sidebar_label":"Supervisors"},"sidebar":"docs","previous":{"title":"Tasks","permalink":"/docs/latest/api-reference/tasks-api"},"next":{"title":"Retention rules","permalink":"/docs/latest/api-reference/retention-rules-api"}}');var r=s(74848),t=s(28453),a=s(65537),l=s(79329);const o={id:"supervisor-api",title:"Supervisor API",sidebar_label:"Supervisors"},d=void 0,c={},u=[{value:"Supervisor information",id:"supervisor-information",level:2},{value:"Get an array of active supervisor IDs",id:"get-an-array-of-active-supervisor-ids",level:3},{value:"URL",id:"url",level:4},{value:"Responses",id:"responses",level:4},{value:"Sample request",id:"sample-request",level:4},{value:"Sample response",id:"sample-response",level:4},{value:"Get an array of active supervisor objects",id:"get-an-array-of-active-supervisor-objects",level:3},{value:"URL",id:"url-1",level:4},{value:"Responses",id:"responses-1",level:4},{value:"Sample request",id:"sample-request-1",level:4},{value:"Sample response",id:"sample-response-1",level:4},{value:"Get an array of supervisor states",id:"get-an-array-of-supervisor-states",level:3},{value:"URL",id:"url-2",level:4},{value:"Responses",id:"responses-2",level:4},{value:"Sample request",id:"sample-request-2",level:4},{value:"Sample response",id:"sample-response-2",level:4},{value:"Get supervisor specification",id:"get-supervisor-specification",level:3},{value:"URL",id:"url-3",level:4},{value:"Responses",id:"responses-3",level:4},{value:"Sample request",id:"sample-request-3",level:4},{value:"Sample response",id:"sample-response-3",level:4},{value:"Get supervisor status",id:"get-supervisor-status",level:3},{value:"URL",id:"url-4",level:4},{value:"Responses",id:"responses-4",level:4},{value:"Sample request",id:"sample-request-4",level:4},{value:"Sample response",id:"sample-response-4",level:4},{value:"Get supervisor health",id:"get-supervisor-health",level:3},{value:"URL",id:"url-5",level:4},{value:"Responses",id:"responses-5",level:4},{value:"Sample request",id:"sample-request-5",level:4},{value:"Sample response",id:"sample-response-5",level:4},{value:"Get supervisor ingestion stats",id:"get-supervisor-ingestion-stats",level:3},{value:"URL",id:"url-6",level:4},{value:"Responses",id:"responses-6",level:4},{value:"Sample request",id:"sample-request-6",level:4},{value:"Sample response",id:"sample-response-6",level:4},{value:"Audit history",id:"audit-history",level:2},{value:"Get audit history for all supervisors",id:"get-audit-history-for-all-supervisors",level:3},{value:"URL",id:"url-7",level:4},{value:"Responses",id:"responses-7",level:4},{value:"Sample request",id:"sample-request-7",level:4},{value:"Sample response",id:"sample-response-7",level:4},{value:"Get audit history for a specific supervisor",id:"get-audit-history-for-a-specific-supervisor",level:3},{value:"URL",id:"url-8",level:4},{value:"Responses",id:"responses-8",level:4},{value:"Sample request",id:"sample-request-8",level:4},{value:"Sample response",id:"sample-response-8",level:4},{value:"Manage supervisors",id:"manage-supervisors",level:2},{value:"Create or update a supervisor",id:"create-or-update-a-supervisor",level:3},{value:"URL",id:"url-9",level:4},{value:"Responses",id:"responses-9",level:4},{value:"Sample request",id:"sample-request-9",level:4},{value:"Sample request with <code>skipRestartIfUnmodified</code>",id:"sample-request-with-skiprestartifunmodified",level:4},{value:"Sample response",id:"sample-response-9",level:4},{value:"Suspend a running supervisor",id:"suspend-a-running-supervisor",level:3},{value:"URL",id:"url-10",level:4},{value:"Responses",id:"responses-10",level:4},{value:"Sample request",id:"sample-request-10",level:4},{value:"Sample response",id:"sample-response-10",level:4},{value:"Suspend all supervisors",id:"suspend-all-supervisors",level:3},{value:"URL",id:"url-11",level:4},{value:"Responses",id:"responses-11",level:4},{value:"Sample request",id:"sample-request-11",level:4},{value:"Sample response",id:"sample-response-11",level:4},{value:"Resume a supervisor",id:"resume-a-supervisor",level:3},{value:"URL",id:"url-12",level:4},{value:"Responses",id:"responses-12",level:4},{value:"Sample request",id:"sample-request-12",level:4},{value:"Sample response",id:"sample-response-12",level:4},{value:"Resume all supervisors",id:"resume-all-supervisors",level:3},{value:"URL",id:"url-13",level:4},{value:"Responses",id:"responses-13",level:4},{value:"Sample request",id:"sample-request-13",level:4},{value:"Sample response",id:"sample-response-13",level:4},{value:"Reset a supervisor",id:"reset-a-supervisor",level:3},{value:"URL",id:"url-14",level:4},{value:"Responses",id:"responses-14",level:4},{value:"Sample request",id:"sample-request-14",level:4},{value:"Sample response",id:"sample-response-14",level:4},{value:"Reset offsets for a supervisor",id:"reset-offsets-for-a-supervisor",level:3},{value:"URL",id:"url-15",level:4},{value:"Responses",id:"responses-15",level:4},{value:"Reset Offsets Metadata",id:"reset-offsets-metadata",level:4},{value:"Partitions",id:"partitions",level:4},{value:"Sample request",id:"sample-request-15",level:4},{value:"Sample response",id:"sample-response-15",level:4},{value:"Terminate a supervisor",id:"terminate-a-supervisor",level:3},{value:"URL",id:"url-16",level:4},{value:"Responses",id:"responses-16",level:4},{value:"Sample request",id:"sample-request-16",level:4},{value:"Sample response",id:"sample-response-16",level:4},{value:"Terminate all supervisors",id:"terminate-all-supervisors",level:3},{value:"URL",id:"url-17",level:4},{value:"Responses",id:"responses-17",level:4},{value:"Sample request",id:"sample-request-17",level:4},{value:"Sample response",id:"sample-response-17",level:4},{value:"Handoff task groups for a supervisor early",id:"handoff-task-groups-for-a-supervisor-early",level:3},{value:"URL",id:"url-18",level:4},{value:"Sample request",id:"sample-request-18",level:4},{value:"Sample response",id:"sample-response-18",level:4},{value:"Shut down a supervisor",id:"shut-down-a-supervisor",level:3},{value:"URL",id:"url-19",level:4}];function p(e){const n={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",hr:"hr",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,t.R)(),...e.components},{Details:s}=n;return s||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"This topic describes the API endpoints to manage and monitor supervisors for Apache Druid.\nThe topic uses the Apache Kafka term offset to refer to the identifier for records in a partition. If you are using Amazon Kinesis, the equivalent is sequence number."}),"\n",(0,r.jsxs)(n.p,{children:["In this topic, ",(0,r.jsx)(n.code,{children:"http://ROUTER_IP:ROUTER_PORT"})," is a placeholder for your Router service address and port. Replace it with the information for your deployment. For example, use ",(0,r.jsx)(n.code,{children:"http://localhost:8888"})," for quickstart deployments."]}),"\n",(0,r.jsx)(n.h2,{id:"supervisor-information",children:"Supervisor information"}),"\n",(0,r.jsx)(n.p,{children:"The following table lists the properties of a supervisor object:"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Property"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"id"})}),(0,r.jsx)(n.td,{children:"String"}),(0,r.jsx)(n.td,{children:"Unique identifier."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"state"})}),(0,r.jsx)(n.td,{children:"String"}),(0,r.jsxs)(n.td,{children:["Generic state of the supervisor. Available states:",(0,r.jsx)(n.code,{children:"UNHEALTHY_SUPERVISOR"}),", ",(0,r.jsx)(n.code,{children:"UNHEALTHY_TASKS"}),", ",(0,r.jsx)(n.code,{children:"PENDING"}),", ",(0,r.jsx)(n.code,{children:"RUNNING"}),", ",(0,r.jsx)(n.code,{children:"SUSPENDED"}),", ",(0,r.jsx)(n.code,{children:"STOPPING"}),". See ",(0,r.jsx)(n.a,{href:"/docs/latest/ingestion/supervisor#status-report",children:"Supervisor reference"})," for more information."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"detailedState"})}),(0,r.jsx)(n.td,{children:"String"}),(0,r.jsxs)(n.td,{children:["Detailed state of the supervisor. This property contains a more descriptive, implementation-specific state that may provide more insight into the supervisor's activities than the ",(0,r.jsx)(n.code,{children:"state"})," property. See ",(0,r.jsx)(n.a,{href:"/docs/latest/ingestion/kafka-ingestion",children:"Apache Kafka ingestion"})," and ",(0,r.jsx)(n.a,{href:"/docs/latest/ingestion/kinesis-ingestion",children:"Amazon Kinesis ingestion"})," for supervisor-specific states."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"healthy"})}),(0,r.jsx)(n.td,{children:"Boolean"}),(0,r.jsx)(n.td,{children:"Supervisor health indicator."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"spec"})}),(0,r.jsx)(n.td,{children:"Object"}),(0,r.jsx)(n.td,{children:"Container object for the supervisor configuration."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"suspended"})}),(0,r.jsx)(n.td,{children:"Boolean"}),(0,r.jsx)(n.td,{children:"Indicates whether the supervisor is in a suspended state."})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"get-an-array-of-active-supervisor-ids",children:"Get an array of active supervisor IDs"}),"\n",(0,r.jsx)(n.p,{children:"Returns an array of strings representing the names of active supervisors. If there are no active supervisors, it returns an empty array."}),"\n",(0,r.jsx)(n.h4,{id:"url",children:"URL"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"GET"})," ",(0,r.jsx)(n.code,{children:"/druid/indexer/v1/supervisor"})]}),"\n",(0,r.jsx)(n.h4,{id:"responses",children:"Responses"}),"\n",(0,r.jsx)(a.A,{children:(0,r.jsx)(l.A,{value:"1",label:"200 SUCCESS",children:(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Successfully retrieved array of active supervisor IDs"})})})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h4,{id:"sample-request",children:"Sample request"}),"\n",(0,r.jsxs)(a.A,{children:[(0,r.jsx)(l.A,{value:"2",label:"cURL",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:'curl "http://ROUTER_IP:ROUTER_PORT/druid/indexer/v1/supervisor"\n'})})}),(0,r.jsx)(l.A,{value:"3",label:"HTTP",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-HTTP",children:"GET /druid/indexer/v1/supervisor HTTP/1.1\nHost: http://ROUTER_IP:ROUTER_PORT\n"})})})]}),"\n",(0,r.jsx)(n.h4,{id:"sample-response",children:"Sample response"}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"View the response"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'[\n  "wikipedia_stream",\n  "social_media"\n]\n'})})]}),"\n",(0,r.jsx)(n.h3,{id:"get-an-array-of-active-supervisor-objects",children:"Get an array of active supervisor objects"}),"\n",(0,r.jsxs)(n.p,{children:["Retrieves an array of active supervisor objects. If there are no active supervisors, it returns an empty array. For reference on the supervisor object properties, see the preceding ",(0,r.jsx)(n.a,{href:"#supervisor-information",children:"table"}),"."]}),"\n",(0,r.jsx)(n.h4,{id:"url-1",children:"URL"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"GET"})," ",(0,r.jsx)(n.code,{children:"/druid/indexer/v1/supervisor?full"})]}),"\n",(0,r.jsx)(n.h4,{id:"responses-1",children:"Responses"}),"\n",(0,r.jsx)(a.A,{children:(0,r.jsx)(l.A,{value:"4",label:"200 SUCCESS",children:(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Successfully retrieved supervisor objects"})})})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h4,{id:"sample-request-1",children:"Sample request"}),"\n",(0,r.jsxs)(a.A,{children:[(0,r.jsx)(l.A,{value:"5",label:"cURL",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:'curl "http://ROUTER_IP:ROUTER_PORT/druid/indexer/v1/supervisor?full=null"\n'})})}),(0,r.jsx)(l.A,{value:"6",label:"HTTP",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-HTTP",children:"GET /druid/indexer/v1/supervisor?full=null HTTP/1.1\nHost: http://ROUTER_IP:ROUTER_PORT\n"})})})]}),"\n",(0,r.jsx)(n.h4,{id:"sample-response-1",children:"Sample response"}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"View the response"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'[\n  {\n      "id": "wikipedia_stream",\n      "state": "RUNNING",\n      "detailedState": "CONNECTING_TO_STREAM",\n      "healthy": true,\n      "spec": {\n          "type": "kafka",\n          "spec": {\n              "dataSchema": {\n                  "dataSource": "wikipedia_stream",\n                  "timestampSpec": {\n                      "column": "__time",\n                      "format": "iso",\n                      "missingValue": null\n                  },\n                  "dimensionsSpec": {\n                      "dimensions": [\n                          {\n                              "type": "string",\n                              "name": "username",\n                              "multiValueHandling": "SORTED_ARRAY",\n                              "createBitmapIndex": true\n                          },\n                          {\n                              "type": "string",\n                              "name": "post_title",\n                              "multiValueHandling": "SORTED_ARRAY",\n                              "createBitmapIndex": true\n                          },\n                          {\n                              "type": "long",\n                              "name": "views",\n                              "multiValueHandling": "SORTED_ARRAY",\n                              "createBitmapIndex": false\n                          },\n                          {\n                              "type": "long",\n                              "name": "upvotes",\n                              "multiValueHandling": "SORTED_ARRAY",\n                              "createBitmapIndex": false\n                          },\n                          {\n                              "type": "long",\n                              "name": "comments",\n                              "multiValueHandling": "SORTED_ARRAY",\n                              "createBitmapIndex": false\n                          },\n                          {\n                              "type": "string",\n                              "name": "edited",\n                              "multiValueHandling": "SORTED_ARRAY",\n                              "createBitmapIndex": true\n                          }\n                      ],\n                      "dimensionExclusions": [\n                          "__time"\n                      ],\n                      "includeAllDimensions": false,\n                      "useSchemaDiscovery": false\n                  },\n                  "metricsSpec": [],\n                  "granularitySpec": {\n                      "type": "uniform",\n                      "segmentGranularity": "HOUR",\n                      "queryGranularity": {\n                          "type": "none"\n                      },\n                      "rollup": false,\n                      "intervals": []\n                  },\n                  "transformSpec": {\n                      "filter": null,\n                      "transforms": []\n                  }\n              },\n              "ioConfig": {\n                  "topic": "social_media",\n                  "inputFormat": {\n                      "type": "json"\n                  },\n                  "replicas": 1,\n                  "taskCount": 1,\n                  "taskDuration": "PT3600S",\n                  "consumerProperties": {\n                      "bootstrap.servers": "localhost:9042"\n                  },\n                  "autoScalerConfig": null,\n                  "pollTimeout": 100,\n                  "startDelay": "PT5S",\n                  "period": "PT30S",\n                  "useEarliestOffset": true,\n                  "completionTimeout": "PT1800S",\n                  "lateMessageRejectionPeriod": null,\n                  "earlyMessageRejectionPeriod": null,\n                  "lateMessageRejectionStartDateTime": null,\n                  "configOverrides": null,\n                  "idleConfig": null,\n                  "stream": "social_media",\n                  "useEarliestSequenceNumber": true\n              },\n              "tuningConfig": {\n                  "type": "kafka",\n                  "appendableIndexSpec": {\n                      "type": "onheap",\n                      "preserveExistingMetrics": false\n                  },\n                  "maxRowsInMemory": 150000,\n                  "maxBytesInMemory": 0,\n                  "skipBytesInMemoryOverheadCheck": false,\n                  "maxRowsPerSegment": 5000000,\n                  "maxTotalRows": null,\n                  "intermediatePersistPeriod": "PT10M",\n                  "maxPendingPersists": 0,\n                  "indexSpec": {\n                      "bitmap": {\n                          "type": "roaring"\n                      },\n                      "dimensionCompression": "lz4",\n                      "stringDictionaryEncoding": {\n                          "type": "utf8"\n                      },\n                      "metricCompression": "lz4",\n                      "longEncoding": "longs"\n                  },\n                  "indexSpecForIntermediatePersists": {\n                      "bitmap": {\n                          "type": "roaring"\n                      },\n                      "dimensionCompression": "lz4",\n                      "stringDictionaryEncoding": {\n                          "type": "utf8"\n                      },\n                      "metricCompression": "lz4",\n                      "longEncoding": "longs"\n                  },\n                  "reportParseExceptions": false,\n                  "handoffConditionTimeout": 0,\n                  "resetOffsetAutomatically": false,\n                  "segmentWriteOutMediumFactory": null,\n                  "workerThreads": null,\n                  "chatRetries": 8,\n                  "httpTimeout": "PT10S",\n                  "shutdownTimeout": "PT80S",\n                  "offsetFetchPeriod": "PT30S",\n                  "intermediateHandoffPeriod": "P2147483647D",\n                  "logParseExceptions": false,\n                  "maxParseExceptions": 2147483647,\n                  "maxSavedParseExceptions": 0,\n                  "skipSequenceNumberAvailabilityCheck": false,\n                  "repartitionTransitionDuration": "PT120S"\n              }\n          },\n          "dataSchema": {\n              "dataSource": "wikipedia_stream",\n              "timestampSpec": {\n                  "column": "__time",\n                  "format": "iso",\n                  "missingValue": null\n              },\n              "dimensionsSpec": {\n                  "dimensions": [\n                      {\n                          "type": "string",\n                          "name": "username",\n                          "multiValueHandling": "SORTED_ARRAY",\n                          "createBitmapIndex": true\n                      },\n                      {\n                          "type": "string",\n                          "name": "post_title",\n                          "multiValueHandling": "SORTED_ARRAY",\n                          "createBitmapIndex": true\n                      },\n                      {\n                          "type": "long",\n                          "name": "views",\n                          "multiValueHandling": "SORTED_ARRAY",\n                          "createBitmapIndex": false\n                      },\n                      {\n                          "type": "long",\n                          "name": "upvotes",\n                          "multiValueHandling": "SORTED_ARRAY",\n                          "createBitmapIndex": false\n                      },\n                      {\n                          "type": "long",\n                          "name": "comments",\n                          "multiValueHandling": "SORTED_ARRAY",\n                          "createBitmapIndex": false\n                      },\n                      {\n                          "type": "string",\n                          "name": "edited",\n                          "multiValueHandling": "SORTED_ARRAY",\n                          "createBitmapIndex": true\n                      }\n                  ],\n                  "dimensionExclusions": [\n                      "__time"\n                  ],\n                  "includeAllDimensions": false,\n                  "useSchemaDiscovery": false\n              },\n              "metricsSpec": [],\n              "granularitySpec": {\n                  "type": "uniform",\n                  "segmentGranularity": "HOUR",\n                  "queryGranularity": {\n                      "type": "none"\n                  },\n                  "rollup": false,\n                  "intervals": []\n              },\n              "transformSpec": {\n                  "filter": null,\n                  "transforms": []\n              }\n          },\n          "tuningConfig": {\n              "type": "kafka",\n              "appendableIndexSpec": {\n                  "type": "onheap",\n                  "preserveExistingMetrics": false\n              },\n              "maxRowsInMemory": 150000,\n              "maxBytesInMemory": 0,\n              "skipBytesInMemoryOverheadCheck": false,\n              "maxRowsPerSegment": 5000000,\n              "maxTotalRows": null,\n              "intermediatePersistPeriod": "PT10M",\n              "maxPendingPersists": 0,\n              "indexSpec": {\n                  "bitmap": {\n                      "type": "roaring"\n                  },\n                  "dimensionCompression": "lz4",\n                  "stringDictionaryEncoding": {\n                      "type": "utf8"\n                  },\n                  "metricCompression": "lz4",\n                  "longEncoding": "longs"\n              },\n              "indexSpecForIntermediatePersists": {\n                  "bitmap": {\n                      "type": "roaring"\n                  },\n                  "dimensionCompression": "lz4",\n                  "stringDictionaryEncoding": {\n                      "type": "utf8"\n                  },\n                  "metricCompression": "lz4",\n                  "longEncoding": "longs"\n              },\n              "reportParseExceptions": false,\n              "handoffConditionTimeout": 0,\n              "resetOffsetAutomatically": false,\n              "segmentWriteOutMediumFactory": null,\n              "workerThreads": null,\n              "chatRetries": 8,\n              "httpTimeout": "PT10S",\n              "shutdownTimeout": "PT80S",\n              "offsetFetchPeriod": "PT30S",\n              "intermediateHandoffPeriod": "P2147483647D",\n              "logParseExceptions": false,\n              "maxParseExceptions": 2147483647,\n              "maxSavedParseExceptions": 0,\n              "skipSequenceNumberAvailabilityCheck": false,\n              "repartitionTransitionDuration": "PT120S"\n          },\n          "ioConfig": {\n              "topic": "social_media",\n              "inputFormat": {\n                  "type": "json"\n              },\n              "replicas": 1,\n              "taskCount": 1,\n              "taskDuration": "PT3600S",\n              "consumerProperties": {\n                  "bootstrap.servers": "localhost:9042"\n              },\n              "autoScalerConfig": null,\n              "pollTimeout": 100,\n              "startDelay": "PT5S",\n              "period": "PT30S",\n              "useEarliestOffset": true,\n              "completionTimeout": "PT1800S",\n              "lateMessageRejectionPeriod": null,\n              "earlyMessageRejectionPeriod": null,\n              "lateMessageRejectionStartDateTime": null,\n              "configOverrides": null,\n              "idleConfig": null,\n              "stream": "social_media",\n              "useEarliestSequenceNumber": true\n          },\n          "context": null,\n          "suspended": false\n      },\n      "suspended": false\n  },\n  {\n      "id": "social_media",\n      "state": "RUNNING",\n      "detailedState": "RUNNING",\n      "healthy": true,\n      "spec": {\n          "type": "kafka",\n          "spec": {\n              "dataSchema": {\n                  "dataSource": "social_media",\n                  "timestampSpec": {\n                      "column": "__time",\n                      "format": "iso",\n                      "missingValue": null\n                  },\n                  "dimensionsSpec": {\n                      "dimensions": [\n                          {\n                              "type": "string",\n                              "name": "username",\n                              "multiValueHandling": "SORTED_ARRAY",\n                              "createBitmapIndex": true\n                          },\n                          {\n                              "type": "string",\n                              "name": "post_title",\n                              "multiValueHandling": "SORTED_ARRAY",\n                              "createBitmapIndex": true\n                          },\n                          {\n                              "type": "long",\n                              "name": "views",\n                              "multiValueHandling": "SORTED_ARRAY",\n                              "createBitmapIndex": false\n                          },\n                          {\n                              "type": "long",\n                              "name": "upvotes",\n                              "multiValueHandling": "SORTED_ARRAY",\n                              "createBitmapIndex": false\n                          },\n                          {\n                              "type": "long",\n                              "name": "comments",\n                              "multiValueHandling": "SORTED_ARRAY",\n                              "createBitmapIndex": false\n                          },\n                          {\n                              "type": "string",\n                              "name": "edited",\n                              "multiValueHandling": "SORTED_ARRAY",\n                              "createBitmapIndex": true\n                          }\n                      ],\n                      "dimensionExclusions": [\n                          "__time"\n                      ],\n                      "includeAllDimensions": false,\n                      "useSchemaDiscovery": false\n                  },\n                  "metricsSpec": [],\n                  "granularitySpec": {\n                      "type": "uniform",\n                      "segmentGranularity": "HOUR",\n                      "queryGranularity": {\n                          "type": "none"\n                      },\n                      "rollup": false,\n                      "intervals": []\n                  },\n                  "transformSpec": {\n                      "filter": null,\n                      "transforms": []\n                  }\n              },\n              "ioConfig": {\n                  "topic": "social_media",\n                  "inputFormat": {\n                      "type": "json"\n                  },\n                  "replicas": 1,\n                  "taskCount": 1,\n                  "taskDuration": "PT3600S",\n                  "consumerProperties": {\n                      "bootstrap.servers": "localhost:9094"\n                  },\n                  "autoScalerConfig": null,\n                  "pollTimeout": 100,\n                  "startDelay": "PT5S",\n                  "period": "PT30S",\n                  "useEarliestOffset": true,\n                  "completionTimeout": "PT1800S",\n                  "lateMessageRejectionPeriod": null,\n                  "earlyMessageRejectionPeriod": null,\n                  "lateMessageRejectionStartDateTime": null,\n                  "configOverrides": null,\n                  "idleConfig": null,\n                  "stream": "social_media",\n                  "useEarliestSequenceNumber": true\n              },\n              "tuningConfig": {\n                  "type": "kafka",\n                  "appendableIndexSpec": {\n                      "type": "onheap",\n                      "preserveExistingMetrics": false\n                  },\n                  "maxRowsInMemory": 150000,\n                  "maxBytesInMemory": 0,\n                  "skipBytesInMemoryOverheadCheck": false,\n                  "maxRowsPerSegment": 5000000,\n                  "maxTotalRows": null,\n                  "intermediatePersistPeriod": "PT10M",\n                  "maxPendingPersists": 0,\n                  "indexSpec": {\n                      "bitmap": {\n                          "type": "roaring"\n                      },\n                      "dimensionCompression": "lz4",\n                      "stringDictionaryEncoding": {\n                          "type": "utf8"\n                      },\n                      "metricCompression": "lz4",\n                      "longEncoding": "longs"\n                  },\n                  "indexSpecForIntermediatePersists": {\n                      "bitmap": {\n                          "type": "roaring"\n                      },\n                      "dimensionCompression": "lz4",\n                      "stringDictionaryEncoding": {\n                          "type": "utf8"\n                      },\n                      "metricCompression": "lz4",\n                      "longEncoding": "longs"\n                  },\n                  "reportParseExceptions": false,\n                  "handoffConditionTimeout": 0,\n                  "resetOffsetAutomatically": false,\n                  "segmentWriteOutMediumFactory": null,\n                  "workerThreads": null,\n                  "chatRetries": 8,\n                  "httpTimeout": "PT10S",\n                  "shutdownTimeout": "PT80S",\n                  "offsetFetchPeriod": "PT30S",\n                  "intermediateHandoffPeriod": "P2147483647D",\n                  "logParseExceptions": false,\n                  "maxParseExceptions": 2147483647,\n                  "maxSavedParseExceptions": 0,\n                  "skipSequenceNumberAvailabilityCheck": false,\n                  "repartitionTransitionDuration": "PT120S"\n              }\n          },\n          "dataSchema": {\n              "dataSource": "social_media",\n              "timestampSpec": {\n                  "column": "__time",\n                  "format": "iso",\n                  "missingValue": null\n              },\n              "dimensionsSpec": {\n                  "dimensions": [\n                      {\n                          "type": "string",\n                          "name": "username",\n                          "multiValueHandling": "SORTED_ARRAY",\n                          "createBitmapIndex": true\n                      },\n                      {\n                          "type": "string",\n                          "name": "post_title",\n                          "multiValueHandling": "SORTED_ARRAY",\n                          "createBitmapIndex": true\n                      },\n                      {\n                          "type": "long",\n                          "name": "views",\n                          "multiValueHandling": "SORTED_ARRAY",\n                          "createBitmapIndex": false\n                      },\n                      {\n                          "type": "long",\n                          "name": "upvotes",\n                          "multiValueHandling": "SORTED_ARRAY",\n                          "createBitmapIndex": false\n                      },\n                      {\n                          "type": "long",\n                          "name": "comments",\n                          "multiValueHandling": "SORTED_ARRAY",\n                          "createBitmapIndex": false\n                      },\n                      {\n                          "type": "string",\n                          "name": "edited",\n                          "multiValueHandling": "SORTED_ARRAY",\n                          "createBitmapIndex": true\n                      }\n                  ],\n                  "dimensionExclusions": [\n                      "__time"\n                  ],\n                  "includeAllDimensions": false,\n                  "useSchemaDiscovery": false\n              },\n              "metricsSpec": [],\n              "granularitySpec": {\n                  "type": "uniform",\n                  "segmentGranularity": "HOUR",\n                  "queryGranularity": {\n                      "type": "none"\n                  },\n                  "rollup": false,\n                  "intervals": []\n              },\n              "transformSpec": {\n                  "filter": null,\n                  "transforms": []\n              }\n          },\n          "tuningConfig": {\n              "type": "kafka",\n              "appendableIndexSpec": {\n                  "type": "onheap",\n                  "preserveExistingMetrics": false\n              },\n              "maxRowsInMemory": 150000,\n              "maxBytesInMemory": 0,\n              "skipBytesInMemoryOverheadCheck": false,\n              "maxRowsPerSegment": 5000000,\n              "maxTotalRows": null,\n              "intermediatePersistPeriod": "PT10M",\n              "maxPendingPersists": 0,\n              "indexSpec": {\n                  "bitmap": {\n                      "type": "roaring"\n                  },\n                  "dimensionCompression": "lz4",\n                  "stringDictionaryEncoding": {\n                      "type": "utf8"\n                  },\n                  "metricCompression": "lz4",\n                  "longEncoding": "longs"\n              },\n              "indexSpecForIntermediatePersists": {\n                  "bitmap": {\n                      "type": "roaring"\n                  },\n                  "dimensionCompression": "lz4",\n                  "stringDictionaryEncoding": {\n                      "type": "utf8"\n                  },\n                  "metricCompression": "lz4",\n                  "longEncoding": "longs"\n              },\n              "reportParseExceptions": false,\n              "handoffConditionTimeout": 0,\n              "resetOffsetAutomatically": false,\n              "segmentWriteOutMediumFactory": null,\n              "workerThreads": null,\n              "chatRetries": 8,\n              "httpTimeout": "PT10S",\n              "shutdownTimeout": "PT80S",\n              "offsetFetchPeriod": "PT30S",\n              "intermediateHandoffPeriod": "P2147483647D",\n              "logParseExceptions": false,\n              "maxParseExceptions": 2147483647,\n              "maxSavedParseExceptions": 0,\n              "skipSequenceNumberAvailabilityCheck": false,\n              "repartitionTransitionDuration": "PT120S"\n          },\n          "ioConfig": {\n              "topic": "social_media",\n              "inputFormat": {\n                  "type": "json"\n              },\n              "replicas": 1,\n              "taskCount": 1,\n              "taskDuration": "PT3600S",\n              "consumerProperties": {\n                  "bootstrap.servers": "localhost:9094"\n              },\n              "autoScalerConfig": null,\n              "pollTimeout": 100,\n              "startDelay": "PT5S",\n              "period": "PT30S",\n              "useEarliestOffset": true,\n              "completionTimeout": "PT1800S",\n              "lateMessageRejectionPeriod": null,\n              "earlyMessageRejectionPeriod": null,\n              "lateMessageRejectionStartDateTime": null,\n              "configOverrides": null,\n              "idleConfig": null,\n              "stream": "social_media",\n              "useEarliestSequenceNumber": true\n          },\n          "context": null,\n          "suspended": false\n      },\n      "suspended": false\n  }\n]\n'})})]}),"\n",(0,r.jsx)(n.h3,{id:"get-an-array-of-supervisor-states",children:"Get an array of supervisor states"}),"\n",(0,r.jsxs)(n.p,{children:["Retrieves an array of objects representing active supervisors and their current state. If there are no active supervisors, it returns an empty array. For reference on the supervisor object properties, see the preceding ",(0,r.jsx)(n.a,{href:"#supervisor-information",children:"table"}),"."]}),"\n",(0,r.jsx)(n.h4,{id:"url-2",children:"URL"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"GET"})," ",(0,r.jsx)(n.code,{children:"/druid/indexer/v1/supervisor?state=true"})]}),"\n",(0,r.jsx)(n.h4,{id:"responses-2",children:"Responses"}),"\n",(0,r.jsx)(a.A,{children:(0,r.jsx)(l.A,{value:"7",label:"200 SUCCESS",children:(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Successfully retrieved supervisor state objects"})})})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h4,{id:"sample-request-2",children:"Sample request"}),"\n",(0,r.jsxs)(a.A,{children:[(0,r.jsx)(l.A,{value:"8",label:"cURL",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:'curl "http://ROUTER_IP:ROUTER_PORT/druid/indexer/v1/supervisor?state=true"\n'})})}),(0,r.jsx)(l.A,{value:"9",label:"HTTP",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-HTTP",children:"GET /druid/indexer/v1/supervisor?state=true HTTP/1.1\nHost: http://ROUTER_IP:ROUTER_PORT\n"})})})]}),"\n",(0,r.jsx)(n.h4,{id:"sample-response-2",children:"Sample response"}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"View the response"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'[\n  {\n      "id": "wikipedia_stream",\n      "state": "UNHEALTHY_SUPERVISOR",\n      "detailedState": "UNABLE_TO_CONNECT_TO_STREAM",\n      "healthy": false,\n      "suspended": false\n  },\n  {\n      "id": "social_media",\n      "state": "RUNNING",\n      "detailedState": "RUNNING",\n      "healthy": true,\n      "suspended": false\n  }\n]\n'})})]}),"\n",(0,r.jsx)(n.h3,{id:"get-supervisor-specification",children:"Get supervisor specification"}),"\n",(0,r.jsxs)(n.p,{children:["Retrieves the specification for a single supervisor. The returned specification includes the ",(0,r.jsx)(n.code,{children:"dataSchema"}),", ",(0,r.jsx)(n.code,{children:"ioConfig"}),", and ",(0,r.jsx)(n.code,{children:"tuningConfig"})," objects."]}),"\n",(0,r.jsx)(n.h4,{id:"url-3",children:"URL"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"GET"})," ",(0,r.jsx)(n.code,{children:"/druid/indexer/v1/supervisor/{supervisorId}"})]}),"\n",(0,r.jsx)(n.h4,{id:"responses-3",children:"Responses"}),"\n",(0,r.jsxs)(a.A,{children:[(0,r.jsx)(l.A,{value:"10",label:"200 SUCCESS",children:(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Successfully retrieved supervisor spec"})})}),(0,r.jsx)(l.A,{value:"11",label:"404 NOT FOUND",children:(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Invalid supervisor ID"})})})]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h4,{id:"sample-request-3",children:"Sample request"}),"\n",(0,r.jsxs)(n.p,{children:["The following example shows how to retrieve the specification of a supervisor with the name ",(0,r.jsx)(n.code,{children:"wikipedia_stream"}),"."]}),"\n",(0,r.jsxs)(a.A,{children:[(0,r.jsx)(l.A,{value:"12",label:"cURL",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:'curl "http://ROUTER_IP:ROUTER_PORT/druid/indexer/v1/supervisor/wikipedia_stream"\n'})})}),(0,r.jsx)(l.A,{value:"13",label:"HTTP",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-HTTP",children:"GET /druid/indexer/v1/supervisor/wikipedia_stream HTTP/1.1\nHost: http://ROUTER_IP:ROUTER_PORT\n"})})})]}),"\n",(0,r.jsx)(n.h4,{id:"sample-response-3",children:"Sample response"}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"View the response"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "type": "kafka",\n  "spec": {\n      "dataSchema": {\n          "dataSource": "social_media",\n          "timestampSpec": {\n              "column": "__time",\n              "format": "iso",\n              "missingValue": null\n          },\n          "dimensionsSpec": {\n              "dimensions": [\n                  {\n                      "type": "string",\n                      "name": "username",\n                      "multiValueHandling": "SORTED_ARRAY",\n                      "createBitmapIndex": true\n                  },\n                  {\n                      "type": "string",\n                      "name": "post_title",\n                      "multiValueHandling": "SORTED_ARRAY",\n                      "createBitmapIndex": true\n                  },\n                  {\n                      "type": "long",\n                      "name": "views",\n                      "multiValueHandling": "SORTED_ARRAY",\n                      "createBitmapIndex": false\n                  },\n                  {\n                      "type": "long",\n                      "name": "upvotes",\n                      "multiValueHandling": "SORTED_ARRAY",\n                      "createBitmapIndex": false\n                  },\n                  {\n                      "type": "long",\n                      "name": "comments",\n                      "multiValueHandling": "SORTED_ARRAY",\n                      "createBitmapIndex": false\n                  },\n                  {\n                      "type": "string",\n                      "name": "edited",\n                      "multiValueHandling": "SORTED_ARRAY",\n                      "createBitmapIndex": true\n                  }\n              ],\n              "dimensionExclusions": [\n                  "__time"\n              ],\n              "includeAllDimensions": false,\n              "useSchemaDiscovery": false\n          },\n          "metricsSpec": [],\n          "granularitySpec": {\n              "type": "uniform",\n              "segmentGranularity": "HOUR",\n              "queryGranularity": {\n                  "type": "none"\n              },\n              "rollup": false,\n              "intervals": []\n          },\n          "transformSpec": {\n              "filter": null,\n              "transforms": []\n          }\n      },\n      "ioConfig": {\n          "topic": "social_media",\n          "inputFormat": {\n              "type": "json"\n          },\n          "replicas": 1,\n          "taskCount": 1,\n          "taskDuration": "PT3600S",\n          "consumerProperties": {\n              "bootstrap.servers": "localhost:9094"\n          },\n          "autoScalerConfig": null,\n          "pollTimeout": 100,\n          "startDelay": "PT5S",\n          "period": "PT30S",\n          "useEarliestOffset": true,\n          "completionTimeout": "PT1800S",\n          "lateMessageRejectionPeriod": null,\n          "earlyMessageRejectionPeriod": null,\n          "lateMessageRejectionStartDateTime": null,\n          "configOverrides": null,\n          "idleConfig": null,\n          "stream": "social_media",\n          "useEarliestSequenceNumber": true\n      },\n      "tuningConfig": {\n          "type": "kafka",\n          "appendableIndexSpec": {\n              "type": "onheap",\n              "preserveExistingMetrics": false\n          },\n          "maxRowsInMemory": 150000,\n          "maxBytesInMemory": 0,\n          "skipBytesInMemoryOverheadCheck": false,\n          "maxRowsPerSegment": 5000000,\n          "maxTotalRows": null,\n          "intermediatePersistPeriod": "PT10M",\n          "maxPendingPersists": 0,\n          "indexSpec": {\n              "bitmap": {\n                  "type": "roaring"\n              },\n              "dimensionCompression": "lz4",\n              "stringDictionaryEncoding": {\n                  "type": "utf8"\n              },\n              "metricCompression": "lz4",\n              "longEncoding": "longs"\n          },\n          "indexSpecForIntermediatePersists": {\n              "bitmap": {\n                  "type": "roaring"\n              },\n              "dimensionCompression": "lz4",\n              "stringDictionaryEncoding": {\n                  "type": "utf8"\n              },\n              "metricCompression": "lz4",\n              "longEncoding": "longs"\n          },\n          "reportParseExceptions": false,\n          "handoffConditionTimeout": 0,\n          "resetOffsetAutomatically": false,\n          "segmentWriteOutMediumFactory": null,\n          "workerThreads": null,\n          "chatRetries": 8,\n          "httpTimeout": "PT10S",\n          "shutdownTimeout": "PT80S",\n          "offsetFetchPeriod": "PT30S",\n          "intermediateHandoffPeriod": "P2147483647D",\n          "logParseExceptions": false,\n          "maxParseExceptions": 2147483647,\n          "maxSavedParseExceptions": 0,\n          "skipSequenceNumberAvailabilityCheck": false,\n          "repartitionTransitionDuration": "PT120S"\n      }\n  },\n  "dataSchema": {\n      "dataSource": "social_media",\n      "timestampSpec": {\n          "column": "__time",\n          "format": "iso",\n          "missingValue": null\n      },\n      "dimensionsSpec": {\n          "dimensions": [\n              {\n                  "type": "string",\n                  "name": "username",\n                  "multiValueHandling": "SORTED_ARRAY",\n                  "createBitmapIndex": true\n              },\n              {\n                  "type": "string",\n                  "name": "post_title",\n                  "multiValueHandling": "SORTED_ARRAY",\n                  "createBitmapIndex": true\n              },\n              {\n                  "type": "long",\n                  "name": "views",\n                  "multiValueHandling": "SORTED_ARRAY",\n                  "createBitmapIndex": false\n              },\n              {\n                  "type": "long",\n                  "name": "upvotes",\n                  "multiValueHandling": "SORTED_ARRAY",\n                  "createBitmapIndex": false\n              },\n              {\n                  "type": "long",\n                  "name": "comments",\n                  "multiValueHandling": "SORTED_ARRAY",\n                  "createBitmapIndex": false\n              },\n              {\n                  "type": "string",\n                  "name": "edited",\n                  "multiValueHandling": "SORTED_ARRAY",\n                  "createBitmapIndex": true\n              }\n          ],\n          "dimensionExclusions": [\n              "__time"\n          ],\n          "includeAllDimensions": false,\n          "useSchemaDiscovery": false\n      },\n      "metricsSpec": [],\n      "granularitySpec": {\n          "type": "uniform",\n          "segmentGranularity": "HOUR",\n          "queryGranularity": {\n              "type": "none"\n          },\n          "rollup": false,\n          "intervals": []\n      },\n      "transformSpec": {\n          "filter": null,\n          "transforms": []\n      }\n  },\n  "tuningConfig": {\n      "type": "kafka",\n      "appendableIndexSpec": {\n          "type": "onheap",\n          "preserveExistingMetrics": false\n      },\n      "maxRowsInMemory": 150000,\n      "maxBytesInMemory": 0,\n      "skipBytesInMemoryOverheadCheck": false,\n      "maxRowsPerSegment": 5000000,\n      "maxTotalRows": null,\n      "intermediatePersistPeriod": "PT10M",\n      "maxPendingPersists": 0,\n      "indexSpec": {\n          "bitmap": {\n              "type": "roaring"\n          },\n          "dimensionCompression": "lz4",\n          "stringDictionaryEncoding": {\n              "type": "utf8"\n          },\n          "metricCompression": "lz4",\n          "longEncoding": "longs"\n      },\n      "indexSpecForIntermediatePersists": {\n          "bitmap": {\n              "type": "roaring"\n          },\n          "dimensionCompression": "lz4",\n          "stringDictionaryEncoding": {\n              "type": "utf8"\n          },\n          "metricCompression": "lz4",\n          "longEncoding": "longs"\n      },\n      "reportParseExceptions": false,\n      "handoffConditionTimeout": 0,\n      "resetOffsetAutomatically": false,\n      "segmentWriteOutMediumFactory": null,\n      "workerThreads": null,\n      "chatRetries": 8,\n      "httpTimeout": "PT10S",\n      "shutdownTimeout": "PT80S",\n      "offsetFetchPeriod": "PT30S",\n      "intermediateHandoffPeriod": "P2147483647D",\n      "logParseExceptions": false,\n      "maxParseExceptions": 2147483647,\n      "maxSavedParseExceptions": 0,\n      "skipSequenceNumberAvailabilityCheck": false,\n      "repartitionTransitionDuration": "PT120S"\n  },\n  "ioConfig": {\n      "topic": "social_media",\n      "inputFormat": {\n          "type": "json"\n      },\n      "replicas": 1,\n      "taskCount": 1,\n      "taskDuration": "PT3600S",\n      "consumerProperties": {\n          "bootstrap.servers": "localhost:9094"\n      },\n      "autoScalerConfig": null,\n      "pollTimeout": 100,\n      "startDelay": "PT5S",\n      "period": "PT30S",\n      "useEarliestOffset": true,\n      "completionTimeout": "PT1800S",\n      "lateMessageRejectionPeriod": null,\n      "earlyMessageRejectionPeriod": null,\n      "lateMessageRejectionStartDateTime": null,\n      "configOverrides": null,\n      "idleConfig": null,\n      "stream": "social_media",\n      "useEarliestSequenceNumber": true\n  },\n  "context": null,\n  "suspended": false\n}\n'})})]}),"\n",(0,r.jsx)(n.h3,{id:"get-supervisor-status",children:"Get supervisor status"}),"\n",(0,r.jsx)(n.p,{children:"Retrieves the current status report for a single supervisor. The report contains the state of the supervisor tasks and an array of recently thrown exceptions."}),"\n",(0,r.jsxs)(n.p,{children:["For additional information about the status report, see ",(0,r.jsx)(n.a,{href:"/docs/latest/ingestion/supervisor#status-report",children:"Supervisor reference"}),"."]}),"\n",(0,r.jsx)(n.h4,{id:"url-4",children:"URL"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"GET"})," ",(0,r.jsx)(n.code,{children:"/druid/indexer/v1/supervisor/{supervisorId}/status"})]}),"\n",(0,r.jsx)(n.h4,{id:"responses-4",children:"Responses"}),"\n",(0,r.jsxs)(a.A,{children:[(0,r.jsx)(l.A,{value:"14",label:"200 SUCCESS",children:(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Successfully retrieved supervisor status"})})}),(0,r.jsx)(l.A,{value:"15",label:"404 NOT FOUND",children:(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Invalid supervisor ID"})})})]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h4,{id:"sample-request-4",children:"Sample request"}),"\n",(0,r.jsxs)(n.p,{children:["The following example shows how to retrieve the status of a supervisor with the name ",(0,r.jsx)(n.code,{children:"social_media"}),"."]}),"\n",(0,r.jsxs)(a.A,{children:[(0,r.jsx)(l.A,{value:"16",label:"cURL",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:'curl "http://ROUTER_IP:ROUTER_PORT/druid/indexer/v1/supervisor/social_media/status"\n'})})}),(0,r.jsx)(l.A,{value:"17",label:"HTTP",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-HTTP",children:"GET /druid/indexer/v1/supervisor/social_media/status HTTP/1.1\nHost: http://ROUTER_IP:ROUTER_PORT\n"})})})]}),"\n",(0,r.jsx)(n.h4,{id:"sample-response-4",children:"Sample response"}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"View the response"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n    "id": "social_media",\n    "generationTime": "2023-07-05T23:24:43.934Z",\n    "payload": {\n        "dataSource": "social_media",\n        "stream": "social_media",\n        "partitions": 1,\n        "replicas": 1,\n        "durationSeconds": 3600,\n        "activeTasks": [\n            {\n                "id": "index_kafka_social_media_ab72ae4127c591c_flcbhdlh",\n                "startingOffsets": {\n                    "0": 3176381\n                },\n                "startTime": "2023-07-05T23:21:39.321Z",\n                "remainingSeconds": 3415,\n                "type": "ACTIVE",\n                "currentOffsets": {\n                    "0": 3296632\n                },\n                "lag": {\n                    "0": 3\n                }\n            }\n        ],\n        "publishingTasks": [],\n        "latestOffsets": {\n            "0": 3296635\n        },\n        "minimumLag": {\n            "0": 3\n        },\n        "aggregateLag": 3,\n        "offsetsLastUpdated": "2023-07-05T23:24:30.212Z",\n        "suspended": false,\n        "healthy": true,\n        "state": "RUNNING",\n        "detailedState": "RUNNING",\n        "recentErrors": []\n    }\n}\n'})})]}),"\n",(0,r.jsx)(n.h3,{id:"get-supervisor-health",children:"Get supervisor health"}),"\n",(0,r.jsxs)(n.p,{children:["Retrieves the current health report for a single supervisor. The health of a supervisor is determined by the supervisor's ",(0,r.jsx)(n.code,{children:"state"})," (as returned by the ",(0,r.jsx)(n.code,{children:"/status"})," endpoint) and the ",(0,r.jsx)(n.code,{children:"druid.supervisor.*"})," Overlord configuration thresholds."]}),"\n",(0,r.jsx)(n.h4,{id:"url-5",children:"URL"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"GET"})," ",(0,r.jsx)(n.code,{children:"/druid/indexer/v1/supervisor/{supervisorId}/health"})]}),"\n",(0,r.jsx)(n.h4,{id:"responses-5",children:"Responses"}),"\n",(0,r.jsxs)(a.A,{children:[(0,r.jsx)(l.A,{value:"18",label:"200 SUCCESS",children:(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Supervisor is healthy"})})}),(0,r.jsx)(l.A,{value:"19",label:"404 NOT FOUND",children:(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Invalid supervisor ID"})})}),(0,r.jsx)(l.A,{value:"20",label:"503 SERVICE UNAVAILABLE",children:(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Supervisor is unhealthy"})})})]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h4,{id:"sample-request-5",children:"Sample request"}),"\n",(0,r.jsxs)(n.p,{children:["The following example shows how to retrieve the health report for a supervisor with the name ",(0,r.jsx)(n.code,{children:"social_media"}),"."]}),"\n",(0,r.jsxs)(a.A,{children:[(0,r.jsx)(l.A,{value:"21",label:"cURL",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:'curl "http://ROUTER_IP:ROUTER_PORT/druid/indexer/v1/supervisor/social_media/health"\n'})})}),(0,r.jsx)(l.A,{value:"22",label:"HTTP",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-HTTP",children:"GET /druid/indexer/v1/supervisor/social_media/health HTTP/1.1\nHost: http://ROUTER_IP:ROUTER_PORT\n"})})})]}),"\n",(0,r.jsx)(n.h4,{id:"sample-response-5",children:"Sample response"}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"View the response"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "healthy": false\n}\n'})})]}),"\n",(0,r.jsx)(n.h3,{id:"get-supervisor-ingestion-stats",children:"Get supervisor ingestion stats"}),"\n",(0,r.jsxs)(n.p,{children:["Returns a snapshot of the current ingestion row counters for each task being managed by the supervisor, along with moving averages for the row counters. See ",(0,r.jsx)(n.a,{href:"/docs/latest/ingestion/tasks#row-stats",children:"Row stats"})," for more information."]}),"\n",(0,r.jsx)(n.h4,{id:"url-6",children:"URL"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"GET"})," ",(0,r.jsx)(n.code,{children:"/druid/indexer/v1/supervisor/{supervisorId}/stats"})]}),"\n",(0,r.jsx)(n.h4,{id:"responses-6",children:"Responses"}),"\n",(0,r.jsxs)(a.A,{children:[(0,r.jsx)(l.A,{value:"23",label:"200 SUCCESS",children:(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Successfully retrieved supervisor stats"})})}),(0,r.jsx)(l.A,{value:"24",label:"404 NOT FOUND",children:(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Invalid supervisor ID"})})})]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h4,{id:"sample-request-6",children:"Sample request"}),"\n",(0,r.jsxs)(n.p,{children:["The following example shows how to retrieve the current ingestion row counters for a supervisor with the name ",(0,r.jsx)(n.code,{children:"custom_data"}),"."]}),"\n",(0,r.jsxs)(a.A,{children:[(0,r.jsx)(l.A,{value:"25",label:"cURL",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:'curl "http://ROUTER_IP:ROUTER_PORT/druid/indexer/v1/supervisor/custom_data/stats"\n'})})}),(0,r.jsx)(l.A,{value:"26",label:"HTTP",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-HTTP",children:"GET /druid/indexer/v1/supervisor/custom_data/stats HTTP/1.1\nHost: http://ROUTER_IP:ROUTER_PORT\n"})})})]}),"\n",(0,r.jsx)(n.h4,{id:"sample-response-6",children:"Sample response"}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"View the response"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "0": {\n      "index_kafka_custom_data_881d621078f6b7c_ccplchbi": {\n          "movingAverages": {\n              "buildSegments": {\n                  "5m": {\n                      "processed": 53.401225142603316,\n                      "processedBytes": 5226.400757148808,\n                      "unparseable": 0.0,\n                      "thrownAway": 0.0,\n                      "processedWithError": 0.0\n                  },\n                  "15m": {\n                      "processed": 56.92994990102502,\n                      "processedBytes": 5571.772059828217,\n                      "unparseable": 0.0,\n                      "thrownAway": 0.0,\n                      "processedWithError": 0.0\n                  },\n                  "1m": {\n                      "processed": 37.134921285556636,\n                      "processedBytes": 3634.2766230628677,\n                      "unparseable": 0.0,\n                      "thrownAway": 0.0,\n                      "processedWithError": 0.0\n                  }\n              }\n          },\n          "totals": {\n              "buildSegments": {\n                  "processed": 665,\n                  "processedBytes": 65079,\n                  "processedWithError": 0,\n                  "thrownAway": 0,\n                  "unparseable": 0\n                  }\n              }\n          }\n      }\n  }\n'})})]}),"\n",(0,r.jsx)(n.h2,{id:"audit-history",children:"Audit history"}),"\n",(0,r.jsx)(n.p,{children:"An audit history provides a comprehensive log of events, including supervisor configuration, creation, suspension, and modification history."}),"\n",(0,r.jsx)(n.h3,{id:"get-audit-history-for-all-supervisors",children:"Get audit history for all supervisors"}),"\n",(0,r.jsx)(n.p,{children:"Retrieves an audit history of specs for all supervisors."}),"\n",(0,r.jsx)(n.h4,{id:"url-7",children:"URL"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"GET"})," ",(0,r.jsx)(n.code,{children:"/druid/indexer/v1/supervisor/history"})]}),"\n",(0,r.jsx)(n.h4,{id:"responses-7",children:"Responses"}),"\n",(0,r.jsx)(a.A,{children:(0,r.jsx)(l.A,{value:"27",label:"200 SUCCESS",children:(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Successfully retrieved audit history"})})})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h4,{id:"sample-request-7",children:"Sample request"}),"\n",(0,r.jsxs)(a.A,{children:[(0,r.jsx)(l.A,{value:"28",label:"cURL",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:'curl "http://ROUTER_IP:ROUTER_PORT/druid/indexer/v1/supervisor/history"\n'})})}),(0,r.jsx)(l.A,{value:"29",label:"HTTP",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-HTTP",children:"GET /druid/indexer/v1/supervisor/history HTTP/1.1\nHost: http://ROUTER_IP:ROUTER_PORT\n"})})})]}),"\n",(0,r.jsx)(n.h4,{id:"sample-response-7",children:"Sample response"}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"View the response"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "social_media": [\n      {\n          "spec": {\n              "type": "kafka",\n              "spec": {\n                  "dataSchema": {\n                      "dataSource": "social_media",\n                      "timestampSpec": {\n                          "column": "__time",\n                          "format": "iso",\n                          "missingValue": null\n                      },\n                      "dimensionsSpec": {\n                          "dimensions": [\n                              {\n                                  "type": "string",\n                                  "name": "username",\n                                  "multiValueHandling": "SORTED_ARRAY",\n                                  "createBitmapIndex": true\n                              },\n                              {\n                                  "type": "string",\n                                  "name": "post_title",\n                                  "multiValueHandling": "SORTED_ARRAY",\n                                  "createBitmapIndex": true\n                              },\n                              {\n                                  "type": "long",\n                                  "name": "views",\n                                  "multiValueHandling": "SORTED_ARRAY",\n                                  "createBitmapIndex": false\n                              },\n                              {\n                                  "type": "long",\n                                  "name": "upvotes",\n                                  "multiValueHandling": "SORTED_ARRAY",\n                                  "createBitmapIndex": false\n                              },\n                              {\n                                  "type": "long",\n                                  "name": "comments",\n                                  "multiValueHandling": "SORTED_ARRAY",\n                                  "createBitmapIndex": false\n                              },\n                              {\n                                  "type": "string",\n                                  "name": "edited",\n                                  "multiValueHandling": "SORTED_ARRAY",\n                                  "createBitmapIndex": true\n                              }\n                          ],\n                          "dimensionExclusions": [\n                              "__time"\n                          ],\n                          "includeAllDimensions": false,\n                          "useSchemaDiscovery": false\n                      },\n                      "metricsSpec": [],\n                      "granularitySpec": {\n                          "type": "uniform",\n                          "segmentGranularity": "HOUR",\n                          "queryGranularity": {\n                              "type": "none"\n                          },\n                          "rollup": false,\n                          "intervals": []\n                      },\n                      "transformSpec": {\n                          "filter": null,\n                          "transforms": []\n                      }\n                  },\n                  "ioConfig": {\n                      "topic": "social_media",\n                      "inputFormat": {\n                          "type": "json"\n                      },\n                      "replicas": 1,\n                      "taskCount": 1,\n                      "taskDuration": "PT3600S",\n                      "consumerProperties": {\n                          "bootstrap.servers": "localhost:9094"\n                      },\n                      "autoScalerConfig": null,\n                      "pollTimeout": 100,\n                      "startDelay": "PT5S",\n                      "period": "PT30S",\n                      "useEarliestOffset": true,\n                      "completionTimeout": "PT1800S",\n                      "lateMessageRejectionPeriod": null,\n                      "earlyMessageRejectionPeriod": null,\n                      "lateMessageRejectionStartDateTime": null,\n                      "configOverrides": null,\n                      "idleConfig": null,\n                      "stream": "social_media",\n                      "useEarliestSequenceNumber": true\n                  },\n                  "tuningConfig": {\n                      "type": "kafka",\n                      "appendableIndexSpec": {\n                          "type": "onheap",\n                          "preserveExistingMetrics": false\n                      },\n                      "maxRowsInMemory": 150000,\n                      "maxBytesInMemory": 0,\n                      "skipBytesInMemoryOverheadCheck": false,\n                      "maxRowsPerSegment": 5000000,\n                      "maxTotalRows": null,\n                      "intermediatePersistPeriod": "PT10M",\n                      "maxPendingPersists": 0,\n                      "indexSpec": {\n                          "bitmap": {\n                              "type": "roaring"\n                          },\n                          "dimensionCompression": "lz4",\n                          "stringDictionaryEncoding": {\n                              "type": "utf8"\n                          },\n                          "metricCompression": "lz4",\n                          "longEncoding": "longs"\n                      },\n                      "indexSpecForIntermediatePersists": {\n                          "bitmap": {\n                              "type": "roaring"\n                          },\n                          "dimensionCompression": "lz4",\n                          "stringDictionaryEncoding": {\n                              "type": "utf8"\n                          },\n                          "metricCompression": "lz4",\n                          "longEncoding": "longs"\n                      },\n                      "reportParseExceptions": false,\n                      "handoffConditionTimeout": 0,\n                      "resetOffsetAutomatically": false,\n                      "segmentWriteOutMediumFactory": null,\n                      "workerThreads": null,\n                      "chatRetries": 8,\n                      "httpTimeout": "PT10S",\n                      "shutdownTimeout": "PT80S",\n                      "offsetFetchPeriod": "PT30S",\n                      "intermediateHandoffPeriod": "P2147483647D",\n                      "logParseExceptions": false,\n                      "maxParseExceptions": 2147483647,\n                      "maxSavedParseExceptions": 0,\n                      "skipSequenceNumberAvailabilityCheck": false,\n                      "repartitionTransitionDuration": "PT120S"\n                  }\n              },\n              "dataSchema": {\n                  "dataSource": "social_media",\n                  "timestampSpec": {\n                      "column": "__time",\n                      "format": "iso",\n                      "missingValue": null\n                  },\n                  "dimensionsSpec": {\n                      "dimensions": [\n                          {\n                              "type": "string",\n                              "name": "username",\n                              "multiValueHandling": "SORTED_ARRAY",\n                              "createBitmapIndex": true\n                          },\n                          {\n                              "type": "string",\n                              "name": "post_title",\n                              "multiValueHandling": "SORTED_ARRAY",\n                              "createBitmapIndex": true\n                          },\n                          {\n                              "type": "long",\n                              "name": "views",\n                              "multiValueHandling": "SORTED_ARRAY",\n                              "createBitmapIndex": false\n                          },\n                          {\n                              "type": "long",\n                              "name": "upvotes",\n                              "multiValueHandling": "SORTED_ARRAY",\n                              "createBitmapIndex": false\n                          },\n                          {\n                              "type": "long",\n                              "name": "comments",\n                              "multiValueHandling": "SORTED_ARRAY",\n                              "createBitmapIndex": false\n                          },\n                          {\n                              "type": "string",\n                              "name": "edited",\n                              "multiValueHandling": "SORTED_ARRAY",\n                              "createBitmapIndex": true\n                          }\n                      ],\n                      "dimensionExclusions": [\n                          "__time"\n                      ],\n                      "includeAllDimensions": false,\n                      "useSchemaDiscovery": false\n                  },\n                  "metricsSpec": [],\n                  "granularitySpec": {\n                      "type": "uniform",\n                      "segmentGranularity": "HOUR",\n                      "queryGranularity": {\n                          "type": "none"\n                      },\n                      "rollup": false,\n                      "intervals": []\n                  },\n                  "transformSpec": {\n                      "filter": null,\n                      "transforms": []\n                  }\n              },\n              "tuningConfig": {\n                  "type": "kafka",\n                  "appendableIndexSpec": {\n                      "type": "onheap",\n                      "preserveExistingMetrics": false\n                  },\n                  "maxRowsInMemory": 150000,\n                  "maxBytesInMemory": 0,\n                  "skipBytesInMemoryOverheadCheck": false,\n                  "maxRowsPerSegment": 5000000,\n                  "maxTotalRows": null,\n                  "intermediatePersistPeriod": "PT10M",\n                  "maxPendingPersists": 0,\n                  "indexSpec": {\n                      "bitmap": {\n                          "type": "roaring"\n                      },\n                      "dimensionCompression": "lz4",\n                      "stringDictionaryEncoding": {\n                          "type": "utf8"\n                      },\n                      "metricCompression": "lz4",\n                      "longEncoding": "longs"\n                  },\n                  "indexSpecForIntermediatePersists": {\n                      "bitmap": {\n                          "type": "roaring"\n                      },\n                      "dimensionCompression": "lz4",\n                      "stringDictionaryEncoding": {\n                          "type": "utf8"\n                      },\n                      "metricCompression": "lz4",\n                      "longEncoding": "longs"\n                  },\n                  "reportParseExceptions": false,\n                  "handoffConditionTimeout": 0,\n                  "resetOffsetAutomatically": false,\n                  "segmentWriteOutMediumFactory": null,\n                  "workerThreads": null,\n                  "chatRetries": 8,\n                  "httpTimeout": "PT10S",\n                  "shutdownTimeout": "PT80S",\n                  "offsetFetchPeriod": "PT30S",\n                  "intermediateHandoffPeriod": "P2147483647D",\n                  "logParseExceptions": false,\n                  "maxParseExceptions": 2147483647,\n                  "maxSavedParseExceptions": 0,\n                  "skipSequenceNumberAvailabilityCheck": false,\n                  "repartitionTransitionDuration": "PT120S"\n              },\n              "ioConfig": {\n                  "topic": "social_media",\n                  "inputFormat": {\n                      "type": "json"\n                  },\n                  "replicas": 1,\n                  "taskCount": 1,\n                  "taskDuration": "PT3600S",\n                  "consumerProperties": {\n                      "bootstrap.servers": "localhost:9094"\n                  },\n                  "autoScalerConfig": null,\n                  "pollTimeout": 100,\n                  "startDelay": "PT5S",\n                  "period": "PT30S",\n                  "useEarliestOffset": true,\n                  "completionTimeout": "PT1800S",\n                  "lateMessageRejectionPeriod": null,\n                  "earlyMessageRejectionPeriod": null,\n                  "lateMessageRejectionStartDateTime": null,\n                  "configOverrides": null,\n                  "idleConfig": null,\n                  "stream": "social_media",\n                  "useEarliestSequenceNumber": true\n              },\n              "context": null,\n              "suspended": false\n          },\n          "version": "2023-07-03T18:51:02.970Z"\n      }\n  ]\n}\n'})})]}),"\n",(0,r.jsx)(n.h3,{id:"get-audit-history-for-a-specific-supervisor",children:"Get audit history for a specific supervisor"}),"\n",(0,r.jsx)(n.p,{children:"Retrieves an audit history of specs for a single supervisor."}),"\n",(0,r.jsx)(n.h4,{id:"url-8",children:"URL"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"GET"})," ",(0,r.jsx)(n.code,{children:"/druid/indexer/v1/supervisor/{supervisorId}/history"})]}),"\n",(0,r.jsx)(n.h4,{id:"responses-8",children:"Responses"}),"\n",(0,r.jsxs)(a.A,{children:[(0,r.jsx)(l.A,{value:"30",label:"200 SUCCESS",children:(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Successfully retrieved supervisor audit history"})})}),(0,r.jsx)(l.A,{value:"31",label:"404 NOT FOUND",children:(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Invalid supervisor ID"})})})]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h4,{id:"sample-request-8",children:"Sample request"}),"\n",(0,r.jsxs)(n.p,{children:["The following example shows how to retrieve the audit history of a supervisor with the name ",(0,r.jsx)(n.code,{children:"wikipedia_stream"}),"."]}),"\n",(0,r.jsxs)(a.A,{children:[(0,r.jsx)(l.A,{value:"23",label:"cURL",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:'curl "http://ROUTER_IP:ROUTER_PORT/druid/indexer/v1/supervisor/wikipedia_stream/history"\n'})})}),(0,r.jsx)(l.A,{value:"32",label:"HTTP",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-HTTP",children:"GET /druid/indexer/v1/supervisor/wikipedia_stream/history HTTP/1.1\nHost: http://ROUTER_IP:ROUTER_PORT\n"})})})]}),"\n",(0,r.jsx)(n.h4,{id:"sample-response-8",children:"Sample response"}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"View the response"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'[\n  {\n      "spec": {\n          "type": "kafka",\n          "spec": {\n              "dataSchema": {\n                  "dataSource": "wikipedia_stream",\n                  "timestampSpec": {\n                      "column": "__time",\n                      "format": "iso",\n                      "missingValue": null\n                  },\n                  "dimensionsSpec": {\n                      "dimensions": [\n                          {\n                              "type": "string",\n                              "name": "username",\n                              "multiValueHandling": "SORTED_ARRAY",\n                              "createBitmapIndex": true\n                          },\n                          {\n                              "type": "string",\n                              "name": "post_title",\n                              "multiValueHandling": "SORTED_ARRAY",\n                              "createBitmapIndex": true\n                          },\n                          {\n                              "type": "long",\n                              "name": "views",\n                              "multiValueHandling": "SORTED_ARRAY",\n                              "createBitmapIndex": false\n                          },\n                          {\n                              "type": "long",\n                              "name": "upvotes",\n                              "multiValueHandling": "SORTED_ARRAY",\n                              "createBitmapIndex": false\n                          },\n                          {\n                              "type": "long",\n                              "name": "comments",\n                              "multiValueHandling": "SORTED_ARRAY",\n                              "createBitmapIndex": false\n                          },\n                          {\n                              "type": "string",\n                              "name": "edited",\n                              "multiValueHandling": "SORTED_ARRAY",\n                              "createBitmapIndex": true\n                          }\n                      ],\n                      "dimensionExclusions": [\n                          "__time"\n                      ],\n                      "includeAllDimensions": false,\n                      "useSchemaDiscovery": false\n                  },\n                  "metricsSpec": [],\n                  "granularitySpec": {\n                      "type": "uniform",\n                      "segmentGranularity": "HOUR",\n                      "queryGranularity": {\n                          "type": "none"\n                      },\n                      "rollup": false,\n                      "intervals": []\n                  },\n                  "transformSpec": {\n                      "filter": null,\n                      "transforms": []\n                  }\n              },\n              "ioConfig": {\n                  "topic": "social_media",\n                  "inputFormat": {\n                      "type": "json"\n                  },\n                  "replicas": 1,\n                  "taskCount": 1,\n                  "taskDuration": "PT3600S",\n                  "consumerProperties": {\n                      "bootstrap.servers": "localhost:9042"\n                  },\n                  "autoScalerConfig": null,\n                  "pollTimeout": 100,\n                  "startDelay": "PT5S",\n                  "period": "PT30S",\n                  "useEarliestOffset": true,\n                  "completionTimeout": "PT1800S",\n                  "lateMessageRejectionPeriod": null,\n                  "earlyMessageRejectionPeriod": null,\n                  "lateMessageRejectionStartDateTime": null,\n                  "configOverrides": null,\n                  "idleConfig": null,\n                  "stream": "social_media",\n                  "useEarliestSequenceNumber": true\n              },\n              "tuningConfig": {\n                  "type": "kafka",\n                  "appendableIndexSpec": {\n                      "type": "onheap",\n                      "preserveExistingMetrics": false\n                  },\n                  "maxRowsInMemory": 150000,\n                  "maxBytesInMemory": 0,\n                  "skipBytesInMemoryOverheadCheck": false,\n                  "maxRowsPerSegment": 5000000,\n                  "maxTotalRows": null,\n                  "intermediatePersistPeriod": "PT10M",\n                  "maxPendingPersists": 0,\n                  "indexSpec": {\n                      "bitmap": {\n                          "type": "roaring"\n                      },\n                      "dimensionCompression": "lz4",\n                      "stringDictionaryEncoding": {\n                          "type": "utf8"\n                      },\n                      "metricCompression": "lz4",\n                      "longEncoding": "longs"\n                  },\n                  "indexSpecForIntermediatePersists": {\n                      "bitmap": {\n                          "type": "roaring"\n                      },\n                      "dimensionCompression": "lz4",\n                      "stringDictionaryEncoding": {\n                          "type": "utf8"\n                      },\n                      "metricCompression": "lz4",\n                      "longEncoding": "longs"\n                  },\n                  "reportParseExceptions": false,\n                  "handoffConditionTimeout": 0,\n                  "resetOffsetAutomatically": false,\n                  "segmentWriteOutMediumFactory": null,\n                  "workerThreads": null,\n                  "chatRetries": 8,\n                  "httpTimeout": "PT10S",\n                  "shutdownTimeout": "PT80S",\n                  "offsetFetchPeriod": "PT30S",\n                  "intermediateHandoffPeriod": "P2147483647D",\n                  "logParseExceptions": false,\n                  "maxParseExceptions": 2147483647,\n                  "maxSavedParseExceptions": 0,\n                  "skipSequenceNumberAvailabilityCheck": false,\n                  "repartitionTransitionDuration": "PT120S"\n              }\n          },\n          "dataSchema": {\n              "dataSource": "wikipedia_stream",\n              "timestampSpec": {\n                  "column": "__time",\n                  "format": "iso",\n                  "missingValue": null\n              },\n              "dimensionsSpec": {\n                  "dimensions": [\n                      {\n                          "type": "string",\n                          "name": "username",\n                          "multiValueHandling": "SORTED_ARRAY",\n                          "createBitmapIndex": true\n                      },\n                      {\n                          "type": "string",\n                          "name": "post_title",\n                          "multiValueHandling": "SORTED_ARRAY",\n                          "createBitmapIndex": true\n                      },\n                      {\n                          "type": "long",\n                          "name": "views",\n                          "multiValueHandling": "SORTED_ARRAY",\n                          "createBitmapIndex": false\n                      },\n                      {\n                          "type": "long",\n                          "name": "upvotes",\n                          "multiValueHandling": "SORTED_ARRAY",\n                          "createBitmapIndex": false\n                      },\n                      {\n                          "type": "long",\n                          "name": "comments",\n                          "multiValueHandling": "SORTED_ARRAY",\n                          "createBitmapIndex": false\n                      },\n                      {\n                          "type": "string",\n                          "name": "edited",\n                          "multiValueHandling": "SORTED_ARRAY",\n                          "createBitmapIndex": true\n                      }\n                  ],\n                  "dimensionExclusions": [\n                      "__time"\n                  ],\n                  "includeAllDimensions": false,\n                  "useSchemaDiscovery": false\n              },\n              "metricsSpec": [],\n              "granularitySpec": {\n                  "type": "uniform",\n                  "segmentGranularity": "HOUR",\n                  "queryGranularity": {\n                      "type": "none"\n                  },\n                  "rollup": false,\n                  "intervals": []\n              },\n              "transformSpec": {\n                  "filter": null,\n                  "transforms": []\n              }\n          },\n          "tuningConfig": {\n              "type": "kafka",\n              "appendableIndexSpec": {\n                  "type": "onheap",\n                  "preserveExistingMetrics": false\n              },\n              "maxRowsInMemory": 150000,\n              "maxBytesInMemory": 0,\n              "skipBytesInMemoryOverheadCheck": false,\n              "maxRowsPerSegment": 5000000,\n              "maxTotalRows": null,\n              "intermediatePersistPeriod": "PT10M",\n              "maxPendingPersists": 0,\n              "indexSpec": {\n                  "bitmap": {\n                      "type": "roaring"\n                  },\n                  "dimensionCompression": "lz4",\n                  "stringDictionaryEncoding": {\n                      "type": "utf8"\n                  },\n                  "metricCompression": "lz4",\n                  "longEncoding": "longs"\n              },\n              "indexSpecForIntermediatePersists": {\n                  "bitmap": {\n                      "type": "roaring"\n                  },\n                  "dimensionCompression": "lz4",\n                  "stringDictionaryEncoding": {\n                      "type": "utf8"\n                  },\n                  "metricCompression": "lz4",\n                  "longEncoding": "longs"\n              },\n              "reportParseExceptions": false,\n              "handoffConditionTimeout": 0,\n              "resetOffsetAutomatically": false,\n              "segmentWriteOutMediumFactory": null,\n              "workerThreads": null,\n              "chatRetries": 8,\n              "httpTimeout": "PT10S",\n              "shutdownTimeout": "PT80S",\n              "offsetFetchPeriod": "PT30S",\n              "intermediateHandoffPeriod": "P2147483647D",\n              "logParseExceptions": false,\n              "maxParseExceptions": 2147483647,\n              "maxSavedParseExceptions": 0,\n              "skipSequenceNumberAvailabilityCheck": false,\n              "repartitionTransitionDuration": "PT120S"\n          },\n          "ioConfig": {\n              "topic": "social_media",\n              "inputFormat": {\n                  "type": "json"\n              },\n              "replicas": 1,\n              "taskCount": 1,\n              "taskDuration": "PT3600S",\n              "consumerProperties": {\n                  "bootstrap.servers": "localhost:9042"\n              },\n              "autoScalerConfig": null,\n              "pollTimeout": 100,\n              "startDelay": "PT5S",\n              "period": "PT30S",\n              "useEarliestOffset": true,\n              "completionTimeout": "PT1800S",\n              "lateMessageRejectionPeriod": null,\n              "earlyMessageRejectionPeriod": null,\n              "lateMessageRejectionStartDateTime": null,\n              "configOverrides": null,\n              "idleConfig": null,\n              "stream": "social_media",\n              "useEarliestSequenceNumber": true\n          },\n          "context": null,\n          "suspended": false\n      },\n      "version": "2023-07-05T20:59:16.872Z"\n  }\n]\n'})})]}),"\n",(0,r.jsx)(n.h2,{id:"manage-supervisors",children:"Manage supervisors"}),"\n",(0,r.jsx)(n.h3,{id:"create-or-update-a-supervisor",children:"Create or update a supervisor"}),"\n",(0,r.jsx)(n.p,{children:"Creates a new supervisor spec or updates an existing one with new configuration and schema information. When updating a supervisor spec, the datasource must remain the same as the previous supervisor."}),"\n",(0,r.jsxs)(n.p,{children:["You can define a supervisor spec for ",(0,r.jsx)(n.a,{href:"/docs/latest/ingestion/kafka-ingestion",children:"Apache Kafka"})," or ",(0,r.jsx)(n.a,{href:"/docs/latest/ingestion/kinesis-ingestion",children:"Amazon Kinesis"})," streaming ingestion methods."]}),"\n",(0,r.jsx)(n.p,{children:"The following table lists the properties of a supervisor spec:"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Property"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"}),(0,r.jsx)(n.th,{children:"Required"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"type"})}),(0,r.jsx)(n.td,{children:"String"}),(0,r.jsxs)(n.td,{children:["The supervisor type. One of",(0,r.jsx)(n.code,{children:"kafka"})," or ",(0,r.jsx)(n.code,{children:"kinesis"}),"."]}),(0,r.jsx)(n.td,{children:"Yes"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"spec"})}),(0,r.jsx)(n.td,{children:"Object"}),(0,r.jsx)(n.td,{children:"The container object for the supervisor configuration."}),(0,r.jsx)(n.td,{children:"Yes"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"ioConfig"})}),(0,r.jsx)(n.td,{children:"Object"}),(0,r.jsx)(n.td,{children:"The I/O configuration object to define the connection and I/O-related settings for the supervisor and indexing task."}),(0,r.jsx)(n.td,{children:"Yes"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"dataSchema"})}),(0,r.jsx)(n.td,{children:"Object"}),(0,r.jsxs)(n.td,{children:["The schema for the indexing task to use during ingestion. See ",(0,r.jsx)(n.a,{href:"/docs/latest/ingestion/ingestion-spec#dataschema",children:(0,r.jsx)(n.code,{children:"dataSchema"})})," for more information."]}),(0,r.jsx)(n.td,{children:"Yes"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"tuningConfig"})}),(0,r.jsx)(n.td,{children:"Object"}),(0,r.jsx)(n.td,{children:"The tuning configuration object to define performance-related settings for the supervisor and indexing tasks."}),(0,r.jsx)(n.td,{children:"No"})]})]})]}),"\n",(0,r.jsx)(n.p,{children:"When you call this endpoint on an existing supervisor, the running supervisor signals its tasks to stop reading and begin publishing, exiting itself. Druid then uses the provided configuration from the request body to create a new supervisor. Druid submits a new schema while retaining existing publishing tasks and starts new tasks at the previous task offsets.\nThis way, you can apply configuration changes without a pause in ingestion."}),"\n",(0,r.jsx)(n.h4,{id:"url-9",children:"URL"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"POST"})," ",(0,r.jsx)(n.code,{children:"/druid/indexer/v1/supervisor"})]}),"\n",(0,r.jsx)(n.h4,{id:"responses-9",children:"Responses"}),"\n",(0,r.jsxs)(a.A,{children:[(0,r.jsx)(l.A,{value:"33",label:"200 SUCCESS",children:(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Successfully created a new supervisor or updated an existing supervisor"})})}),(0,r.jsx)(l.A,{value:"34",label:"415 UNSUPPORTED MEDIA TYPE",children:(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Request body content type is not in JSON format"})})})]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h4,{id:"sample-request-9",children:"Sample request"}),"\n",(0,r.jsxs)(n.p,{children:["The following example uses JSON input format to create a supervisor spec for Kafka with a ",(0,r.jsx)(n.code,{children:"social_media"})," datasource and ",(0,r.jsx)(n.code,{children:"social_media"})," topic."]}),"\n",(0,r.jsxs)(a.A,{children:[(0,r.jsx)(l.A,{value:"35",label:"cURL",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:'curl "http://ROUTER_IP:ROUTER_PORT/druid/indexer/v1/supervisor" \\\n--header \'Content-Type: application/json\' \\\n--data \'{\n    "type": "kafka",\n    "spec": {\n        "ioConfig": {\n            "type": "kafka",\n            "consumerProperties": {\n                "bootstrap.servers": "localhost:9094"\n            },\n            "topic": "social_media",\n            "inputFormat": {\n                "type": "json"\n            },\n            "useEarliestOffset": true\n        },\n        "tuningConfig": {\n            "type": "kafka"\n        },\n        "dataSchema": {\n            "dataSource": "social_media",\n            "timestampSpec": {\n                "column": "__time",\n                "format": "iso"\n            },\n            "dimensionsSpec": {\n                "dimensions": [\n                    "username",\n                    "post_title",\n                    {\n                        "type": "long",\n                        "name": "views"\n                    },\n                    {\n                        "type": "long",\n                        "name": "upvotes"\n                    },\n                    {\n                        "type": "long",\n                        "name": "comments"\n                    },\n                    "edited"\n                ]\n            },\n            "granularitySpec": {\n                "queryGranularity": "none",\n                "rollup": false,\n                "segmentGranularity": "hour"\n            }\n        }\n    }\n}\'\n'})})}),(0,r.jsx)(l.A,{value:"36",label:"HTTP",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-HTTP",children:'POST /druid/indexer/v1/supervisor HTTP/1.1\nHost: http://ROUTER_IP:ROUTER_PORT\nContent-Type: application/json\nContent-Length: 1359\n\n{\n    "type": "kafka",\n    "spec": {\n        "ioConfig": {\n            "type": "kafka",\n            "consumerProperties": {\n                "bootstrap.servers": "localhost:9094"\n            },\n            "topic": "social_media",\n            "inputFormat": {\n                "type": "json"\n            },\n            "useEarliestOffset": true\n        },\n        "tuningConfig": {\n            "type": "kafka"\n        },\n        "dataSchema": {\n            "dataSource": "social_media",\n            "timestampSpec": {\n                "column": "__time",\n                "format": "iso"\n            },\n            "dimensionsSpec": {\n                "dimensions": [\n                    "username",\n                    "post_title",\n                    {\n                        "type": "long",\n                        "name": "views"\n                    },\n                    {\n                        "type": "long",\n                        "name": "upvotes"\n                    },\n                    {\n                        "type": "long",\n                        "name": "comments"\n                    },\n                    "edited"\n                ]\n            },\n            "granularitySpec": {\n                "queryGranularity": "none",\n                "rollup": false,\n                "segmentGranularity": "hour"\n            }\n        }\n    }\n}\n'})})})]}),"\n",(0,r.jsxs)(n.h4,{id:"sample-request-with-skiprestartifunmodified",children:["Sample request with ",(0,r.jsx)(n.code,{children:"skipRestartIfUnmodified"})]}),"\n",(0,r.jsxs)(n.p,{children:["The following example sets the ",(0,r.jsx)(n.code,{children:"skipRestartIfUnmodified"})," flag to true. With this flag set to true, the Supervisor will only restart if there has been a modification to the SupervisorSpec. If left unset, the flag defaults to false."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:'curl "http://ROUTER_IP:ROUTER_PORT/druid/indexer/v1/supervisor?skipRestartIfUnmodified=true" \\\n--header \'Content-Type: application/json\' \\\n--data \'{\n    "type": "kafka",\n    "spec": {\n        "ioConfig": {\n            "type": "kafka",\n            "consumerProperties": {\n                "bootstrap.servers": "localhost:9094"\n            },\n            "topic": "social_media",\n            "inputFormat": {\n                "type": "json"\n            },\n            "useEarliestOffset": true\n        },\n        "tuningConfig": {\n            "type": "kafka"\n        },\n        "dataSchema": {\n            "dataSource": "social_media",\n            "timestampSpec": {\n                "column": "__time",\n                "format": "iso"\n            },\n            "dimensionsSpec": {\n                "dimensions": [\n                    "username",\n                    "post_title",\n                    {\n                        "type": "long",\n                        "name": "views"\n                    },\n                    {\n                        "type": "long",\n                        "name": "upvotes"\n                    },\n                    {\n                        "type": "long",\n                        "name": "comments"\n                    },\n                    "edited"\n                ]\n            },\n            "granularitySpec": {\n                "queryGranularity": "none",\n                "rollup": false,\n                "segmentGranularity": "hour"\n            }\n        }\n    }\n}\'\n'})}),"\n",(0,r.jsx)(n.h4,{id:"sample-response-9",children:"Sample response"}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"View the response"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "id": "social_media"\n}\n'})})]}),"\n",(0,r.jsx)(n.h3,{id:"suspend-a-running-supervisor",children:"Suspend a running supervisor"}),"\n",(0,r.jsxs)(n.p,{children:["Suspends a single running supervisor. Returns the updated supervisor spec, where the ",(0,r.jsx)(n.code,{children:"suspended"})," property is set to ",(0,r.jsx)(n.code,{children:"true"}),". The suspended supervisor continues to emit logs and metrics.\nIndexing tasks remain suspended until you ",(0,r.jsx)(n.a,{href:"#resume-a-supervisor",children:"resume the supervisor"}),"."]}),"\n",(0,r.jsx)(n.h4,{id:"url-10",children:"URL"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"POST"})," ",(0,r.jsx)(n.code,{children:"/druid/indexer/v1/supervisor/{supervisorId}/suspend"})]}),"\n",(0,r.jsx)(n.h4,{id:"responses-10",children:"Responses"}),"\n",(0,r.jsxs)(a.A,{children:[(0,r.jsx)(l.A,{value:"37",label:"200 SUCCESS",children:(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Successfully shut down supervisor"})})}),(0,r.jsx)(l.A,{value:"38",label:"400 BAD REQUEST",children:(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Supervisor already suspended"})})}),(0,r.jsx)(l.A,{value:"39",label:"404 NOT FOUND",children:(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Invalid supervisor ID"})})})]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h4,{id:"sample-request-10",children:"Sample request"}),"\n",(0,r.jsxs)(n.p,{children:["The following example shows how to suspend a running supervisor with the name ",(0,r.jsx)(n.code,{children:"social_media"}),"."]}),"\n",(0,r.jsxs)(a.A,{children:[(0,r.jsx)(l.A,{value:"40",label:"cURL",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:'curl --request POST "http://ROUTER_IP:ROUTER_PORT/druid/indexer/v1/supervisor/social_media/suspend"\n'})})}),(0,r.jsx)(l.A,{value:"41",label:"HTTP",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-HTTP",children:"POST /druid/indexer/v1/supervisor/social_media/suspend HTTP/1.1\nHost: http://ROUTER_IP:ROUTER_PORT\n"})})})]}),"\n",(0,r.jsx)(n.h4,{id:"sample-response-10",children:"Sample response"}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"View the response"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "type": "kafka",\n  "spec": {\n      "dataSchema": {\n          "dataSource": "social_media",\n          "timestampSpec": {\n              "column": "__time",\n              "format": "iso",\n              "missingValue": null\n          },\n          "dimensionsSpec": {\n              "dimensions": [\n                  {\n                      "type": "string",\n                      "name": "username",\n                      "multiValueHandling": "SORTED_ARRAY",\n                      "createBitmapIndex": true\n                  },\n                  {\n                      "type": "string",\n                      "name": "post_title",\n                      "multiValueHandling": "SORTED_ARRAY",\n                      "createBitmapIndex": true\n                  },\n                  {\n                      "type": "long",\n                      "name": "views",\n                      "multiValueHandling": "SORTED_ARRAY",\n                      "createBitmapIndex": false\n                  },\n                  {\n                      "type": "long",\n                      "name": "upvotes",\n                      "multiValueHandling": "SORTED_ARRAY",\n                      "createBitmapIndex": false\n                  },\n                  {\n                      "type": "long",\n                      "name": "comments",\n                      "multiValueHandling": "SORTED_ARRAY",\n                      "createBitmapIndex": false\n                  },\n                  {\n                      "type": "string",\n                      "name": "edited",\n                      "multiValueHandling": "SORTED_ARRAY",\n                      "createBitmapIndex": true\n                  }\n              ],\n              "dimensionExclusions": [\n                  "__time"\n              ],\n              "includeAllDimensions": false,\n              "useSchemaDiscovery": false\n          },\n          "metricsSpec": [],\n          "granularitySpec": {\n              "type": "uniform",\n              "segmentGranularity": "HOUR",\n              "queryGranularity": {\n                  "type": "none"\n              },\n              "rollup": false,\n              "intervals": []\n          },\n          "transformSpec": {\n              "filter": null,\n              "transforms": []\n          }\n      },\n      "ioConfig": {\n          "topic": "social_media",\n          "inputFormat": {\n              "type": "json"\n          },\n          "replicas": 1,\n          "taskCount": 1,\n          "taskDuration": "PT3600S",\n          "consumerProperties": {\n              "bootstrap.servers": "localhost:9094"\n          },\n          "autoScalerConfig": null,\n          "pollTimeout": 100,\n          "startDelay": "PT5S",\n          "period": "PT30S",\n          "useEarliestOffset": true,\n          "completionTimeout": "PT1800S",\n          "lateMessageRejectionPeriod": null,\n          "earlyMessageRejectionPeriod": null,\n          "lateMessageRejectionStartDateTime": null,\n          "configOverrides": null,\n          "idleConfig": null,\n          "stream": "social_media",\n          "useEarliestSequenceNumber": true\n      },\n      "tuningConfig": {\n          "type": "kafka",\n          "appendableIndexSpec": {\n              "type": "onheap",\n              "preserveExistingMetrics": false\n          },\n          "maxRowsInMemory": 150000,\n          "maxBytesInMemory": 0,\n          "skipBytesInMemoryOverheadCheck": false,\n          "maxRowsPerSegment": 5000000,\n          "maxTotalRows": null,\n          "intermediatePersistPeriod": "PT10M",\n          "maxPendingPersists": 0,\n          "indexSpec": {\n              "bitmap": {\n                  "type": "roaring"\n              },\n              "dimensionCompression": "lz4",\n              "stringDictionaryEncoding": {\n                  "type": "utf8"\n              },\n              "metricCompression": "lz4",\n              "longEncoding": "longs"\n          },\n          "indexSpecForIntermediatePersists": {\n              "bitmap": {\n                  "type": "roaring"\n              },\n              "dimensionCompression": "lz4",\n              "stringDictionaryEncoding": {\n                  "type": "utf8"\n              },\n              "metricCompression": "lz4",\n              "longEncoding": "longs"\n          },\n          "reportParseExceptions": false,\n          "handoffConditionTimeout": 0,\n          "resetOffsetAutomatically": false,\n          "segmentWriteOutMediumFactory": null,\n          "workerThreads": null,\n          "chatRetries": 8,\n          "httpTimeout": "PT10S",\n          "shutdownTimeout": "PT80S",\n          "offsetFetchPeriod": "PT30S",\n          "intermediateHandoffPeriod": "P2147483647D",\n          "logParseExceptions": false,\n          "maxParseExceptions": 2147483647,\n          "maxSavedParseExceptions": 0,\n          "skipSequenceNumberAvailabilityCheck": false,\n          "repartitionTransitionDuration": "PT120S"\n      }\n  },\n  "dataSchema": {\n      "dataSource": "social_media",\n      "timestampSpec": {\n          "column": "__time",\n          "format": "iso",\n          "missingValue": null\n      },\n      "dimensionsSpec": {\n          "dimensions": [\n              {\n                  "type": "string",\n                  "name": "username",\n                  "multiValueHandling": "SORTED_ARRAY",\n                  "createBitmapIndex": true\n              },\n              {\n                  "type": "string",\n                  "name": "post_title",\n                  "multiValueHandling": "SORTED_ARRAY",\n                  "createBitmapIndex": true\n              },\n              {\n                  "type": "long",\n                  "name": "views",\n                  "multiValueHandling": "SORTED_ARRAY",\n                  "createBitmapIndex": false\n              },\n              {\n                  "type": "long",\n                  "name": "upvotes",\n                  "multiValueHandling": "SORTED_ARRAY",\n                  "createBitmapIndex": false\n              },\n              {\n                  "type": "long",\n                  "name": "comments",\n                  "multiValueHandling": "SORTED_ARRAY",\n                  "createBitmapIndex": false\n              },\n              {\n                  "type": "string",\n                  "name": "edited",\n                  "multiValueHandling": "SORTED_ARRAY",\n                  "createBitmapIndex": true\n              }\n          ],\n          "dimensionExclusions": [\n              "__time"\n          ],\n          "includeAllDimensions": false,\n          "useSchemaDiscovery": false\n      },\n      "metricsSpec": [],\n      "granularitySpec": {\n          "type": "uniform",\n          "segmentGranularity": "HOUR",\n          "queryGranularity": {\n              "type": "none"\n          },\n          "rollup": false,\n          "intervals": []\n      },\n      "transformSpec": {\n          "filter": null,\n          "transforms": []\n      }\n  },\n  "tuningConfig": {\n      "type": "kafka",\n      "appendableIndexSpec": {\n          "type": "onheap",\n          "preserveExistingMetrics": false\n      },\n      "maxRowsInMemory": 150000,\n      "maxBytesInMemory": 0,\n      "skipBytesInMemoryOverheadCheck": false,\n      "maxRowsPerSegment": 5000000,\n      "maxTotalRows": null,\n      "intermediatePersistPeriod": "PT10M",\n      "maxPendingPersists": 0,\n      "indexSpec": {\n          "bitmap": {\n              "type": "roaring"\n          },\n          "dimensionCompression": "lz4",\n          "stringDictionaryEncoding": {\n              "type": "utf8"\n          },\n          "metricCompression": "lz4",\n          "longEncoding": "longs"\n      },\n      "indexSpecForIntermediatePersists": {\n          "bitmap": {\n              "type": "roaring"\n          },\n          "dimensionCompression": "lz4",\n          "stringDictionaryEncoding": {\n              "type": "utf8"\n          },\n          "metricCompression": "lz4",\n          "longEncoding": "longs"\n      },\n      "reportParseExceptions": false,\n      "handoffConditionTimeout": 0,\n      "resetOffsetAutomatically": false,\n      "segmentWriteOutMediumFactory": null,\n      "workerThreads": null,\n      "chatRetries": 8,\n      "httpTimeout": "PT10S",\n      "shutdownTimeout": "PT80S",\n      "offsetFetchPeriod": "PT30S",\n      "intermediateHandoffPeriod": "P2147483647D",\n      "logParseExceptions": false,\n      "maxParseExceptions": 2147483647,\n      "maxSavedParseExceptions": 0,\n      "skipSequenceNumberAvailabilityCheck": false,\n      "repartitionTransitionDuration": "PT120S"\n  },\n  "ioConfig": {\n      "topic": "social_media",\n      "inputFormat": {\n          "type": "json"\n      },\n      "replicas": 1,\n      "taskCount": 1,\n      "taskDuration": "PT3600S",\n      "consumerProperties": {\n          "bootstrap.servers": "localhost:9094"\n      },\n      "autoScalerConfig": null,\n      "pollTimeout": 100,\n      "startDelay": "PT5S",\n      "period": "PT30S",\n      "useEarliestOffset": true,\n      "completionTimeout": "PT1800S",\n      "lateMessageRejectionPeriod": null,\n      "earlyMessageRejectionPeriod": null,\n      "lateMessageRejectionStartDateTime": null,\n      "configOverrides": null,\n      "idleConfig": null,\n      "stream": "social_media",\n      "useEarliestSequenceNumber": true\n  },\n  "context": null,\n  "suspended": true\n}\n'})})]}),"\n",(0,r.jsx)(n.h3,{id:"suspend-all-supervisors",children:"Suspend all supervisors"}),"\n",(0,r.jsxs)(n.p,{children:["Suspends all supervisors. Note that this endpoint returns an HTTP ",(0,r.jsx)(n.code,{children:"200 Success"})," code message even if there are no supervisors or running supervisors to suspend."]}),"\n",(0,r.jsx)(n.h4,{id:"url-11",children:"URL"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"POST"})," ",(0,r.jsx)(n.code,{children:"/druid/indexer/v1/supervisor/suspendAll"})]}),"\n",(0,r.jsx)(n.h4,{id:"responses-11",children:"Responses"}),"\n",(0,r.jsx)(a.A,{children:(0,r.jsx)(l.A,{value:"42",label:"200 SUCCESS",children:(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Successfully suspended all supervisors"})})})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h4,{id:"sample-request-11",children:"Sample request"}),"\n",(0,r.jsxs)(a.A,{children:[(0,r.jsx)(l.A,{value:"43",label:"cURL",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:'curl --request POST "http://ROUTER_IP:ROUTER_PORT/druid/indexer/v1/supervisor/suspendAll"\n'})})}),(0,r.jsx)(l.A,{value:"44",label:"HTTP",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-HTTP",children:"POST /druid/indexer/v1/supervisor/suspendAll HTTP/1.1\nHost: http://ROUTER_IP:ROUTER_PORT\n"})})})]}),"\n",(0,r.jsx)(n.h4,{id:"sample-response-11",children:"Sample response"}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"View the response"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "status": "success"\n}\n'})})]}),"\n",(0,r.jsx)(n.h3,{id:"resume-a-supervisor",children:"Resume a supervisor"}),"\n",(0,r.jsxs)(n.p,{children:["Resumes indexing tasks for a supervisor. Returns an updated supervisor spec with the ",(0,r.jsx)(n.code,{children:"suspended"})," property set to ",(0,r.jsx)(n.code,{children:"false"}),"."]}),"\n",(0,r.jsx)(n.h4,{id:"url-12",children:"URL"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"POST"})," ",(0,r.jsx)(n.code,{children:"/druid/indexer/v1/supervisor/{supervisorId}/resume"})]}),"\n",(0,r.jsx)(n.h4,{id:"responses-12",children:"Responses"}),"\n",(0,r.jsxs)(a.A,{children:[(0,r.jsx)(l.A,{value:"45",label:"200 SUCCESS",children:(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Successfully resumed supervisor"})})}),(0,r.jsx)(l.A,{value:"46",label:"400 BAD REQUEST",children:(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Supervisor already running"})})}),(0,r.jsx)(l.A,{value:"47",label:"404 NOT FOUND",children:(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Invalid supervisor ID"})})})]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h4,{id:"sample-request-12",children:"Sample request"}),"\n",(0,r.jsxs)(n.p,{children:["The following example resumes a previously suspended supervisor with name ",(0,r.jsx)(n.code,{children:"social_media"}),"."]}),"\n",(0,r.jsxs)(a.A,{children:[(0,r.jsx)(l.A,{value:"48",label:"cURL",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:'curl --request POST "http://ROUTER_IP:ROUTER_PORT/druid/indexer/v1/supervisor/social_media/resume"\n'})})}),(0,r.jsx)(l.A,{value:"49",label:"HTTP",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-HTTP",children:"POST /druid/indexer/v1/supervisor/social_media/resume HTTP/1.1\nHost: http://ROUTER_IP:ROUTER_PORT\n"})})})]}),"\n",(0,r.jsx)(n.h4,{id:"sample-response-12",children:"Sample response"}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"View the response"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "type": "kafka",\n  "spec": {\n      "dataSchema": {\n          "dataSource": "social_media",\n          "timestampSpec": {\n              "column": "__time",\n              "format": "iso",\n              "missingValue": null\n          },\n          "dimensionsSpec": {\n              "dimensions": [\n                  {\n                      "type": "string",\n                      "name": "username",\n                      "multiValueHandling": "SORTED_ARRAY",\n                      "createBitmapIndex": true\n                  },\n                  {\n                      "type": "string",\n                      "name": "post_title",\n                      "multiValueHandling": "SORTED_ARRAY",\n                      "createBitmapIndex": true\n                  },\n                  {\n                      "type": "long",\n                      "name": "views",\n                      "multiValueHandling": "SORTED_ARRAY",\n                      "createBitmapIndex": false\n                  },\n                  {\n                      "type": "long",\n                      "name": "upvotes",\n                      "multiValueHandling": "SORTED_ARRAY",\n                      "createBitmapIndex": false\n                  },\n                  {\n                      "type": "long",\n                      "name": "comments",\n                      "multiValueHandling": "SORTED_ARRAY",\n                      "createBitmapIndex": false\n                  },\n                  {\n                      "type": "string",\n                      "name": "edited",\n                      "multiValueHandling": "SORTED_ARRAY",\n                      "createBitmapIndex": true\n                  }\n              ],\n              "dimensionExclusions": [\n                  "__time"\n              ],\n              "includeAllDimensions": false,\n              "useSchemaDiscovery": false\n          },\n          "metricsSpec": [],\n          "granularitySpec": {\n              "type": "uniform",\n              "segmentGranularity": "HOUR",\n              "queryGranularity": {\n                  "type": "none"\n              },\n              "rollup": false,\n              "intervals": []\n          },\n          "transformSpec": {\n              "filter": null,\n              "transforms": []\n          }\n      },\n      "ioConfig": {\n          "topic": "social_media",\n          "inputFormat": {\n              "type": "json"\n          },\n          "replicas": 1,\n          "taskCount": 1,\n          "taskDuration": "PT3600S",\n          "consumerProperties": {\n              "bootstrap.servers": "localhost:9094"\n          },\n          "autoScalerConfig": null,\n          "pollTimeout": 100,\n          "startDelay": "PT5S",\n          "period": "PT30S",\n          "useEarliestOffset": true,\n          "completionTimeout": "PT1800S",\n          "lateMessageRejectionPeriod": null,\n          "earlyMessageRejectionPeriod": null,\n          "lateMessageRejectionStartDateTime": null,\n          "configOverrides": null,\n          "idleConfig": null,\n          "stream": "social_media",\n          "useEarliestSequenceNumber": true\n      },\n      "tuningConfig": {\n          "type": "kafka",\n          "appendableIndexSpec": {\n              "type": "onheap",\n              "preserveExistingMetrics": false\n          },\n          "maxRowsInMemory": 150000,\n          "maxBytesInMemory": 0,\n          "skipBytesInMemoryOverheadCheck": false,\n          "maxRowsPerSegment": 5000000,\n          "maxTotalRows": null,\n          "intermediatePersistPeriod": "PT10M",\n          "maxPendingPersists": 0,\n          "indexSpec": {\n              "bitmap": {\n                  "type": "roaring"\n              },\n              "dimensionCompression": "lz4",\n              "stringDictionaryEncoding": {\n                  "type": "utf8"\n              },\n              "metricCompression": "lz4",\n              "longEncoding": "longs"\n          },\n          "indexSpecForIntermediatePersists": {\n              "bitmap": {\n                  "type": "roaring"\n              },\n              "dimensionCompression": "lz4",\n              "stringDictionaryEncoding": {\n                  "type": "utf8"\n              },\n              "metricCompression": "lz4",\n              "longEncoding": "longs"\n          },\n          "reportParseExceptions": false,\n          "handoffConditionTimeout": 0,\n          "resetOffsetAutomatically": false,\n          "segmentWriteOutMediumFactory": null,\n          "workerThreads": null,\n          "chatRetries": 8,\n          "httpTimeout": "PT10S",\n          "shutdownTimeout": "PT80S",\n          "offsetFetchPeriod": "PT30S",\n          "intermediateHandoffPeriod": "P2147483647D",\n          "logParseExceptions": false,\n          "maxParseExceptions": 2147483647,\n          "maxSavedParseExceptions": 0,\n          "skipSequenceNumberAvailabilityCheck": false,\n          "repartitionTransitionDuration": "PT120S"\n      }\n  },\n  "dataSchema": {\n      "dataSource": "social_media",\n      "timestampSpec": {\n          "column": "__time",\n          "format": "iso",\n          "missingValue": null\n      },\n      "dimensionsSpec": {\n          "dimensions": [\n              {\n                  "type": "string",\n                  "name": "username",\n                  "multiValueHandling": "SORTED_ARRAY",\n                  "createBitmapIndex": true\n              },\n              {\n                  "type": "string",\n                  "name": "post_title",\n                  "multiValueHandling": "SORTED_ARRAY",\n                  "createBitmapIndex": true\n              },\n              {\n                  "type": "long",\n                  "name": "views",\n                  "multiValueHandling": "SORTED_ARRAY",\n                  "createBitmapIndex": false\n              },\n              {\n                  "type": "long",\n                  "name": "upvotes",\n                  "multiValueHandling": "SORTED_ARRAY",\n                  "createBitmapIndex": false\n              },\n              {\n                  "type": "long",\n                  "name": "comments",\n                  "multiValueHandling": "SORTED_ARRAY",\n                  "createBitmapIndex": false\n              },\n              {\n                  "type": "string",\n                  "name": "edited",\n                  "multiValueHandling": "SORTED_ARRAY",\n                  "createBitmapIndex": true\n              }\n          ],\n          "dimensionExclusions": [\n              "__time"\n          ],\n          "includeAllDimensions": false,\n          "useSchemaDiscovery": false\n      },\n      "metricsSpec": [],\n      "granularitySpec": {\n          "type": "uniform",\n          "segmentGranularity": "HOUR",\n          "queryGranularity": {\n              "type": "none"\n          },\n          "rollup": false,\n          "intervals": []\n      },\n      "transformSpec": {\n          "filter": null,\n          "transforms": []\n      }\n  },\n  "tuningConfig": {\n      "type": "kafka",\n      "appendableIndexSpec": {\n          "type": "onheap",\n          "preserveExistingMetrics": false\n      },\n      "maxRowsInMemory": 150000,\n      "maxBytesInMemory": 0,\n      "skipBytesInMemoryOverheadCheck": false,\n      "maxRowsPerSegment": 5000000,\n      "maxTotalRows": null,\n      "intermediatePersistPeriod": "PT10M",\n      "maxPendingPersists": 0,\n      "indexSpec": {\n          "bitmap": {\n              "type": "roaring"\n          },\n          "dimensionCompression": "lz4",\n          "stringDictionaryEncoding": {\n              "type": "utf8"\n          },\n          "metricCompression": "lz4",\n          "longEncoding": "longs"\n      },\n      "indexSpecForIntermediatePersists": {\n          "bitmap": {\n              "type": "roaring"\n          },\n          "dimensionCompression": "lz4",\n          "stringDictionaryEncoding": {\n              "type": "utf8"\n          },\n          "metricCompression": "lz4",\n          "longEncoding": "longs"\n      },\n      "reportParseExceptions": false,\n      "handoffConditionTimeout": 0,\n      "resetOffsetAutomatically": false,\n      "segmentWriteOutMediumFactory": null,\n      "workerThreads": null,\n      "chatRetries": 8,\n      "httpTimeout": "PT10S",\n      "shutdownTimeout": "PT80S",\n      "offsetFetchPeriod": "PT30S",\n      "intermediateHandoffPeriod": "P2147483647D",\n      "logParseExceptions": false,\n      "maxParseExceptions": 2147483647,\n      "maxSavedParseExceptions": 0,\n      "skipSequenceNumberAvailabilityCheck": false,\n      "repartitionTransitionDuration": "PT120S"\n  },\n  "ioConfig": {\n      "topic": "social_media",\n      "inputFormat": {\n          "type": "json"\n      },\n      "replicas": 1,\n      "taskCount": 1,\n      "taskDuration": "PT3600S",\n      "consumerProperties": {\n          "bootstrap.servers": "localhost:9094"\n      },\n      "autoScalerConfig": null,\n      "pollTimeout": 100,\n      "startDelay": "PT5S",\n      "period": "PT30S",\n      "useEarliestOffset": true,\n      "completionTimeout": "PT1800S",\n      "lateMessageRejectionPeriod": null,\n      "earlyMessageRejectionPeriod": null,\n      "lateMessageRejectionStartDateTime": null,\n      "configOverrides": null,\n      "idleConfig": null,\n      "stream": "social_media",\n      "useEarliestSequenceNumber": true\n  },\n  "context": null,\n  "suspended": false\n}\n'})})]}),"\n",(0,r.jsx)(n.h3,{id:"resume-all-supervisors",children:"Resume all supervisors"}),"\n",(0,r.jsxs)(n.p,{children:["Resumes all supervisors. Note that this endpoint returns an HTTP ",(0,r.jsx)(n.code,{children:"200 Success"})," code even if there are no supervisors or suspended supervisors to resume."]}),"\n",(0,r.jsx)(n.h4,{id:"url-13",children:"URL"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"POST"})," ",(0,r.jsx)(n.code,{children:"/druid/indexer/v1/supervisor/resumeAll"})]}),"\n",(0,r.jsx)(n.h4,{id:"responses-13",children:"Responses"}),"\n",(0,r.jsx)(a.A,{children:(0,r.jsx)(l.A,{value:"50",label:"200 SUCCESS",children:(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Successfully resumed all supervisors"})})})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h4,{id:"sample-request-13",children:"Sample request"}),"\n",(0,r.jsxs)(a.A,{children:[(0,r.jsx)(l.A,{value:"51",label:"cURL",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:'curl --request POST "http://ROUTER_IP:ROUTER_PORT/druid/indexer/v1/supervisor/resumeAll"\n'})})}),(0,r.jsx)(l.A,{value:"52",label:"HTTP",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-HTTP",children:"POST /druid/indexer/v1/supervisor/resumeAll HTTP/1.1\nHost: http://ROUTER_IP:ROUTER_PORT\n"})})})]}),"\n",(0,r.jsx)(n.h4,{id:"sample-response-13",children:"Sample response"}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"View the response"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "status": "success"\n}\n'})})]}),"\n",(0,r.jsx)(n.h3,{id:"reset-a-supervisor",children:"Reset a supervisor"}),"\n",(0,r.jsx)(n.p,{children:"The supervisor must be running for this endpoint to be available."}),"\n",(0,r.jsxs)(n.p,{children:["Resets the specified supervisor. This endpoint clears supervisor metadata, prompting the supervisor to resume data reading. The supervisor restarts from the earliest or latest available position, depending on the value of the ",(0,r.jsx)(n.code,{children:"useEarliestOffset"})," property.\nAfter clearing all stored offsets, the supervisor kills and recreates active tasks,\nso that tasks begin reading from valid positions."]}),"\n",(0,r.jsx)(n.p,{children:"Use this endpoint to recover from a stopped state due to missing offsets. Use this endpoint with caution as it may result in skipped messages and lead to data loss or duplicate data."}),"\n",(0,r.jsxs)(n.p,{children:["The indexing service keeps track of the latest persisted offsets to provide exactly-once ingestion guarantees across tasks. Subsequent tasks must start reading from where the previous task completed for Druid to accept the generated segments. If the messages at the expected starting offsets are no longer available, the supervisor refuses to start and in-flight tasks fail. Possible causes for missing messages include the message retention period elapsing or the topic being removed and re-created. Use the ",(0,r.jsx)(n.code,{children:"reset"})," endpoint to recover from this condition."]}),"\n",(0,r.jsx)(n.h4,{id:"url-14",children:"URL"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"POST"})," ",(0,r.jsx)(n.code,{children:"/druid/indexer/v1/supervisor/{supervisorId}/reset"})]}),"\n",(0,r.jsx)(n.h4,{id:"responses-14",children:"Responses"}),"\n",(0,r.jsxs)(a.A,{children:[(0,r.jsx)(l.A,{value:"53",label:"200 SUCCESS",children:(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Successfully reset supervisor"})})}),(0,r.jsx)(l.A,{value:"54",label:"404 NOT FOUND",children:(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Invalid supervisor ID"})})})]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h4,{id:"sample-request-14",children:"Sample request"}),"\n",(0,r.jsxs)(n.p,{children:["The following example shows how to reset a supervisor with the name ",(0,r.jsx)(n.code,{children:"social_media"}),"."]}),"\n",(0,r.jsxs)(a.A,{children:[(0,r.jsx)(l.A,{value:"55",label:"cURL",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:'curl --request POST "http://ROUTER_IP:ROUTER_PORT/druid/indexer/v1/supervisor/social_media/reset"\n'})})}),(0,r.jsx)(l.A,{value:"56",label:"HTTP",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-HTTP",children:"POST /druid/indexer/v1/supervisor/social_media/reset HTTP/1.1\nHost: http://ROUTER_IP:ROUTER_PORT\n"})})})]}),"\n",(0,r.jsx)(n.h4,{id:"sample-response-14",children:"Sample response"}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"View the response"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "id": "social_media"\n}\n'})})]}),"\n",(0,r.jsx)(n.h3,{id:"reset-offsets-for-a-supervisor",children:"Reset offsets for a supervisor"}),"\n",(0,r.jsx)(n.p,{children:"The supervisor must be running for this endpoint to be available."}),"\n",(0,r.jsx)(n.p,{children:"Resets the specified offsets for partitions without resetting the entire set."}),"\n",(0,r.jsx)(n.p,{children:"This endpoint clears only the stored offsets, prompting the supervisor to resume reading data from the specified offsets.\nIf there are no stored offsets, the specified offsets are set in the metadata store."}),"\n",(0,r.jsx)(n.p,{children:"After resetting stored offsets, the supervisor kills and recreates any active tasks pertaining to the specified partitions,\nso that tasks begin reading specified offsets. For partitions that are not specified in this operation, the supervisor resumes from the last stored offset."}),"\n",(0,r.jsx)(n.p,{children:"Use this endpoint with caution. It can cause skipped messages, leading to data loss or duplicate data."}),"\n",(0,r.jsx)(n.h4,{id:"url-15",children:"URL"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"POST"})," ",(0,r.jsx)(n.code,{children:"/druid/indexer/v1/supervisor/{supervisorId}/resetOffsets"})]}),"\n",(0,r.jsx)(n.h4,{id:"responses-15",children:"Responses"}),"\n",(0,r.jsxs)(a.A,{children:[(0,r.jsx)(l.A,{value:"1",label:"200 SUCCESS",children:(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Successfully reset offsets"})})}),(0,r.jsx)(l.A,{value:"2",label:"404 NOT FOUND",children:(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Invalid supervisor ID"})})})]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h4,{id:"reset-offsets-metadata",children:"Reset Offsets Metadata"}),"\n",(0,r.jsx)(n.p,{children:"This section presents the structure and details of the reset offsets metadata payload."}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Field"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"}),(0,r.jsx)(n.th,{children:"Required"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"type"})}),(0,r.jsx)(n.td,{children:"String"}),(0,r.jsxs)(n.td,{children:["The type of reset offsets metadata payload. It must match the supervisor's ",(0,r.jsx)(n.code,{children:"type"}),". Possible values: ",(0,r.jsx)(n.code,{children:"kafka"})," or ",(0,r.jsx)(n.code,{children:"kinesis"}),"."]}),(0,r.jsx)(n.td,{children:"Yes"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"partitions"})}),(0,r.jsx)(n.td,{children:"Object"}),(0,r.jsx)(n.td,{children:"An object representing the reset metadata. See below for details."}),(0,r.jsx)(n.td,{children:"Yes"})]})]})]}),"\n",(0,r.jsx)(n.h4,{id:"partitions",children:"Partitions"}),"\n",(0,r.jsxs)(n.p,{children:["The following table defines the fields within the ",(0,r.jsx)(n.code,{children:"partitions"})," object in the reset offsets metadata payload."]}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Field"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"}),(0,r.jsx)(n.th,{children:"Required"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"type"})}),(0,r.jsx)(n.td,{children:"String"}),(0,r.jsxs)(n.td,{children:["Must be set as ",(0,r.jsx)(n.code,{children:"end"}),".  Indicates the end sequence numbers for the reset offsets."]}),(0,r.jsx)(n.td,{children:"Yes"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"stream"})}),(0,r.jsx)(n.td,{children:"String"}),(0,r.jsx)(n.td,{children:"The stream to be reset. It must be a valid stream consumed by the supervisor."}),(0,r.jsx)(n.td,{children:"Yes"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"partitionOffsetMap"})}),(0,r.jsx)(n.td,{children:"Object"}),(0,r.jsx)(n.td,{children:"A map of partitions to corresponding offsets for the stream to be reset."}),(0,r.jsx)(n.td,{children:"Yes"})]})]})]}),"\n",(0,r.jsx)(n.h4,{id:"sample-request-15",children:"Sample request"}),"\n",(0,r.jsxs)(n.p,{children:["The following example shows how to reset offsets for a Kafka supervisor with the name ",(0,r.jsx)(n.code,{children:"social_media"}),". For example, the supervisor is reading from a Kafka topic ",(0,r.jsx)(n.code,{children:"ads_media_stream"})," and has the stored offsets: ",(0,r.jsx)(n.code,{children:'{"0": 0, "1": 10, "2": 20, "3": 40}'}),"."]}),"\n",(0,r.jsxs)(a.A,{children:[(0,r.jsx)(l.A,{value:"3",label:"cURL",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:'curl --request POST "http://ROUTER_IP:ROUTER_PORT/druid/indexer/v1/supervisor/social_media/resetOffsets"\n--header \'Content-Type: application/json\'\n--data-raw \'{"type":"kafka","partitions":{"type":"end","stream":"ads_media_stream","partitionOffsetMap":{"0":100, "2": 650}}}\'\n'})})}),(0,r.jsxs)(l.A,{value:"4",label:"HTTP",children:[(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-HTTP",children:'POST /druid/indexer/v1/supervisor/social_media/resetOffsets HTTP/1.1\nHost: http://ROUTER_IP:ROUTER_PORT\nContent-Type: application/json\n\n{\n  "type": "kafka",\n  "partitions": {\n    "type": "end",\n    "stream": "ads_media_stream",\n    "partitionOffsetMap": {\n      "0": 100,\n      "2": 650\n    }\n  }\n}\n'})}),(0,r.jsxs)(n.p,{children:["The example operation resets offsets only for partitions ",(0,r.jsx)(n.code,{children:"0"})," and ",(0,r.jsx)(n.code,{children:"2"})," to 100 and 650 respectively. After a successful reset,\nwhen the supervisor's tasks restart, they resume reading from ",(0,r.jsx)(n.code,{children:'{"0": 100, "1": 10, "2": 650, "3": 40}'}),"."]})]})]}),"\n",(0,r.jsx)(n.h4,{id:"sample-response-15",children:"Sample response"}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"View the response"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "id": "social_media"\n}\n'})})]}),"\n",(0,r.jsx)(n.h3,{id:"terminate-a-supervisor",children:"Terminate a supervisor"}),"\n",(0,r.jsx)(n.p,{children:"Terminates a supervisor and its associated indexing tasks, triggering the publishing of their segments. When you terminate a supervisor, Druid places a tombstone marker in the metadata store to prevent reloading on restart."}),"\n",(0,r.jsx)(n.p,{children:"The terminated supervisor still exists in the metadata store and its history can be retrieved."}),"\n",(0,r.jsx)(n.h4,{id:"url-16",children:"URL"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"POST"})," ",(0,r.jsx)(n.code,{children:"/druid/indexer/v1/supervisor/{supervisorId}/terminate"})]}),"\n",(0,r.jsx)(n.h4,{id:"responses-16",children:"Responses"}),"\n",(0,r.jsxs)(a.A,{children:[(0,r.jsx)(l.A,{value:"49",label:"200 SUCCESS",children:(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Successfully terminated a supervisor"})})}),(0,r.jsx)(l.A,{value:"50",label:"404 NOT FOUND",children:(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Invalid supervisor ID or supervisor not running"})})})]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h4,{id:"sample-request-16",children:"Sample request"}),"\n",(0,r.jsxs)(a.A,{children:[(0,r.jsx)(l.A,{value:"51",label:"cURL",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:'curl --request POST "http://ROUTER_IP:ROUTER_PORT/druid/indexer/v1/supervisor/social_media/terminate"\n'})})}),(0,r.jsx)(l.A,{value:"52",label:"HTTP",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-HTTP",children:"POST /druid/indexer/v1/supervisor/social_media/terminate HTTP/1.1\nHost: http://ROUTER_IP:ROUTER_PORT\n"})})})]}),"\n",(0,r.jsx)(n.h4,{id:"sample-response-16",children:"Sample response"}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"View the response"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "id": "social_media"\n}\n'})})]}),"\n",(0,r.jsx)(n.h3,{id:"terminate-all-supervisors",children:"Terminate all supervisors"}),"\n",(0,r.jsxs)(n.p,{children:["Terminates all supervisors. Terminated supervisors still exist in the metadata store and their history can be retrieved. Note that this endpoint returns an HTTP ",(0,r.jsx)(n.code,{children:"200 Success"})," code even if there are no supervisors or running supervisors to terminate."]}),"\n",(0,r.jsx)(n.h4,{id:"url-17",children:"URL"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"POST"})," ",(0,r.jsx)(n.code,{children:"/druid/indexer/v1/supervisor/terminateAll"})]}),"\n",(0,r.jsx)(n.h4,{id:"responses-17",children:"Responses"}),"\n",(0,r.jsx)(a.A,{children:(0,r.jsx)(l.A,{value:"53",label:"200 SUCCESS",children:(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Successfully terminated all supervisors"})})})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h4,{id:"sample-request-17",children:"Sample request"}),"\n",(0,r.jsxs)(a.A,{children:[(0,r.jsx)(l.A,{value:"54",label:"cURL",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:'curl --request POST "http://ROUTER_IP:ROUTER_PORT/druid/indexer/v1/supervisor/terminateAll"\n'})})}),(0,r.jsx)(l.A,{value:"55",label:"HTTP",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-HTTP",children:"POST /druid/indexer/v1/supervisor/terminateAll HTTP/1.1\nHost: http://ROUTER_IP:ROUTER_PORT\n"})})})]}),"\n",(0,r.jsx)(n.h4,{id:"sample-response-17",children:"Sample response"}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"View the response"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "status": "success"\n}\n'})})]}),"\n",(0,r.jsx)(n.h3,{id:"handoff-task-groups-for-a-supervisor-early",children:"Handoff task groups for a supervisor early"}),"\n",(0,r.jsx)(n.p,{children:"Trigger handoff for specified task groups of a supervisor early. This is a best effort API and makes no guarantees of handoff execution"}),"\n",(0,r.jsx)(n.h4,{id:"url-18",children:"URL"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"POST"})," ",(0,r.jsx)(n.code,{children:"/druid/indexer/v1/supervisor/{supervisorId}/taskGroups/handoff"})]}),"\n",(0,r.jsx)(n.h4,{id:"sample-request-18",children:"Sample request"}),"\n",(0,r.jsxs)(n.p,{children:["The following example shows how to handoff task groups for a supervisor with the name ",(0,r.jsx)(n.code,{children:"social_media"})," and has the task groups: ",(0,r.jsx)(n.code,{children:"1,2,3"}),"."]}),"\n",(0,r.jsxs)(a.A,{children:[(0,r.jsx)(l.A,{value:"3",label:"cURL",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"curl --request POST \"http://ROUTER_IP:ROUTER_PORT/druid/indexer/v1/supervisor/social_media/taskGroups/handoff\"\n--header 'Content-Type: application/json'\n--data-raw '{\"taskGroupIds\": [1, 2, 3]}'\n"})})}),(0,r.jsx)(l.A,{value:"4",label:"HTTP",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-HTTP",children:'POST /druid/indexer/v1/supervisor/social_media/taskGroups/handoff HTTP/1.1\nHost: http://ROUTER_IP:ROUTER_PORT\nContent-Type: application/json\n\n{\n  "taskGroupIds": [1, 2, 3],\n}\n'})})})]}),"\n",(0,r.jsx)(n.h4,{id:"sample-response-18",children:"Sample response"}),"\n",(0,r.jsx)(s,{children:(0,r.jsxs)(n.p,{children:[(0,r.jsx)("summary",{children:"View the response"}),"\n(empty response)"]})}),"\n",(0,r.jsx)(n.h3,{id:"shut-down-a-supervisor",children:"Shut down a supervisor"}),"\n",(0,r.jsxs)(n.p,{children:["Shuts down a supervisor. This endpoint is deprecated and will be removed in future releases. Use the equivalent ",(0,r.jsx)(n.a,{href:"#terminate-a-supervisor",children:"terminate"})," endpoint instead."]}),"\n",(0,r.jsx)(n.h4,{id:"url-19",children:"URL"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"POST"})," ",(0,r.jsx)(n.code,{children:"/druid/indexer/v1/supervisor/{supervisorId}/shutdown"})]})]})}function m(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>l});var i=s(96540);const r={},t=i.createContext(r);function a(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(t.Provider,{value:n},e.children)}},65537:(e,n,s)=>{s.d(n,{A:()=>S});var i=s(96540),r=s(18215),t=s(65627),a=s(56347),l=s(50372),o=s(30604),d=s(11861),c=s(78749);function u(e){var n,s;return null!=(n=null==(s=i.Children.toArray(e).filter((function(e){return"\n"!==e})).map((function(e){if(!e||(0,i.isValidElement)(e)&&((n=e.props)&&"object"==typeof n&&"value"in n))return e;var n;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))?void 0:s.filter(Boolean))?n:[]}function p(e){var n=e.values,s=e.children;return(0,i.useMemo)((function(){var e=null!=n?n:function(e){return u(e).map((function(e){var n=e.props;return{value:n.value,label:n.label,attributes:n.attributes,default:n.default}}))}(s);return function(e){var n=(0,d.XI)(e,(function(e,n){return e.value===n.value}));if(n.length>0)throw new Error('Docusaurus error: Duplicate values "'+n.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[n,s])}function m(e){var n=e.value;return e.tabValues.some((function(e){return e.value===n}))}function h(e){var n=e.queryString,s=void 0!==n&&n,r=e.groupId,t=(0,a.W6)(),l=function(e){var n=e.queryString,s=void 0!==n&&n,i=e.groupId;if("string"==typeof s)return s;if(!1===s)return null;if(!0===s&&!i)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=i?i:null}({queryString:s,groupId:r});return[(0,o.aZ)(l),(0,i.useCallback)((function(e){if(l){var n=new URLSearchParams(t.location.search);n.set(l,e),t.replace(Object.assign({},t.location,{search:n.toString()}))}}),[l,t])]}function x(e){var n,s,r,t,a=e.defaultValue,o=e.queryString,d=void 0!==o&&o,u=e.groupId,x=p(e),f=(0,i.useState)((function(){return function(e){var n,s=e.defaultValue,i=e.tabValues;if(0===i.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(s){if(!m({value:s,tabValues:i}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+s+'" but none of its children has the corresponding value. Available values are: '+i.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return s}var r=null!=(n=i.find((function(e){return e.default})))?n:i[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:a,tabValues:x})})),g=f[0],v=f[1],j=h({queryString:d,groupId:u}),T=j[0],R=j[1],S=(n=function(e){return e?"docusaurus.tab."+e:null}({groupId:u}.groupId),s=(0,c.Dv)(n),r=s[0],t=s[1],[r,(0,i.useCallback)((function(e){n&&t.set(e)}),[n,t])]),y=S[0],P=S[1],E=function(){var e=null!=T?T:y;return m({value:e,tabValues:x})?e:null}();return(0,l.A)((function(){E&&v(E)}),[E]),{selectedValue:g,selectValue:(0,i.useCallback)((function(e){if(!m({value:e,tabValues:x}))throw new Error("Can't select invalid tab value="+e);v(e),R(e),P(e)}),[R,P,x]),tabValues:x}}var f=s(9136);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var v=s(74848);function j(e){var n=e.className,s=e.block,i=e.selectedValue,a=e.selectValue,l=e.tabValues,o=[],d=(0,t.a_)().blockElementScrollPositionUntilNextRender,c=function(e){var n=e.currentTarget,s=o.indexOf(n),r=l[s].value;r!==i&&(d(n),a(r))},u=function(e){var n,s=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":var i,r=o.indexOf(e.currentTarget)+1;s=null!=(i=o[r])?i:o[0];break;case"ArrowLeft":var t,a=o.indexOf(e.currentTarget)-1;s=null!=(t=o[a])?t:o[o.length-1]}null==(n=s)||n.focus()};return(0,v.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":s},n),children:l.map((function(e){var n=e.value,s=e.label,t=e.attributes;return(0,v.jsx)("li",Object.assign({role:"tab",tabIndex:i===n?0:-1,"aria-selected":i===n,ref:function(e){o.push(e)},onKeyDown:u,onClick:c},t,{className:(0,r.A)("tabs__item",g.tabItem,null==t?void 0:t.className,{"tabs__item--active":i===n}),children:null!=s?s:n}),n)}))})}function T(e){var n=e.lazy,s=e.children,t=e.selectedValue,a=(Array.isArray(s)?s:[s]).filter(Boolean);if(n){var l=a.find((function(e){return e.props.value===t}));return l?(0,i.cloneElement)(l,{className:(0,r.A)("margin-top--md",l.props.className)}):null}return(0,v.jsx)("div",{className:"margin-top--md",children:a.map((function(e,n){return(0,i.cloneElement)(e,{key:n,hidden:e.props.value!==t})}))})}function R(e){var n=x(e);return(0,v.jsxs)("div",{className:(0,r.A)("tabs-container",g.tabList),children:[(0,v.jsx)(j,Object.assign({},n,e)),(0,v.jsx)(T,Object.assign({},n,e))]})}function S(e){var n=(0,f.A)();return(0,v.jsx)(R,Object.assign({},e,{children:u(e.children)}),String(n))}},79329:(e,n,s)=>{s.d(n,{A:()=>a});s(96540);var i=s(18215);const r={tabItem:"tabItem_Ymn6"};var t=s(74848);function a(e){var n=e.children,s=e.hidden,a=e.className;return(0,t.jsx)("div",{role:"tabpanel",className:(0,i.A)(r.tabItem,a),hidden:s,children:n})}}}]);