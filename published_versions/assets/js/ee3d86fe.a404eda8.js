"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[2921],{28453:(e,n,i)=>{i.d(n,{R:()=>d,x:()=>o});var s=i(96540);const t={},r=s.createContext(t);function d(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),s.createElement(r.Provider,{value:n},e.children)}},44396:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>d,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"querying/geo","title":"Spatial filters","description":"\x3c!--","source":"@site/docs/33.0.0/querying/geo.md","sourceDirName":"querying","slug":"/querying/geo","permalink":"/docs/33.0.0/querying/geo","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"geo","title":"Spatial filters"},"sidebar":"docs","previous":{"title":"Virtual columns","permalink":"/docs/33.0.0/querying/virtual-columns"},"next":{"title":"Overview","permalink":"/docs/33.0.0/api-reference/"}}');var t=i(74848),r=i(28453);const d={id:"geo",title:"Spatial filters"},o=void 0,a={},l=[{value:"Spatial indexing",id:"spatial-indexing",level:2},{value:"Spatial filters",id:"spatial-filters",level:2},{value:"Bound types",id:"bound-types",level:3},{value:"Rectangular",id:"rectangular",level:4},{value:"Radius",id:"radius",level:4},{value:"Polygon",id:"polygon",level:4}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsxs)(n.p,{children:["Apache Druid supports two query languages: ",(0,t.jsx)(n.a,{href:"/docs/33.0.0/querying/sql",children:"Druid SQL"})," and ",(0,t.jsx)(n.a,{href:"/docs/33.0.0/querying/",children:"native queries"}),".\nThis document describes a feature that is only available in the native language."]})}),"\n",(0,t.jsx)(n.p,{children:"Apache Druid supports filtering spatially indexed columns based on an origin and a bound."}),"\n",(0,t.jsxs)(n.p,{children:["This topic explains how to ingest and query spatial filters.\nFor information on other filters supported by Druid, see ",(0,t.jsx)(n.a,{href:"/docs/33.0.0/querying/filters",children:"Query filters"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"spatial-indexing",children:"Spatial indexing"}),"\n",(0,t.jsx)(n.p,{children:"Spatial indexing refers to ingesting data of a spatial data type, such as geometry or geography, into Druid."}),"\n",(0,t.jsxs)(n.p,{children:["Spatial dimensions are string columns that contain coordinates separated by a comma.\nIn the ingestion spec, you configure spatial dimensions in the ",(0,t.jsx)(n.code,{children:"dimensionsSpec"})," object of the ",(0,t.jsx)(n.code,{children:"dataSchema"})," component."]}),"\n",(0,t.jsxs)(n.p,{children:["You can provide spatial dimensions in any of the ",(0,t.jsx)(n.a,{href:"/docs/33.0.0/ingestion/data-formats",children:"data formats"})," supported by Druid.\nThe following example shows an ingestion spec with a spatial dimension named ",(0,t.jsx)(n.code,{children:"coordinates"}),", which is constructed from the input fields ",(0,t.jsx)(n.code,{children:"x"})," and ",(0,t.jsx)(n.code,{children:"y"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "type": "hadoop",\n  "dataSchema": {\n    "dataSource": "DatasourceName",\n    "parser": {\n      "type": "string",\n      "parseSpec": {\n        "format": "json",\n        "timestampSpec": {\n          "column": "timestamp",\n          "format": "auto"\n        },\n        "dimensionsSpec": {\n          "dimensions": [\n            {\n              "type": "double",\n              "name": "x"\n            },\n            {\n              "type": "double",\n              "name": "y"\n            }\n          ],\n          "spatialDimensions": [\n            {\n              "dimName": "coordinates",\n              "dims": [\n                "x",\n                "y"\n              ]\n            }\n          ]\n        }\n      }\n    }\n  }\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Each spatial dimension object in the ",(0,t.jsx)(n.code,{children:"spatialDimensions"})," array is defined by the following fields:"]}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Property"}),(0,t.jsx)(n.th,{children:"Description"}),(0,t.jsx)(n.th,{children:"Required"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"dimName"})}),(0,t.jsx)(n.td,{children:"The name of a spatial dimension. You can construct a spatial dimension from other dimensions or it may already exist as part of an event. If a spatial dimension already exists, it must be an array of coordinate values."}),(0,t.jsx)(n.td,{children:"yes"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"dims"})}),(0,t.jsx)(n.td,{children:"The list of dimension names that comprise the spatial dimension."}),(0,t.jsx)(n.td,{children:"no"})]})]})]}),"\n",(0,t.jsxs)(n.p,{children:["For information on how to use the ingestion spec to configure ingestion, see ",(0,t.jsx)(n.a,{href:"/docs/33.0.0/ingestion/ingestion-spec",children:"Ingestion spec reference"}),".\nFor general information on loading data in Druid, see ",(0,t.jsx)(n.a,{href:"/docs/33.0.0/ingestion/",children:"Ingestion"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"spatial-filters",children:"Spatial filters"}),"\n",(0,t.jsxs)(n.p,{children:["A ",(0,t.jsx)(n.a,{href:"/docs/33.0.0/querying/filters",children:"filter"})," is a JSON object indicating which rows of data should be included in the computation for a query.\nYou can filter on spatial structures, such as rectangles and polygons, using the spatial filter."]}),"\n",(0,t.jsx)(n.p,{children:"Spatial filters have the following structure:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'"filter": {\n  "type": "spatial",\n  "dimension": <name_of_spatial_dimension>,\n  "bound": <bound_type>\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:"The following example shows a spatial filter with a rectangular bound type:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'"filter" : {\n    "type": "spatial",\n    "dimension": "spatialDim",\n    "bound": {\n        "type": "rectangular",\n        "minCoords": [10.0, 20.0],\n        "maxCoords": [30.0, 40.0]\n    }\n'})}),"\n",(0,t.jsxs)(n.p,{children:["The order of the dimension coordinates in the spatial filter must be equal to the order of the dimension coordinates in the ",(0,t.jsx)(n.code,{children:"spatialDimensions"})," array."]}),"\n",(0,t.jsx)(n.h3,{id:"bound-types",children:"Bound types"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"bound"})," property of the spatial filter object lets you filter on ranges of dimension values.\nYou can define rectangular, radius, and polygon filter bounds."]}),"\n",(0,t.jsx)(n.h4,{id:"rectangular",children:"Rectangular"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"rectangular"})," bound has the following elements:"]}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Property"}),(0,t.jsx)(n.th,{children:"Description"}),(0,t.jsx)(n.th,{children:"Required"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"minCoords"})}),(0,t.jsx)(n.td,{children:"The list of minimum dimension coordinates in the form [x, y]"}),(0,t.jsx)(n.td,{children:"yes"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"maxCoords"})}),(0,t.jsx)(n.td,{children:"The list of maximum dimension coordinates in the form [x, y]"}),(0,t.jsx)(n.td,{children:"yes"})]})]})]}),"\n",(0,t.jsx)(n.h4,{id:"radius",children:"Radius"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"radius"})," bound has the following elements:"]}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Property"}),(0,t.jsx)(n.th,{children:"Description"}),(0,t.jsx)(n.th,{children:"Required"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"coords"})}),(0,t.jsx)(n.td,{children:"Center coordinates in the form [x, y]"}),(0,t.jsx)(n.td,{children:"yes"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"radius"})}),(0,t.jsx)(n.td,{children:"The float radius value according to specified unit"}),(0,t.jsx)(n.td,{children:"yes"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"radiusUnit"})}),(0,t.jsx)(n.td,{children:"String value of radius unit in lowercase, default value is 'euclidean'. Allowed units are euclidean, meters, miles, kilometers."}),(0,t.jsx)(n.td,{children:"no"})]})]})]}),"\n",(0,t.jsx)(n.h4,{id:"polygon",children:"Polygon"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"polygon"})," bound has the following elements:"]}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Property"}),(0,t.jsx)(n.th,{children:"Description"}),(0,t.jsx)(n.th,{children:"Required"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"abscissa"})}),(0,t.jsx)(n.td,{children:"Horizontal coordinates for the corners of the polygon"}),(0,t.jsx)(n.td,{children:"yes"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"ordinate"})}),(0,t.jsx)(n.td,{children:"Vertical coordinates for the corners of the polygon"}),(0,t.jsx)(n.td,{children:"yes"})]})]})]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}}}]);