"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[3288],{28453:(e,n,r)=>{r.d(n,{R:()=>l,x:()=>t});var i=r(96540);const s={},a=i.createContext(s);function l(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),i.createElement(a.Provider,{value:n},e.children)}},57943:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>u});const i=JSON.parse('{"id":"api-reference/dynamic-configuration-api","title":"Dynamic configuration API","description":"\x3c!--","source":"@site/docs/latest/api-reference/dynamic-configuration-api.md","sourceDirName":"api-reference","slug":"/api-reference/dynamic-configuration-api","permalink":"/docs/latest/api-reference/dynamic-configuration-api","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"dynamic-configuration-api","title":"Dynamic configuration API","sidebar_label":"Dynamic configuration"},"sidebar":"docs","previous":{"title":"Service status","permalink":"/docs/latest/api-reference/service-status-api"},"next":{"title":"Legacy metadata","permalink":"/docs/latest/api-reference/legacy-metadata-api"}}');var s=r(74848),a=r(28453),l=r(65537),t=r(79329);const o={id:"dynamic-configuration-api",title:"Dynamic configuration API",sidebar_label:"Dynamic configuration"},c=void 0,d={},u=[{value:"Coordinator dynamic configuration",id:"coordinator-dynamic-configuration",level:2},{value:"Get dynamic configuration",id:"get-dynamic-configuration",level:3},{value:"URL",id:"url",level:4},{value:"Responses",id:"responses",level:4},{value:"Sample request",id:"sample-request",level:4},{value:"Sample response",id:"sample-response",level:4},{value:"Update dynamic configuration",id:"update-dynamic-configuration",level:3},{value:"URL",id:"url-1",level:4},{value:"Header parameters",id:"header-parameters",level:4},{value:"Responses",id:"responses-1",level:4},{value:"Sample request",id:"sample-request-1",level:4},{value:"Sample response",id:"sample-response-1",level:4},{value:"Get dynamic configuration history",id:"get-dynamic-configuration-history",level:3},{value:"URL",id:"url-2",level:4},{value:"Query parameters",id:"query-parameters",level:4},{value:"Responses",id:"responses-2",level:4},{value:"Sample request",id:"sample-request-2",level:4},{value:"Sample response",id:"sample-response-2",level:4},{value:"Overlord dynamic configuration",id:"overlord-dynamic-configuration",level:2},{value:"Get dynamic configuration",id:"get-dynamic-configuration-1",level:3},{value:"URL",id:"url-3",level:4},{value:"Responses",id:"responses-3",level:4},{value:"Sample request",id:"sample-request-3",level:4},{value:"Sample response",id:"sample-response-3",level:4},{value:"Update dynamic configuration",id:"update-dynamic-configuration-1",level:3},{value:"URL",id:"url-4",level:4},{value:"Header parameters",id:"header-parameters-1",level:4},{value:"Responses",id:"responses-4",level:4},{value:"Sample request",id:"sample-request-4",level:4},{value:"Sample response",id:"sample-response-4",level:4},{value:"Get dynamic configuration history",id:"get-dynamic-configuration-history-1",level:3},{value:"URL",id:"url-5",level:4},{value:"Query parameters",id:"query-parameters-1",level:4},{value:"Responses",id:"responses-5",level:4},{value:"Sample request",id:"sample-request-5",level:4},{value:"Sample response",id:"sample-response-5",level:4},{value:"Get an array of worker nodes in the cluster",id:"get-an-array-of-worker-nodes-in-the-cluster",level:3},{value:"Responses",id:"responses-6",level:4},{value:"Sample request",id:"sample-request-6",level:4},{value:"Sample response",id:"sample-response-6",level:4},{value:"Get scaling events",id:"get-scaling-events",level:3},{value:"URL",id:"url-6",level:4},{value:"Responses",id:"responses-7",level:4},{value:"Sample request",id:"sample-request-7",level:4},{value:"Sample response",id:"sample-response-7",level:4}];function h(e){const n={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",hr:"hr",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components},{Details:r}=n;return r||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:["This document describes the API endpoints to retrieve and manage dynamic configurations for the ",(0,s.jsx)(n.a,{href:"/docs/latest/design/coordinator",children:"Coordinator"})," and ",(0,s.jsx)(n.a,{href:"/docs/latest/design/overlord",children:"Overlord"})," in Apache Druid."]}),"\n",(0,s.jsxs)(n.p,{children:["In this topic, ",(0,s.jsx)(n.code,{children:"http://ROUTER_IP:ROUTER_PORT"})," is a placeholder for your Router service address and port.\nReplace it with the information for your deployment.\nFor example, use ",(0,s.jsx)(n.code,{children:"http://localhost:8888"})," for quickstart deployments."]}),"\n",(0,s.jsx)(n.h2,{id:"coordinator-dynamic-configuration",children:"Coordinator dynamic configuration"}),"\n",(0,s.jsxs)(n.p,{children:["The Coordinator has dynamic configurations to tune certain behavior on the fly, without requiring a service restart.\nFor information on the supported properties, see ",(0,s.jsx)(n.a,{href:"/docs/latest/configuration/#dynamic-configuration",children:"Coordinator dynamic configuration"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"get-dynamic-configuration",children:"Get dynamic configuration"}),"\n",(0,s.jsx)(n.p,{children:"Retrieves the current Coordinator dynamic configuration. Returns a JSON object with the dynamic configuration properties."}),"\n",(0,s.jsx)(n.h4,{id:"url",children:"URL"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"GET"})," ",(0,s.jsx)(n.code,{children:"/druid/coordinator/v1/config"})]}),"\n",(0,s.jsx)(n.h4,{id:"responses",children:"Responses"}),"\n",(0,s.jsx)(l.A,{children:(0,s.jsx)(t.A,{value:"1",label:"200 SUCCESS",children:(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"Successfully retrieved dynamic configuration"})})})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h4,{id:"sample-request",children:"Sample request"}),"\n",(0,s.jsxs)(l.A,{children:[(0,s.jsx)(t.A,{value:"2",label:"cURL",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:'curl "http://ROUTER_IP:ROUTER_PORT/druid/coordinator/v1/config"\n'})})}),(0,s.jsx)(t.A,{value:"3",label:"HTTP",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-HTTP",children:"GET /druid/coordinator/v1/config HTTP/1.1\nHost: http://ROUTER_IP:ROUTER_PORT\n"})})})]}),"\n",(0,s.jsx)(n.h4,{id:"sample-response",children:"Sample response"}),"\n",(0,s.jsxs)(r,{children:[(0,s.jsx)("summary",{children:"View the response"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n    "millisToWaitBeforeDeleting": 900000,\n    "maxSegmentsToMove": 100,\n    "replicantLifetime": 15,\n    "replicationThrottleLimit": 500,\n    "balancerComputeThreads": 1,\n    "killDataSourceWhitelist": [],\n    "killPendingSegmentsSkipList": [],\n    "maxSegmentsInNodeLoadingQueue": 500,\n    "decommissioningNodes": [],\n    "decommissioningMaxPercentOfMaxSegmentsToMove": 70,\n    "pauseCoordination": false,\n    "replicateAfterLoadTimeout": false,\n    "maxNonPrimaryReplicantsToLoad": 2147483647,\n    "useRoundRobinSegmentAssignment": true,\n    "smartSegmentLoading": true,\n    "debugDimensions": null,\n    "turboLoadingNodes": []\n}\n'})})]}),"\n",(0,s.jsx)(n.h3,{id:"update-dynamic-configuration",children:"Update dynamic configuration"}),"\n",(0,s.jsxs)(n.p,{children:["Submits a JSON-based dynamic configuration spec to the Coordinator.\nFor information on the supported properties, see ",(0,s.jsx)(n.a,{href:"/docs/latest/configuration/#dynamic-configuration",children:"Dynamic configuration"}),"."]}),"\n",(0,s.jsx)(n.h4,{id:"url-1",children:"URL"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"POST"})," ",(0,s.jsx)(n.code,{children:"/druid/coordinator/v1/config"})]}),"\n",(0,s.jsx)(n.h4,{id:"header-parameters",children:"Header parameters"}),"\n",(0,s.jsxs)(n.p,{children:["The endpoint supports a set of optional header parameters to populate the ",(0,s.jsx)(n.code,{children:"author"})," and ",(0,s.jsx)(n.code,{children:"comment"})," fields in the configuration history."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"X-Druid-Author"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Type: String"}),"\n",(0,s.jsx)(n.li,{children:"Author of the configuration change."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"X-Druid-Comment"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Type: String"}),"\n",(0,s.jsx)(n.li,{children:"Description for the update."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"responses-1",children:"Responses"}),"\n",(0,s.jsx)(l.A,{children:(0,s.jsx)(t.A,{value:"4",label:"200 SUCCESS",children:(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"Successfully updated dynamic configuration"})})})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h4,{id:"sample-request-1",children:"Sample request"}),"\n",(0,s.jsxs)(l.A,{children:[(0,s.jsx)(t.A,{value:"5",label:"cURL",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:'curl "http://ROUTER_IP:ROUTER_PORT/druid/coordinator/v1/config" \\\n--header \'Content-Type: application/json\' \\\n--data \'{\n  "millisToWaitBeforeDeleting": 900000,\n  "maxSegmentsToMove": 5,\n  "percentOfSegmentsToConsiderPerMove": 100,\n  "useBatchedSegmentSampler": true,\n  "replicantLifetime": 15,\n  "replicationThrottleLimit": 10,\n  "balancerComputeThreads": 1,\n  "emitBalancingStats": true,\n  "killDataSourceWhitelist": [],\n  "killPendingSegmentsSkipList": [],\n  "maxSegmentsInNodeLoadingQueue": 100,\n  "decommissioningNodes": [],\n  "decommissioningMaxPercentOfMaxSegmentsToMove": 70,\n  "pauseCoordination": false,\n  "replicateAfterLoadTimeout": false,\n  "maxNonPrimaryReplicantsToLoad": 2147483647,\n  "useRoundRobinSegmentAssignment": true,\n  "turboLoadingNodes": []\n}\'\n'})})}),(0,s.jsx)(t.A,{value:"6",label:"HTTP",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-HTTP",children:'POST /druid/coordinator/v1/config HTTP/1.1\nHost: http://ROUTER_IP:ROUTER_PORT\nContent-Type: application/json\nContent-Length: 683\n\n{\n  "millisToWaitBeforeDeleting": 900000,\n  "maxSegmentsToMove": 5,\n  "percentOfSegmentsToConsiderPerMove": 100,\n  "useBatchedSegmentSampler": true,\n  "replicantLifetime": 15,\n  "replicationThrottleLimit": 10,\n  "balancerComputeThreads": 1,\n  "emitBalancingStats": true,\n  "killDataSourceWhitelist": [],\n  "killPendingSegmentsSkipList": [],\n  "maxSegmentsInNodeLoadingQueue": 100,\n  "decommissioningNodes": [],\n  "decommissioningMaxPercentOfMaxSegmentsToMove": 70,\n  "pauseCoordination": false,\n  "replicateAfterLoadTimeout": false,\n  "maxNonPrimaryReplicantsToLoad": 2147483647,\n  "useRoundRobinSegmentAssignment": true,\n  "turboLoadingNodes": []\n}\n'})})})]}),"\n",(0,s.jsx)(n.h4,{id:"sample-response-1",children:"Sample response"}),"\n",(0,s.jsxs)(n.p,{children:["A successful request returns an HTTP ",(0,s.jsx)(n.code,{children:"200 OK"})," message code and an empty response body."]}),"\n",(0,s.jsx)(n.h3,{id:"get-dynamic-configuration-history",children:"Get dynamic configuration history"}),"\n",(0,s.jsx)(n.p,{children:"Retrieves the history of changes to Coordinator dynamic configuration over an interval of time. Returns an empty array if there are no history records available."}),"\n",(0,s.jsx)(n.h4,{id:"url-2",children:"URL"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"GET"})," ",(0,s.jsx)(n.code,{children:"/druid/coordinator/v1/config/history"})]}),"\n",(0,s.jsx)(n.h4,{id:"query-parameters",children:"Query parameters"}),"\n",(0,s.jsx)(n.p,{children:"The endpoint supports a set of optional query parameters to filter results."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"interval"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Type: String"}),"\n",(0,s.jsxs)(n.li,{children:["Limit the results to the specified time interval in ISO 8601 format delimited with ",(0,s.jsx)(n.code,{children:"/"}),". For example, ",(0,s.jsx)(n.code,{children:"2023-07-13/2023-07-19"}),". The default interval is one week. You can change this period by setting ",(0,s.jsx)(n.code,{children:"druid.audit.manager.auditHistoryMillis"})," in the ",(0,s.jsx)(n.code,{children:"runtime.properties"})," file for the Coordinator."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"count"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Type: Integer"}),"\n",(0,s.jsxs)(n.li,{children:["Limit the number of results to the last ",(0,s.jsx)(n.code,{children:"n"})," entries."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"responses-2",children:"Responses"}),"\n",(0,s.jsx)(l.A,{children:(0,s.jsx)(t.A,{value:"7",label:"200 SUCCESS",children:(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"Successfully retrieved history"})})})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h4,{id:"sample-request-2",children:"Sample request"}),"\n",(0,s.jsxs)(n.p,{children:["The following example retrieves the dynamic configuration history between ",(0,s.jsx)(n.code,{children:"2022-07-13"})," and ",(0,s.jsx)(n.code,{children:"2024-07-19"}),". The response is limited to 10 entries."]}),"\n",(0,s.jsxs)(l.A,{children:[(0,s.jsx)(t.A,{value:"8",label:"cURL",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:'curl "http://ROUTER_IP:ROUTER_PORT/druid/coordinator/v1/config/history?interval=2022-07-13%2F2024-07-19&count=10"\n'})})}),(0,s.jsx)(t.A,{value:"9",label:"HTTP",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-HTTP",children:"GET /druid/coordinator/v1/config/history?interval=2022-07-13/2024-07-19&count=10 HTTP/1.1\nHost: http://ROUTER_IP:ROUTER_PORT\n"})})})]}),"\n",(0,s.jsx)(n.h4,{id:"sample-response-2",children:"Sample response"}),"\n",(0,s.jsxs)(r,{children:[(0,s.jsx)("summary",{children:"View the response"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'[\n    {\n        "key": "coordinator.config",\n        "type": "coordinator.config",\n        "auditInfo": {\n            "author": "",\n            "comment": "",\n            "ip": "127.0.0.1"\n        },\n        "payload": "{\\"millisToWaitBeforeDeleting\\":900000,\\"maxSegmentsToMove\\":5,\\"replicantLifetime\\":15,\\"replicationThrottleLimit\\":10,\\"balancerComputeThreads\\":1,\\"killDataSourceWhitelist\\":[],\\"killPendingSegmentsSkipList\\":[],\\"maxSegmentsInNodeLoadingQueue\\":100,\\"decommissioningNodes\\":[],\\"decommissioningMaxPercentOfMaxSegmentsToMove\\":70,\\"pauseCoordination\\":false,\\"replicateAfterLoadTimeout\\":false,\\"maxNonPrimaryReplicantsToLoad\\":2147483647,\\"useRoundRobinSegmentAssignment\\":true,\\"smartSegmentLoading\\":true,\\"debugDimensions\\":null,\\"decommissioningNodes\\":[]}",\n        "auditTime": "2023-10-03T20:59:51.622Z"\n    }\n]\n'})})]}),"\n",(0,s.jsx)(n.h2,{id:"overlord-dynamic-configuration",children:"Overlord dynamic configuration"}),"\n",(0,s.jsxs)(n.p,{children:["The Overlord has dynamic configurations to tune how Druid assigns tasks to workers.\nFor information on the supported properties, see ",(0,s.jsx)(n.a,{href:"/docs/latest/configuration/#overlord-dynamic-configuration",children:"Overlord dynamic configuration"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"get-dynamic-configuration-1",children:"Get dynamic configuration"}),"\n",(0,s.jsx)(n.p,{children:"Retrieves the current Overlord dynamic configuration.\nReturns a JSON object with the dynamic configuration properties.\nReturns an empty response body if there is no current Overlord dynamic configuration."}),"\n",(0,s.jsx)(n.h4,{id:"url-3",children:"URL"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"GET"})," ",(0,s.jsx)(n.code,{children:"/druid/indexer/v1/worker"})]}),"\n",(0,s.jsx)(n.h4,{id:"responses-3",children:"Responses"}),"\n",(0,s.jsx)(l.A,{children:(0,s.jsx)(t.A,{value:"10",label:"200 SUCCESS",children:(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"Successfully retrieved dynamic configuration"})})})}),"\n",(0,s.jsx)(n.h4,{id:"sample-request-3",children:"Sample request"}),"\n",(0,s.jsxs)(l.A,{children:[(0,s.jsx)(t.A,{value:"11",label:"cURL",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:'curl "http://ROUTER_IP:ROUTER_PORT/druid/indexer/v1/worker"\n'})})}),(0,s.jsx)(t.A,{value:"12",label:"HTTP",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-HTTP",children:"GET /druid/indexer/v1/worker HTTP/1.1\nHost: http://ROUTER_IP:ROUTER_PORT\n"})})})]}),"\n",(0,s.jsx)(n.h4,{id:"sample-response-3",children:"Sample response"}),"\n",(0,s.jsxs)(r,{children:[(0,s.jsx)("summary",{children:"View the response"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n    "type": "default",\n    "selectStrategy": {\n        "type": "fillCapacityWithCategorySpec",\n        "workerCategorySpec": {\n            "categoryMap": {},\n            "strong": true\n        }\n    },\n    "autoScaler": null\n}\n'})})]}),"\n",(0,s.jsx)(n.h3,{id:"update-dynamic-configuration-1",children:"Update dynamic configuration"}),"\n",(0,s.jsxs)(n.p,{children:["Submits a JSON-based dynamic configuration spec to the Overlord.\nFor information on the supported properties, see ",(0,s.jsx)(n.a,{href:"/docs/latest/configuration/#overlord-dynamic-configuration",children:"Overlord dynamic configuration"}),"."]}),"\n",(0,s.jsx)(n.h4,{id:"url-4",children:"URL"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"POST"})," ",(0,s.jsx)(n.code,{children:"/druid/indexer/v1/worker"})]}),"\n",(0,s.jsx)(n.h4,{id:"header-parameters-1",children:"Header parameters"}),"\n",(0,s.jsxs)(n.p,{children:["The endpoint supports a set of optional header parameters to populate the ",(0,s.jsx)(n.code,{children:"author"})," and ",(0,s.jsx)(n.code,{children:"comment"})," fields in the configuration history."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"X-Druid-Author"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Type: String"}),"\n",(0,s.jsx)(n.li,{children:"Author of the configuration change."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"X-Druid-Comment"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Type: String"}),"\n",(0,s.jsx)(n.li,{children:"Description for the update."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"responses-4",children:"Responses"}),"\n",(0,s.jsx)(l.A,{children:(0,s.jsx)(t.A,{value:"13",label:"200 SUCCESS",children:(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"Successfully updated dynamic configuration"})})})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h4,{id:"sample-request-4",children:"Sample request"}),"\n",(0,s.jsxs)(l.A,{children:[(0,s.jsx)(t.A,{value:"14",label:"cURL",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:'curl "http://ROUTER_IP:ROUTER_PORT/druid/indexer/v1/worker" \\\n--header \'Content-Type: application/json\' \\\n--data \'{\n  "type": "default",\n  "selectStrategy": {\n    "type": "fillCapacityWithCategorySpec",\n    "workerCategorySpec": {\n      "categoryMap": {},\n      "strong": true\n    }\n  },\n  "autoScaler": null\n}\'\n'})})}),(0,s.jsx)(t.A,{value:"15",label:"HTTP",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-HTTP",children:'POST /druid/indexer/v1/worker HTTP/1.1\nHost: http://ROUTER_IP:ROUTER_PORT\nContent-Type: application/json\nContent-Length: 196\n\n{\n  "type": "default",\n  "selectStrategy": {\n    "type": "fillCapacityWithCategorySpec",\n    "workerCategorySpec": {\n      "categoryMap": {},\n      "strong": true\n    }\n  },\n  "autoScaler": null\n}\n'})})})]}),"\n",(0,s.jsx)(n.h4,{id:"sample-response-4",children:"Sample response"}),"\n",(0,s.jsxs)(n.p,{children:["A successful request returns an HTTP ",(0,s.jsx)(n.code,{children:"200 OK"})," message code and an empty response body."]}),"\n",(0,s.jsx)(n.h3,{id:"get-dynamic-configuration-history-1",children:"Get dynamic configuration history"}),"\n",(0,s.jsx)(n.p,{children:"Retrieves the history of changes to Overlord dynamic configuration over an interval of time. Returns an empty array if there are no history records available."}),"\n",(0,s.jsx)(n.h4,{id:"url-5",children:"URL"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"GET"})," ",(0,s.jsx)(n.code,{children:"/druid/indexer/v1/worker/history"})]}),"\n",(0,s.jsx)(n.h4,{id:"query-parameters-1",children:"Query parameters"}),"\n",(0,s.jsx)(n.p,{children:"The endpoint supports a set of optional query parameters to filter results."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"interval"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Type: String"}),"\n",(0,s.jsxs)(n.li,{children:["Limit the results to the specified time interval in ISO 8601 format delimited with ",(0,s.jsx)(n.code,{children:"/"}),". For example, ",(0,s.jsx)(n.code,{children:"2023-07-13/2023-07-19"}),". The default interval is one week. You can change this period by setting ",(0,s.jsx)(n.code,{children:"druid.audit.manager.auditHistoryMillis"})," in the ",(0,s.jsx)(n.code,{children:"runtime.properties"})," file for the Overlord."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"count"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Type: Integer"}),"\n",(0,s.jsxs)(n.li,{children:["Limit the number of results to the last ",(0,s.jsx)(n.code,{children:"n"})," entries."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"responses-5",children:"Responses"}),"\n",(0,s.jsx)(l.A,{children:(0,s.jsx)(t.A,{value:"16",label:"200 SUCCESS",children:(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"Successfully retrieved history"})})})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h4,{id:"sample-request-5",children:"Sample request"}),"\n",(0,s.jsxs)(n.p,{children:["The following example retrieves the dynamic configuration history between ",(0,s.jsx)(n.code,{children:"2022-07-13"})," and ",(0,s.jsx)(n.code,{children:"2024-07-19"}),". The response is limited to 10 entries."]}),"\n",(0,s.jsxs)(l.A,{children:[(0,s.jsx)(t.A,{value:"17",label:"cURL",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:'curl "http://ROUTER_IP:ROUTER_PORT/druid/indexer/v1/worker/history?interval=2022-07-13%2F2024-07-19&count=10"\n'})})}),(0,s.jsx)(t.A,{value:"18",label:"HTTP",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-HTTP",children:"GET /druid/indexer/v1/worker/history?interval=2022-07-13%2F2024-07-19&count=10 HTTP/1.1\nHost: http://ROUTER_IP:ROUTER_PORT\n"})})})]}),"\n",(0,s.jsx)(n.h4,{id:"sample-response-5",children:"Sample response"}),"\n",(0,s.jsxs)(r,{children:[(0,s.jsx)("summary",{children:"View the response"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'[\n    {\n        "key": "worker.config",\n        "type": "worker.config",\n        "auditInfo": {\n            "author": "",\n            "comment": "",\n            "ip": "127.0.0.1"\n        },\n        "payload": "{\\"type\\":\\"default\\",\\"selectStrategy\\":{\\"type\\":\\"fillCapacityWithCategorySpec\\",\\"workerCategorySpec\\":{\\"categoryMap\\":{},\\"strong\\":true}},\\"autoScaler\\":null}",\n        "auditTime": "2023-10-03T21:49:49.991Z"\n    }\n]\n'})})]}),"\n",(0,s.jsx)(n.h3,{id:"get-an-array-of-worker-nodes-in-the-cluster",children:"Get an array of worker nodes in the cluster"}),"\n",(0,s.jsx)(n.p,{children:"Returns an array of all the worker nodes in the cluster along with its corresponding metadata."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"GET"})," ",(0,s.jsx)(n.code,{children:"/druid/indexer/v1/workers"})]}),"\n",(0,s.jsx)(n.h4,{id:"responses-6",children:"Responses"}),"\n",(0,s.jsx)(l.A,{children:(0,s.jsx)(t.A,{value:"19",label:"200 SUCCESS",children:(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"Successfully retrieved worker nodes"})})})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h4,{id:"sample-request-6",children:"Sample request"}),"\n",(0,s.jsxs)(l.A,{children:[(0,s.jsx)(t.A,{value:"20",label:"cURL",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:'curl "http://ROUTER_IP:ROUTER_PORT/druid/indexer/v1/workers"\n'})})}),(0,s.jsx)(t.A,{value:"21",label:"HTTP",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-HTTP",children:"GET /druid/indexer/v1/workers HTTP/1.1\nHost: http://ROUTER_IP:ROUTER_PORT\n"})})})]}),"\n",(0,s.jsx)(n.h4,{id:"sample-response-6",children:"Sample response"}),"\n",(0,s.jsxs)(r,{children:[(0,s.jsx)("summary",{children:"View the response"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'[\n    {\n        "worker": {\n            "scheme": "http",\n            "host": "localhost:8091",\n            "ip": "198.51.100.0",\n            "capacity": 2,\n            "version": "0",\n            "category": "_default_worker_category"\n        },\n        "currCapacityUsed": 0,\n        "currParallelIndexCapacityUsed": 0,\n        "availabilityGroups": [],\n        "runningTasks": [],\n        "lastCompletedTaskTime": "2023-09-29T19:13:05.505Z",\n        "blacklistedUntil": null\n    }\n]\n'})})]}),"\n",(0,s.jsx)(n.h3,{id:"get-scaling-events",children:"Get scaling events"}),"\n",(0,s.jsx)(n.p,{children:"Returns Overlord scaling events if autoscaling runners are in use.\nReturns an empty response body if there are no Overlord scaling events."}),"\n",(0,s.jsx)(n.h4,{id:"url-6",children:"URL"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"GET"})," ",(0,s.jsx)(n.code,{children:"/druid/indexer/v1/scaling"})]}),"\n",(0,s.jsx)(n.h4,{id:"responses-7",children:"Responses"}),"\n",(0,s.jsx)(l.A,{children:(0,s.jsx)(t.A,{value:"22",label:"200 SUCCESS",children:(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"Successfully retrieved scaling events"})})})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h4,{id:"sample-request-7",children:"Sample request"}),"\n",(0,s.jsxs)(l.A,{children:[(0,s.jsx)(t.A,{value:"23",label:"cURL",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:'curl "http://ROUTER_IP:ROUTER_PORT/druid/indexer/v1/scaling"\n'})})}),(0,s.jsx)(t.A,{value:"24",label:"HTTP",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-HTTP",children:"GET /druid/indexer/v1/scaling HTTP/1.1\nHost: http://ROUTER_IP:ROUTER_PORT\n"})})})]}),"\n",(0,s.jsx)(n.h4,{id:"sample-response-7",children:"Sample response"}),"\n",(0,s.jsxs)(n.p,{children:["A successful request returns a ",(0,s.jsx)(n.code,{children:"200 OK"})," response and an array of scaling events."]})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},65537:(e,n,r)=>{r.d(n,{A:()=>R});var i=r(96540),s=r(18215),a=r(65627),l=r(56347),t=r(50372),o=r(30604),c=r(11861),d=r(78749);function u(e){var n,r;return null!=(n=null==(r=i.Children.toArray(e).filter((function(e){return"\n"!==e})).map((function(e){if(!e||(0,i.isValidElement)(e)&&((n=e.props)&&"object"==typeof n&&"value"in n))return e;var n;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))?void 0:r.filter(Boolean))?n:[]}function h(e){var n=e.values,r=e.children;return(0,i.useMemo)((function(){var e=null!=n?n:function(e){return u(e).map((function(e){var n=e.props;return{value:n.value,label:n.label,attributes:n.attributes,default:n.default}}))}(r);return function(e){var n=(0,c.XI)(e,(function(e,n){return e.value===n.value}));if(n.length>0)throw new Error('Docusaurus error: Duplicate values "'+n.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[n,r])}function p(e){var n=e.value;return e.tabValues.some((function(e){return e.value===n}))}function m(e){var n=e.queryString,r=void 0!==n&&n,s=e.groupId,a=(0,l.W6)(),t=function(e){var n=e.queryString,r=void 0!==n&&n,i=e.groupId;if("string"==typeof r)return r;if(!1===r)return null;if(!0===r&&!i)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=i?i:null}({queryString:r,groupId:s});return[(0,o.aZ)(t),(0,i.useCallback)((function(e){if(t){var n=new URLSearchParams(a.location.search);n.set(t,e),a.replace(Object.assign({},a.location,{search:n.toString()}))}}),[t,a])]}function x(e){var n,r,s,a,l=e.defaultValue,o=e.queryString,c=void 0!==o&&o,u=e.groupId,x=h(e),j=(0,i.useState)((function(){return function(e){var n,r=e.defaultValue,i=e.tabValues;if(0===i.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(r){if(!p({value:r,tabValues:i}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+r+'" but none of its children has the corresponding value. Available values are: '+i.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return r}var s=null!=(n=i.find((function(e){return e.default})))?n:i[0];if(!s)throw new Error("Unexpected error: 0 tabValues");return s.value}({defaultValue:l,tabValues:x})})),g=j[0],f=j[1],v=m({queryString:c,groupId:u}),y=v[0],T=v[1],R=(n=function(e){return e?"docusaurus.tab."+e:null}({groupId:u}.groupId),r=(0,d.Dv)(n),s=r[0],a=r[1],[s,(0,i.useCallback)((function(e){n&&a.set(e)}),[n,a])]),S=R[0],b=R[1],O=function(){var e=null!=y?y:S;return p({value:e,tabValues:x})?e:null}();return(0,t.A)((function(){O&&f(O)}),[O]),{selectedValue:g,selectValue:(0,i.useCallback)((function(e){if(!p({value:e,tabValues:x}))throw new Error("Can't select invalid tab value="+e);f(e),T(e),b(e)}),[T,b,x]),tabValues:x}}var j=r(9136);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var f=r(74848);function v(e){var n=e.className,r=e.block,i=e.selectedValue,l=e.selectValue,t=e.tabValues,o=[],c=(0,a.a_)().blockElementScrollPositionUntilNextRender,d=function(e){var n=e.currentTarget,r=o.indexOf(n),s=t[r].value;s!==i&&(c(n),l(s))},u=function(e){var n,r=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":var i,s=o.indexOf(e.currentTarget)+1;r=null!=(i=o[s])?i:o[0];break;case"ArrowLeft":var a,l=o.indexOf(e.currentTarget)-1;r=null!=(a=o[l])?a:o[o.length-1]}null==(n=r)||n.focus()};return(0,f.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.A)("tabs",{"tabs--block":r},n),children:t.map((function(e){var n=e.value,r=e.label,a=e.attributes;return(0,f.jsx)("li",Object.assign({role:"tab",tabIndex:i===n?0:-1,"aria-selected":i===n,ref:function(e){o.push(e)},onKeyDown:u,onClick:d},a,{className:(0,s.A)("tabs__item",g.tabItem,null==a?void 0:a.className,{"tabs__item--active":i===n}),children:null!=r?r:n}),n)}))})}function y(e){var n=e.lazy,r=e.children,a=e.selectedValue,l=(Array.isArray(r)?r:[r]).filter(Boolean);if(n){var t=l.find((function(e){return e.props.value===a}));return t?(0,i.cloneElement)(t,{className:(0,s.A)("margin-top--md",t.props.className)}):null}return(0,f.jsx)("div",{className:"margin-top--md",children:l.map((function(e,n){return(0,i.cloneElement)(e,{key:n,hidden:e.props.value!==a})}))})}function T(e){var n=x(e);return(0,f.jsxs)("div",{className:(0,s.A)("tabs-container",g.tabList),children:[(0,f.jsx)(v,Object.assign({},n,e)),(0,f.jsx)(y,Object.assign({},n,e))]})}function R(e){var n=(0,j.A)();return(0,f.jsx)(T,Object.assign({},e,{children:u(e.children)}),String(n))}},79329:(e,n,r)=>{r.d(n,{A:()=>l});r(96540);var i=r(18215);const s={tabItem:"tabItem_Ymn6"};var a=r(74848);function l(e){var n=e.children,r=e.hidden,l=e.className;return(0,a.jsx)("div",{role:"tabpanel",className:(0,i.A)(s.tabItem,l),hidden:r,children:n})}}}]);