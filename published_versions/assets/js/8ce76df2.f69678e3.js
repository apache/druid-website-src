"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[338],{26335:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>a,contentTitle:()=>c,default:()=>u,frontMatter:()=>o,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"multi-stage-query/security","title":"SQL-based ingestion security","description":"\x3c!--","source":"@site/docs/33.0.0/multi-stage-query/security.md","sourceDirName":"multi-stage-query","slug":"/multi-stage-query/security","permalink":"/docs/33.0.0/multi-stage-query/security","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"security","title":"SQL-based ingestion security","sidebar_label":"Security"},"sidebar":"docs","previous":{"title":"Key concepts","permalink":"/docs/33.0.0/multi-stage-query/concepts"},"next":{"title":"Examples","permalink":"/docs/33.0.0/multi-stage-query/examples"}}');var r=t(74848),i=t(28453);const o={id:"security",title:"SQL-based ingestion security",sidebar_label:"Security"},c=void 0,a={},d=[{value:"Permissions for durable storage",id:"permissions-for-durable-storage",level:2},{value:"S3",id:"s3",level:3},{value:"Azure",id:"azure",level:3}];function l(e){const s={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.admonition,{type:"info",children:(0,r.jsxs)(s.p,{children:["This page describes SQL-based batch ingestion using the ",(0,r.jsx)(s.a,{href:"/docs/33.0.0/multi-stage-query/",children:(0,r.jsx)(s.code,{children:"druid-multi-stage-query"})}),"\nextension, new in Druid 24.0. Refer to the ",(0,r.jsx)(s.a,{href:"/docs/33.0.0/ingestion/#batch",children:"ingestion methods"})," table to determine which\ningestion method is right for you."]})}),"\n",(0,r.jsx)(s.p,{children:"All authenticated users can use the multi-stage query task engine (MSQ task engine) through the UI and API if the\nextension is loaded. However, without additional permissions, users are not able to issue queries that read or write\nDruid datasources or external data. The permission needed depends on what the user is trying to do."}),"\n",(0,r.jsx)(s.p,{children:"To submit a query:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"SELECT from a Druid datasource requires the READ DATASOURCE permission on that datasource."}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.a,{href:"/docs/33.0.0/multi-stage-query/reference#insert",children:"INSERT"})," or ",(0,r.jsx)(s.a,{href:"/docs/33.0.0/multi-stage-query/reference#replace",children:"REPLACE"})," into a Druid datasource requires the WRITE DATASOURCE\npermission on that datasource."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.a,{href:"/docs/33.0.0/multi-stage-query/reference#extern-function",children:"EXTERN"}),' and the input-source-specific table functions require READ permission on a\nresource named "EXTERNAL" with type "EXTERNAL". Users without the correct\npermission encounter a 403 error when trying to run queries that include ',(0,r.jsx)(s.code,{children:"EXTERN"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(s.p,{children:["Once a query is submitted, it executes as a ",(0,r.jsx)(s.a,{href:"/docs/33.0.0/multi-stage-query/concepts#execution-flow",children:(0,r.jsx)(s.code,{children:"query_controller"})})," task. Query tasks that\nusers submit to the MSQ task engine are Overlord tasks, so they follow the Overlord's security model. This means that\nusers with access to the Overlord API can perform some actions even if they didn't submit the query, including\nretrieving status or canceling a query. For more information about the Overlord API and the task API, see ",(0,r.jsx)(s.a,{href:"/docs/33.0.0/api-reference/sql-ingestion-api",children:"APIs for\nSQL-based ingestion"}),"."]}),"\n",(0,r.jsx)(s.admonition,{type:"info",children:(0,r.jsxs)(s.p,{children:["Keep in mind that any user with access to Overlord APIs can submit ",(0,r.jsx)(s.code,{children:"query_controller"})," tasks with only the WRITE DATASOURCE permission."]})}),"\n",(0,r.jsx)(s.p,{children:"Depending on what a user is trying to do, they might also need the following permissions:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"INSERT"})," or ",(0,r.jsx)(s.code,{children:"REPLACE"})," queries: Users must have DATASOURCE READ permission on the output datasource."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"SELECT"})," queries: Users must have READ permission on the ",(0,r.jsx)(s.code,{children:"__query_select"})," datasource, which is a stub datasource that gets created."]}),"\n"]}),"\n",(0,r.jsx)(s.h2,{id:"permissions-for-durable-storage",children:"Permissions for durable storage"}),"\n",(0,r.jsx)(s.p,{children:"The MSQ task engine can use Amazon S3 or Azure Blob Storage to store intermediate files when running queries. To upload, read, move and delete these intermediate files, the MSQ task engine requires certain permissions specific to the storage provider."}),"\n",(0,r.jsx)(s.h3,{id:"s3",children:"S3"}),"\n",(0,r.jsx)(s.p,{children:"The MSQ task engine needs the following permissions for pushing,  fetching, and removing intermediate stage results to and from S3:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"s3:GetObject"})," to retrieve files. Note that ",(0,r.jsx)(s.code,{children:"GetObject"})," also requires read permission on the object that gets retrieved."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"s3:PutObject"})," to upload files."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"s3:AbortMultipartUpload"})," to cancel the upload of files"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"s3:DeleteObject"})," to delete files when they're no longer needed."]}),"\n"]}),"\n",(0,r.jsx)(s.h3,{id:"azure",children:"Azure"}),"\n",(0,r.jsx)(s.p,{children:"The MSQ task engine needs the following permissions for pushing, fetching, and removing intermediate stage results to and from Azure:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"Microsoft.Storage/storageAccounts/blobServices/containers/blobs/read"})," to read and list files in durable storage"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"Microsoft.Storage/storageAccounts/blobServices/containers/blobs/write"})," to write files in durable storage."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"Microsoft.Storage/storageAccounts/blobServices/containers/blobs/add/action"})," to create files in durable storage."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"Microsoft.Storage/storageAccounts/blobServices/containers/blobs/delete"})," to delete files when they're no longer needed."]}),"\n"]})]})}function u(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},28453:(e,s,t)=>{t.d(s,{R:()=>o,x:()=>c});var n=t(96540);const r={},i=n.createContext(r);function o(e){const s=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),n.createElement(i.Provider,{value:s},e.children)}}}]);