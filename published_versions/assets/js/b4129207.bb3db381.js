"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[5458],{28453:(e,t,n)=>{n.d(t,{R:()=>d,x:()=>o});var i=n(96540);const s={},r=i.createContext(s);function d(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),i.createElement(r.Provider,{value:t},e.children)}},57951:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>l,frontMatter:()=>d,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"development/extensions-core/druid-pac4j","title":"Druid pac4j based Security extension","description":"\x3c!--","source":"@site/docs/latest/development/extensions-core/druid-pac4j.md","sourceDirName":"development/extensions-core","slug":"/development/extensions-core/druid-pac4j","permalink":"/docs/latest/development/extensions-core/druid-pac4j","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"druid-pac4j","title":"Druid pac4j based Security extension"}}');var s=n(74848),r=n(28453);const d={id:"druid-pac4j",title:"Druid pac4j based Security extension"},o=void 0,c={},a=[{value:"Configuration",id:"configuration",level:2},{value:"Creating an Authenticator",id:"creating-an-authenticator",level:3},{value:"Properties",id:"properties",level:3}];function h(e){const t={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(t.p,{children:["Apache Druid Extension to enable ",(0,s.jsx)(t.a,{href:"https://openid.net/connect/",children:"OpenID Connect"})," based Authentication for Druid Processes using ",(0,s.jsx)(t.a,{href:"https://github.com/pac4j/pac4j",children:"pac4j"})," as the underlying client library.\nThis can be used  with any authentication server that supports same e.g. ",(0,s.jsx)(t.a,{href:"https://developer.okta.com/",children:"Okta"}),".\nThe pac4j authenticator should only be used at the router node to enable a group of users in existing authentication server to interact with Druid cluster, using the ",(0,s.jsx)(t.a,{href:"/docs/latest/operations/web-console",children:"web console"}),"."]}),"\n",(0,s.jsxs)(t.p,{children:["This extension also provides a JWT authenticator that validates ",(0,s.jsx)(t.a,{href:"https://openid.net/specs/openid-connect-core-1_0.html#CodeIDToken",children:"ID Tokens"})," associated with a request. ID Tokens are attached to the request under the ",(0,s.jsx)(t.code,{children:"Authorization"})," header with the bearer token prefix - ",(0,s.jsx)(t.code,{children:"Bearer "}),". This authenticator is intended for services to talk to Druid by initially authenticating with an OIDC server to retrieve the ID Token which is then attached to every Druid request."]}),"\n",(0,s.jsx)(t.p,{children:"This extension does not support JDBC client authentication."}),"\n",(0,s.jsx)(t.h2,{id:"configuration",children:"Configuration"}),"\n",(0,s.jsx)(t.h3,{id:"creating-an-authenticator",children:"Creating an Authenticator"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:'#Create a pac4j web user authenticator\ndruid.auth.authenticatorChain=["pac4j"]\ndruid.auth.authenticator.pac4j.type=pac4j\n\n#Create a JWT token authenticator\ndruid.auth.authenticatorChain=["jwt"]\ndruid.auth.authenticator.jwt.type=jwt\n'})}),"\n",(0,s.jsx)(t.h3,{id:"properties",children:"Properties"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Property"}),(0,s.jsx)(t.th,{children:"Description"}),(0,s.jsx)(t.th,{children:"Default"}),(0,s.jsx)(t.th,{children:"required"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"druid.auth.pac4j.cookiePassphrase"})}),(0,s.jsxs)(t.td,{children:["Passphrase for encrypting the cookies used to manage authentication session with browser. It can be provided as plaintext string or the (recommended) ",(0,s.jsx)(t.a,{href:"/docs/latest/operations/password-provider",children:"Password Provider"}),"."]}),(0,s.jsx)(t.td,{children:"none"}),(0,s.jsx)(t.td,{children:"Yes"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"druid.auth.pac4j.readTimeout"})}),(0,s.jsx)(t.td,{children:"Socket connect and read timeout duration used when communicating with authentication server"}),(0,s.jsx)(t.td,{children:"PT5S"}),(0,s.jsx)(t.td,{children:"No"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"druid.auth.pac4j.enableCustomSslContext"})}),(0,s.jsxs)(t.td,{children:["Whether to use custom SSLContext setup via ",(0,s.jsx)(t.a,{href:"/docs/latest/development/extensions-core/simple-client-sslcontext",children:"simple-client-sslcontext"})," extension which must be added to extensions list when this property is set to true."]}),(0,s.jsx)(t.td,{children:"false"}),(0,s.jsx)(t.td,{children:"No"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"druid.auth.pac4j.oidc.clientID"})}),(0,s.jsx)(t.td,{children:"OAuth Client Application id."}),(0,s.jsx)(t.td,{children:"none"}),(0,s.jsx)(t.td,{children:"Yes"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"druid.auth.pac4j.oidc.clientSecret"})}),(0,s.jsxs)(t.td,{children:["OAuth Client Application secret. It can be provided as plaintext string or The ",(0,s.jsx)(t.a,{href:"/docs/latest/operations/password-provider",children:"Password Provider"}),"."]}),(0,s.jsx)(t.td,{children:"none"}),(0,s.jsx)(t.td,{children:"Yes"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"druid.auth.pac4j.oidc.discoveryURI"})}),(0,s.jsxs)(t.td,{children:["discovery URI for fetching OP metadata ",(0,s.jsx)(t.a,{href:"http://openid.net/specs/openid-connect-discovery-1_0.html",children:"see this"}),"."]}),(0,s.jsx)(t.td,{children:"none"}),(0,s.jsx)(t.td,{children:"Yes"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"druid.auth.pac4j.oidc.oidcClaim"})}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.a,{href:"https://openid.net/specs/openid-connect-core-1_0.html#Claims",children:"claim"})," that will be extracted from the ID Token after validation."]}),(0,s.jsx)(t.td,{children:"name"}),(0,s.jsx)(t.td,{children:"No"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"druid.auth.pac4j.oidc.scope"})}),(0,s.jsx)(t.td,{children:"scope is used by an application during authentication to authorize access to a user's details."}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"openid profile email"})}),(0,s.jsx)(t.td,{children:"No"})]})]})]}),"\n",(0,s.jsx)(t.admonition,{type:"info",children:(0,s.jsxs)(t.p,{children:["Users must set a strong passphrase to ensure that an attacker is not able to guess it simply by brute force.\nA compromised passphrase may allow an attacker to read and manipulate session cookies.\nFor more details, see ",(0,s.jsx)(t.a,{href:"https://nvd.nist.gov/vuln/detail/CVE-2024-45384",children:"CVE-2024-45384"}),"."]})})]})}function l(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}}}]);