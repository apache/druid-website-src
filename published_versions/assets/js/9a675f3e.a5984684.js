"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[4729],{28453:(e,s,t)=>{t.d(s,{R:()=>i,x:()=>c});var d=t(96540);const n={},r=d.createContext(n);function i(e){const s=d.useContext(r);return d.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),d.createElement(r.Provider,{value:s},e.children)}},78371:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>i,metadata:()=>d,toc:()=>o});const d=JSON.parse('{"id":"development/extensions-contrib/cloudfiles","title":"Rackspace Cloud Files","description":"\x3c!--","source":"@site/docs/33.0.0/development/extensions-contrib/cloudfiles.md","sourceDirName":"development/extensions-contrib","slug":"/development/extensions-contrib/cloudfiles","permalink":"/docs/33.0.0/development/extensions-contrib/cloudfiles","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"cloudfiles","title":"Rackspace Cloud Files"}}');var n=t(74848),r=t(28453);const i={id:"cloudfiles",title:"Rackspace Cloud Files"},c=void 0,l={},o=[{value:"Deep Storage",id:"deep-storage",level:2}];function a(e){const s={a:"a",code:"code",h2:"h2",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(s.p,{children:["To use this Apache Druid extension, ",(0,n.jsx)(s.a,{href:"/docs/33.0.0/configuration/extensions#loading-extensions",children:"include"})," ",(0,n.jsx)(s.code,{children:"druid-cloudfiles-extensions"})," in the extensions load list."]}),"\n",(0,n.jsx)(s.h2,{id:"deep-storage",children:"Deep Storage"}),"\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.a,{href:"http://www.rackspace.com/cloud/files/",children:"Rackspace Cloud Files"})," is another option for deep storage. This requires some additional Druid configuration."]}),"\n",(0,n.jsxs)(s.table,{children:[(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{children:"Property"}),(0,n.jsx)(s.th,{children:"Possible Values"}),(0,n.jsx)(s.th,{children:"Description"}),(0,n.jsx)(s.th,{children:"Default"})]})}),(0,n.jsxs)(s.tbody,{children:[(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"druid.storage.type"})}),(0,n.jsx)(s.td,{children:"cloudfiles"}),(0,n.jsx)(s.td,{}),(0,n.jsx)(s.td,{children:"Must be set."})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"druid.storage.region"})}),(0,n.jsx)(s.td,{}),(0,n.jsx)(s.td,{children:"Rackspace Cloud Files region."}),(0,n.jsx)(s.td,{children:"Must be set."})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"druid.storage.container"})}),(0,n.jsx)(s.td,{}),(0,n.jsx)(s.td,{children:"Rackspace Cloud Files container name."}),(0,n.jsx)(s.td,{children:"Must be set."})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"druid.storage.basePath"})}),(0,n.jsx)(s.td,{}),(0,n.jsx)(s.td,{children:"Rackspace Cloud Files base path to use in the container."}),(0,n.jsx)(s.td,{children:"Must be set."})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"druid.storage.operationMaxRetries"})}),(0,n.jsx)(s.td,{}),(0,n.jsx)(s.td,{children:"Number of tries before cancel a Rackspace operation."}),(0,n.jsx)(s.td,{children:"10"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"druid.cloudfiles.userName"})}),(0,n.jsx)(s.td,{}),(0,n.jsx)(s.td,{children:"Rackspace Cloud username"}),(0,n.jsx)(s.td,{children:"Must be set."})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"druid.cloudfiles.apiKey"})}),(0,n.jsx)(s.td,{}),(0,n.jsx)(s.td,{children:"Rackspace Cloud API key."}),(0,n.jsx)(s.td,{children:"Must be set."})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"druid.cloudfiles.provider"})}),(0,n.jsx)(s.td,{children:"rackspace-cloudfiles-us,rackspace-cloudfiles-uk"}),(0,n.jsx)(s.td,{children:"Name of the provider depending on the region."}),(0,n.jsx)(s.td,{children:"Must be set."})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"druid.cloudfiles.useServiceNet"})}),(0,n.jsx)(s.td,{children:"true,false"}),(0,n.jsx)(s.td,{children:"Whether to use the internal service net."}),(0,n.jsx)(s.td,{children:"true"})]})]})]})]})}function h(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(a,{...e})}):a(e)}}}]);