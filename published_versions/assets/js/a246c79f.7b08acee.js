"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[5443],{1838:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"development/extensions-contrib/tdigestsketch-quantiles","title":"T-Digest Quantiles Sketch module","description":"\x3c!--","source":"@site/docs/latest/development/extensions-contrib/tdigestsketch-quantiles.md","sourceDirName":"development/extensions-contrib","slug":"/development/extensions-contrib/tdigestsketch-quantiles","permalink":"/docs/latest/development/extensions-contrib/tdigestsketch-quantiles","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"tdigestsketch-quantiles","title":"T-Digest Quantiles Sketch module"}}');var i=n(74848),r=n(28453);const a={id:"tdigestsketch-quantiles",title:"T-Digest Quantiles Sketch module"},c=void 0,d={},l=[{value:"Aggregator",id:"aggregator",level:3},{value:"Post Aggregators",id:"post-aggregators",level:3},{value:"Quantiles",id:"quantiles",level:4},{value:"SQL functions",id:"sql-functions",level:3},{value:"TDIGEST_GENERATE_SKETCH",id:"tdigest_generate_sketch",level:4},{value:"TDIGEST_QUANTILE",id:"tdigest_quantile",level:4}];function o(e){const t={a:"a",code:"code",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(t.p,{children:["This module provides Apache Druid approximate sketch aggregators based on T-Digest.\nT-Digest (",(0,i.jsx)(t.a,{href:"https://github.com/tdunning/t-digest",children:"https://github.com/tdunning/t-digest"}),") is a popular data structure for accurate on-line accumulation of\nrank-based statistics such as quantiles and trimmed means.\nThe data structure is also designed for parallel programming use cases like distributed aggregations or map reduce jobs by making combining two intermediate t-digests easy and efficient."]}),"\n",(0,i.jsx)(t.p,{children:"The tDigestSketch aggregator is capable of generating sketches from raw numeric values as well as\naggregating/combining pre-generated T-Digest sketches generated using the tDigestSketch aggregator itself.\nWhile one can generate sketches on the fly during the query time itself, it generally is more performant\nto generate sketches during ingestion time itself and then combining them during query time.\nThe module also provides a postAggregator, quantilesFromTDigestSketch, that can be used to compute approximate\nquantiles from T-Digest sketches generated by the tDigestSketch aggregator."}),"\n",(0,i.jsxs)(t.p,{children:["To use this aggregator, make sure you ",(0,i.jsx)(t.a,{href:"/docs/latest/configuration/extensions#loading-extensions",children:"include"})," the extension in your config file:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:'druid.extensions.loadList=["druid-tdigestsketch"]\n'})}),"\n",(0,i.jsx)(t.h3,{id:"aggregator",children:"Aggregator"}),"\n",(0,i.jsx)(t.p,{children:"The result of the aggregation is a T-Digest sketch that is built ingesting numeric values from the raw data or from\ncombining pre-generated T-Digest sketches."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-json",children:'{\n  "type" : "tDigestSketch",\n  "name" : <output_name>,\n  "fieldName" : <metric_name>,\n  "compression": <parameter that controls size and accuracy>\n }\n'})}),"\n",(0,i.jsx)(t.p,{children:"Example:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-json",children:'{\n\t"type": "tDigestSketch",\n\t"name": "sketch",\n\t"fieldName": "session_duration",\n\t"compression": 200\n}\n'})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-json",children:'{\n\t"type": "tDigestSketch",\n\t"name": "combined_sketch",\n\t"fieldName": <input-column>,\n\t"compression": 200\n}\n'})}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"property"}),(0,i.jsx)(t.th,{children:"description"}),(0,i.jsx)(t.th,{children:"required?"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"type"}),(0,i.jsx)(t.td,{children:'This String should always be "tDigestSketch"'}),(0,i.jsx)(t.td,{children:"yes"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"name"}),(0,i.jsx)(t.td,{children:"A String for the output (result) name of the calculation."}),(0,i.jsx)(t.td,{children:"yes"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"fieldName"}),(0,i.jsx)(t.td,{children:"A String for the name of the input field containing raw numeric values or pre-generated T-Digest sketches."}),(0,i.jsx)(t.td,{children:"yes"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"compression"}),(0,i.jsx)(t.td,{children:"Parameter that determines the accuracy and size of the sketch. Higher compression means higher accuracy but more space to store sketches."}),(0,i.jsx)(t.td,{children:"no, defaults to 100"})]})]})]}),"\n",(0,i.jsx)(t.h3,{id:"post-aggregators",children:"Post Aggregators"}),"\n",(0,i.jsx)(t.h4,{id:"quantiles",children:"Quantiles"}),"\n",(0,i.jsx)(t.p,{children:"This returns an array of quantiles corresponding to a given array of fractions."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-json",children:'{\n  "type"  : "quantilesFromTDigestSketch",\n  "name": <output name>,\n  "field"  : <post aggregator that refers to a TDigestSketch (fieldAccess or another post aggregator)>,\n  "fractions" : <array of fractions>\n}\n'})}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"property"}),(0,i.jsx)(t.th,{children:"description"}),(0,i.jsx)(t.th,{children:"required?"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"type"}),(0,i.jsx)(t.td,{children:'This String should always be "quantilesFromTDigestSketch"'}),(0,i.jsx)(t.td,{children:"yes"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"name"}),(0,i.jsx)(t.td,{children:"A String for the output (result) name of the calculation."}),(0,i.jsx)(t.td,{children:"yes"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"field"}),(0,i.jsx)(t.td,{children:"A field reference pointing to the field aggregated/combined T-Digest sketch."}),(0,i.jsx)(t.td,{children:"yes"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"fractions"}),(0,i.jsx)(t.td,{children:"Non-empty array of fractions between 0 and 1"}),(0,i.jsx)(t.td,{children:"yes"})]})]})]}),"\n",(0,i.jsx)(t.p,{children:"Example:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-json",children:'{\n\t"queryType": "groupBy",\n\t"dataSource": "test_datasource",\n\t"granularity": "ALL",\n\t"dimensions": [],\n\t"aggregations": [{\n\t\t"type": "tDigestSketch",\n\t\t"name": "merged_sketch",\n\t\t"fieldName": "ingested_sketch",\n\t\t"compression": 200\n\t}],\n\t"postAggregations": [{\n\t\t"type": "quantilesFromTDigestSketch",\n\t\t"name": "quantiles",\n\t\t"fractions": [0, 0.5, 1],\n\t\t"field": {\n\t\t\t"type": "fieldAccess",\n\t\t\t"fieldName": "merged_sketch"\n\t\t}\n\t}],\n\t"intervals": ["2016-01-01T00:00:00.000Z/2016-01-31T00:00:00.000Z"]\n}\n'})}),"\n",(0,i.jsx)(t.p,{children:"Similar to quantilesFromTDigestSketch except it takes in a single fraction for computing quantile."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-json",children:'{\n  "type"  : "quantileFromTDigestSketch",\n  "name": <output name>,\n  "field"  : <post aggregator that refers to a TDigestSketch (fieldAccess or another post aggregator)>,\n  "fraction" : <value>\n}\n'})}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"property"}),(0,i.jsx)(t.th,{children:"description"}),(0,i.jsx)(t.th,{children:"required?"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"type"}),(0,i.jsx)(t.td,{children:'This String should always be "quantileFromTDigestSketch"'}),(0,i.jsx)(t.td,{children:"yes"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"name"}),(0,i.jsx)(t.td,{children:"A String for the output (result) name of the calculation."}),(0,i.jsx)(t.td,{children:"yes"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"field"}),(0,i.jsx)(t.td,{children:"A field reference pointing to the field aggregated/combined T-Digest sketch."}),(0,i.jsx)(t.td,{children:"yes"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"fraction"}),(0,i.jsx)(t.td,{children:"Decimal value between 0 and 1"}),(0,i.jsx)(t.td,{children:"yes"})]})]})]}),"\n",(0,i.jsx)(t.h3,{id:"sql-functions",children:"SQL functions"}),"\n",(0,i.jsx)(t.p,{children:"Once you load the T-Digest extension, you can use the following SQL functions."}),"\n",(0,i.jsx)(t.h4,{id:"tdigest_generate_sketch",children:"TDIGEST_GENERATE_SKETCH"}),"\n",(0,i.jsx)(t.p,{children:"Builds a T-Digest sketch on values produced by an expression.\nCompression parameter (default value 100) determines the accuracy and size of the sketch.\nHigher compression provides higher accuracy but requires more storage space."}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Syntax"}),": ",(0,i.jsx)(t.code,{children:"TDIGEST_GENERATE_SKETCH(expr, [compression])"})]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Default"}),": Empty Base64-encoded T-Digest sketch string"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Function type"}),": ",(0,i.jsx)(t.a,{href:"/docs/latest/querying/sql-aggregations",children:"Aggregation"})]}),"\n"]}),"\n",(0,i.jsx)(t.h4,{id:"tdigest_quantile",children:"TDIGEST_QUANTILE"}),"\n",(0,i.jsx)(t.p,{children:"Builds a T-Digest sketch on values produced by an expression and returns the value for the quantile.\nCompression parameter (default value 100) determines the accuracy and size of the sketch.\nHigher compression provides higher accuracy but requires more storage space."}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Syntax"}),": ",(0,i.jsx)(t.code,{children:"TDIGEST_QUANTILE(expr, quantileFraction, [compression])"})]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Default"}),": ",(0,i.jsx)(t.code,{children:"Double.NaN"})]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Function type"}),": ",(0,i.jsx)(t.a,{href:"/docs/latest/querying/sql-aggregations",children:"Aggregation"})]}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>c});var s=n(96540);const i={},r=s.createContext(i);function a(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);