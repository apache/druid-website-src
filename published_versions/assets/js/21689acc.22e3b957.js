"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[8986],{2629:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>d,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"querying/sql-multivalue-string-functions","title":"SQL multi-value string functions","description":"\x3c!--","source":"@site/docs/33.0.0/querying/sql-multivalue-string-functions.md","sourceDirName":"querying","slug":"/querying/sql-multivalue-string-functions","permalink":"/docs/33.0.0/querying/sql-multivalue-string-functions","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"sql-multivalue-string-functions","title":"SQL multi-value string functions","sidebar_label":"Multi-value string functions"},"sidebar":"docs","previous":{"title":"Array functions","permalink":"/docs/33.0.0/querying/sql-array-functions"},"next":{"title":"JSON functions","permalink":"/docs/33.0.0/querying/sql-json-functions"}}');var t=n(74848),i=n(28453);const d={id:"sql-multivalue-string-functions",title:"SQL multi-value string functions",sidebar_label:"Multi-value string functions"},c=void 0,l={},a=[];function o(e){const r={a:"a",admonition:"admonition",code:"code",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.admonition,{type:"info",children:(0,t.jsxs)(r.p,{children:["Apache Druid supports two query languages: Druid SQL and ",(0,t.jsx)(r.a,{href:"/docs/33.0.0/querying/",children:"native queries"}),".\nThis document describes the SQL language."]})}),"\n",(0,t.jsxs)(r.p,{children:["Druid supports string dimensions containing multiple values.\nThis page describes the operations you can perform on multi-value string dimensions using ",(0,t.jsx)(r.a,{href:"/docs/33.0.0/querying/sql",children:"Druid SQL"}),".\nSee ",(0,t.jsx)(r.a,{href:"/docs/33.0.0/querying/sql-data-types#multi-value-strings",children:"SQL multi-value strings"})," and native ",(0,t.jsx)(r.a,{href:"/docs/33.0.0/querying/multi-value-dimensions",children:"Multi-value dimensions"})," for more information."]}),"\n",(0,t.jsxs)(r.p,{children:["All array references in the multi-value string function documentation can refer to multi-value string columns or\n",(0,t.jsx)(r.code,{children:"ARRAY"})," types. These functions are largely identical to the ",(0,t.jsx)(r.a,{href:"/docs/33.0.0/querying/sql-array-functions",children:"array functions"}),", but use\n",(0,t.jsx)(r.code,{children:"VARCHAR"})," types and behavior. Multi-value strings can also be converted to ",(0,t.jsx)(r.code,{children:"ARRAY"})," types using ",(0,t.jsx)(r.code,{children:"MV_TO_ARRAY"}),", and\n",(0,t.jsx)(r.code,{children:"ARRAY"})," into multi-value strings via ",(0,t.jsx)(r.code,{children:"ARRAY_TO_MV"}),". For additional details about ",(0,t.jsx)(r.code,{children:"ARRAY"})," types, see\n",(0,t.jsxs)(r.a,{href:"/docs/33.0.0/querying/sql-data-types#arrays",children:[(0,t.jsx)(r.code,{children:"ARRAY"})," data type documentation"]}),"."]}),"\n",(0,t.jsxs)(r.table,{children:[(0,t.jsx)(r.thead,{children:(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.th,{children:"Function"}),(0,t.jsx)(r.th,{children:"Description"})]})}),(0,t.jsxs)(r.tbody,{children:[(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"MV_FILTER_ONLY(expr, arr)"})}),(0,t.jsxs)(r.td,{children:["Filters multi-value ",(0,t.jsx)(r.code,{children:"expr"})," to include only values contained in array ",(0,t.jsx)(r.code,{children:"arr"}),"."]})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"MV_FILTER_NONE(expr, arr)"})}),(0,t.jsxs)(r.td,{children:["Filters multi-value ",(0,t.jsx)(r.code,{children:"expr"})," to include no values contained in array ",(0,t.jsx)(r.code,{children:"arr"}),"."]})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"MV_LENGTH(arr)"})}),(0,t.jsx)(r.td,{children:"Returns length of the array expression."})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"MV_CONTAINS(arr, expr)"})}),(0,t.jsxs)(r.td,{children:["If ",(0,t.jsx)(r.code,{children:"expr"})," is a scalar type, returns true if ",(0,t.jsx)(r.code,{children:"arr"})," contains ",(0,t.jsx)(r.code,{children:"expr"}),". If ",(0,t.jsx)(r.code,{children:"expr"})," is an array, returns true if ",(0,t.jsx)(r.code,{children:"arr"})," contains all elements of ",(0,t.jsx)(r.code,{children:"expr"}),". Otherwise returns false."]})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"MV_OVERLAP(arr1, arr2)"})}),(0,t.jsxs)(r.td,{children:["Returns true if ",(0,t.jsx)(r.code,{children:"arr1"})," and ",(0,t.jsx)(r.code,{children:"arr2"})," have any elements in common, else false."]})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"MV_OFFSET(arr, long)"})}),(0,t.jsx)(r.td,{children:"Returns the array element at the 0-based index supplied, or null for an out of range index."})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"MV_OFFSET_OF(arr, expr)"})}),(0,t.jsxs)(r.td,{children:["Returns the 0-based index of the first occurrence of ",(0,t.jsx)(r.code,{children:"expr"})," in the array. If no matching elements exist in the array, returns ",(0,t.jsx)(r.code,{children:"null"}),"."]})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"MV_ORDINAL(arr, long)"})}),(0,t.jsx)(r.td,{children:"Returns the array element at the 1-based index supplied, or null for an out of range index."})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"MV_ORDINAL_OF(arr, expr)"})}),(0,t.jsxs)(r.td,{children:["Returns the 1-based index of the first occurrence of ",(0,t.jsx)(r.code,{children:"expr"})," in the array. If no matching elements exist in the array, returns ",(0,t.jsx)(r.code,{children:"null"}),"."]})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"MV_PREPEND(expr, arr)"})}),(0,t.jsxs)(r.td,{children:["Adds ",(0,t.jsx)(r.code,{children:"expr"})," to the beginning of ",(0,t.jsx)(r.code,{children:"arr"}),", the resulting array type determined by the type ",(0,t.jsx)(r.code,{children:"arr"}),"."]})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"MV_APPEND(arr, expr)"})}),(0,t.jsxs)(r.td,{children:["Appends ",(0,t.jsx)(r.code,{children:"expr"})," to ",(0,t.jsx)(r.code,{children:"arr"}),", the resulting array type determined by the type of ",(0,t.jsx)(r.code,{children:"arr"}),"."]})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"MV_CONCAT(arr1, arr2)"})}),(0,t.jsxs)(r.td,{children:["Concatenates ",(0,t.jsx)(r.code,{children:"arr2"})," to ",(0,t.jsx)(r.code,{children:"arr1"}),". The resulting array type is determined by the type of ",(0,t.jsx)(r.code,{children:"arr1"}),"."]})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"MV_SLICE(arr, start, end)"})}),(0,t.jsxs)(r.td,{children:["Returns the subarray of ",(0,t.jsx)(r.code,{children:"arr"})," from the zero-based index of ",(0,t.jsx)(r.code,{children:"start"})," (inclusive) to ",(0,t.jsx)(r.code,{children:"end"})," (exclusive). Returns null when ",(0,t.jsx)(r.code,{children:"start"})," is less than 0, greater than the array length, or greater than ",(0,t.jsx)(r.code,{children:"end"}),". When ",(0,t.jsx)(r.code,{children:"end"})," is greater than the array length, null values are appended to the subarray."]})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"MV_TO_STRING(arr, str)"})}),(0,t.jsxs)(r.td,{children:["Joins all elements of ",(0,t.jsx)(r.code,{children:"arr"})," by the delimiter specified by ",(0,t.jsx)(r.code,{children:"str"}),"."]})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"STRING_TO_MV(str1, str2)"})}),(0,t.jsxs)(r.td,{children:["Splits ",(0,t.jsx)(r.code,{children:"str1"})," into an array on the delimiter specified by ",(0,t.jsx)(r.code,{children:"str2"}),", which is a regular expression."]})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"MV_TO_ARRAY(str)"})}),(0,t.jsxs)(r.td,{children:["Converts a multi-value string from a ",(0,t.jsx)(r.code,{children:"VARCHAR"})," to a ",(0,t.jsx)(r.code,{children:"VARCHAR ARRAY"}),"."]})]})]})]})]})}function h(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}},28453:(e,r,n)=>{n.d(r,{R:()=>d,x:()=>c});var s=n(96540);const t={},i=s.createContext(t);function d(e){const r=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),s.createElement(i.Provider,{value:r},e.children)}}}]);